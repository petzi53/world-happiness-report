{
  "hash": "3bf91609ac2c3a592e138dd9a5ec66e7",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute:\n  cache: false\n---\n\n\n\n\n\n# Regions and their Countries {#sec-02-countries-in-regions}\n\n\n\n\n\n\n\n\n\n\n\n## Objectives {.unnumbered}\n\n::::: my-objectives\n::: my-objectives-header\nCountry and Regions: Classifications for countries\n:::\n\n::: my-objectives-container\n\nI aim to compare different aspects of \ncountries. I want, for instance, to know how well Austria is doing\ncompared to other European countries, the other member states of the\nEuropean Union, or other OECD countries. It is, therefore, vital to have\na consistent categorization system with different grouping schemes.\n\nMy objective for this chapter are:\n\n1.  Understanding the country classification used by my <a class='glossary' title='The World Happiness Reports are a partnership of Gallup, the Oxford Wellbeing Research Centre, the UN Sustainable Development Solutions Network, and the WHR’s Editorial Board. The report is produced under the editorial control of the WHR Editorial Board. The Reports reflects a worldwide demand for more attention to happiness and well-being as criteria for government policy. It reviews the state of happiness in the world today and shows how the science of happiness explains personal and national variations in happiness. (https://worldhappiness.report/about/)'>WHR</a> data sources (@sec-02-whr-classification).\n2.  Inspecting different approaches (@sec-02-official-classifications) to classify countries by\n    international organizations:\n    - World Bank and (@sec-02-inspect-wb)\n    - United Nations Statistics Division (@sec-02-inspect-unsd)\n3.  Integrating and harmonizing the official country classifications with the WHR data country names so that the dataset includes unofficial (WHR) regions but conforms otherwise to the internationally recognized and approved systems (@sec-02-combine-whr-with-m49) and (@sec-02-combine-whr-with-wb).\n4. The final result is the dataset `whr_final.rds` (@sec-02-final-dataset) containing 19379 rows and 34 columns.\n5. In the summary I will show which countries belong to which regions by all official grouping classifications (@sec-02-summary).\n\n\n:::\n:::::\n\n## Country groupings in WHR {#sec-02-whr-classification}\n\nSome of the WHR years (WHR reports 2013, 2015, 2020, and 2021) have a regional\ngrouping incorporated. But this grouping is not included in the (new) dataset 2024 from the WHR report 2025.\n\n### Classification of WHR 2020\n\nI will display the regional grouping of the WHR data with the example from the year 2020 (WHR report 2021).\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-whr-classification-2020}\n: WHR data 2020 classification\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-whr-classification-2020}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n  df_dt_whr_2020 <-  base::readRDS(\"data/whr/raw/whr_raw_2021.rds\") |> \n      dplyr::select(`Country name`, `Regional indicator`) |> \n      dplyr::nest_by(`Regional indicator`) |> \n      dplyr::mutate(data = as.vector(data)) |>\n      dplyr::mutate(data = stringr::str_c(data, collapse = \"; \")) |>\n      dplyr::mutate(data = paste(data, \";\")) |> \n      dplyr::mutate(N = lengths(gregexpr(\";\", data))) |> \n      dplyr::rename(Country = data) |> \n      DT::datatable(class = 'cell-border compact stripe', \n                options = list(\n                  pageLength = 25,\n                  lengthMenu = c(5, 10, 15, 20, 25, 50)\n                  )\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-406eb35c52d844e948b9\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-406eb35c52d844e948b9\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Central and Eastern Europe\",\"Commonwealth of Independent States\",\"East Asia\",\"Latin America and Caribbean\",\"Middle East and North Africa\",\"North America and ANZ\",\"South Asia\",\"Southeast Asia\",\"Sub-Saharan Africa\",\"Western Europe\"],[\"Czech Republic; Slovenia; Kosovo; Slovakia; Lithuania; Estonia; Poland; Romania; Serbia; Latvia; Hungary; Croatia; Bosnia and Herzegovina; Montenegro; Bulgaria; Albania; North Macedonia ;\",\"Uzbekistan; Kazakhstan; Moldova; Kyrgyzstan; Belarus; Russia; Tajikistan; Armenia; Azerbaijan; Turkmenistan; Georgia; Ukraine ;\",\"Taiwan Province of China; Japan; South Korea; Mongolia; Hong Kong S.A.R. of China; China ;\",\"Costa Rica; Guatemala; Uruguay; Brazil; Mexico; Jamaica; Panama; Chile; El Salvador; Colombia; Nicaragua; Argentina; Honduras; Peru; Ecuador; Bolivia; Paraguay; Dominican Republic; Venezuela; Haiti ;\",\"Israel; Bahrain; United Arab Emirates; Saudi Arabia; Kuwait; Libya; Turkey; Morocco; Algeria; Iraq; Iran; Tunisia; Lebanon; Palestinian Territories; Jordan; Egypt; Yemen ;\",\"New Zealand; Australia; Canada; United States ;\",\"Nepal; Maldives; Bangladesh; Pakistan; Sri Lanka; India; Afghanistan ;\",\"Singapore; Thailand; Philippines; Vietnam; Malaysia; Indonesia; Laos; Cambodia; Myanmar ;\",\"Mauritius; Congo (Brazzaville); Ivory Coast; Cameroon; Senegal; Ghana; Niger; Gambia; Benin; Guinea; South Africa; Gabon; Burkina Faso; Mozambique; Nigeria; Mali; Uganda; Liberia; Kenya; Namibia; Chad; Swaziland; Comoros; Ethiopia; Mauritania; Madagascar; Togo; Zambia; Sierra Leone; Burundi; Tanzania; Malawi; Lesotho; Botswana; Rwanda; Zimbabwe ;\",\"Finland; Denmark; Switzerland; Iceland; Netherlands; Norway; Sweden; Luxembourg; Austria; Germany; Ireland; United Kingdom; Belgium; France; Malta; Spain; Italy; Cyprus; Portugal; Greece; North Cyprus ;\"],[17,12,6,20,17,4,7,9,36,21]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Regional indicator<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Regional indicator\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nResult of the WHR classification system for WHR data 2020 used in the WHR report 2021.\n:::\n\n\n\n\n------------------------------------------------------------------------\n\nThere are 10 different regional indicators. The datasets for 2013, 2015, 2020 and 2021 use all the same\nclassification scheme with **149 countries in\n10 regions**.\n\n149 are by far not all countries of the world. Their complete number is about 195 with some insecurities about Holy See (Vatican), the State of Palestine, Taiwan and Kosovo. (Compare: [How Many Countries Are There In The World?](https://www.worldatlas.com/geography/how-many-countries-are-there-in-the-world.html)) The reason for this lower number is simple: For only those 149 countries are subjective well-being data in the study year 2020 available.\n\n::::\n:::::\n\n### `class_scheme()` function\n\nAs I am going to list several classification variants it pays the effort to develop a function for the repetitive task.\n\n::::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-show-class-scheme}\n: Function `class_scheme()` for showing classification schemes\n:::\n::::\n\n:::: my-r-code-container\n::: {#lst-show-class-scheme}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nclass_scheme <- function(df, sel1, sel2) {\n    ## df = dataframe to show\n    ## sel1 = name of the first column (country names) to select\n    ## sel2 = name of the column with the regional indicator\n  df |> \n        dplyr::select(!!sel1, !!sel2) |> \n        dplyr::nest_by(!!sel2) |> \n        dplyr::mutate(data = as.vector(data)) |>\n        dplyr::mutate(data = stringr::str_c(data, collapse = \"; \")) |>\n        dplyr::mutate(data = paste(data, \";\")) |> \n        dplyr::mutate(N = lengths(gregexpr(\";\", data))) |> \n        dplyr::rename(Country = data) |> \n        dplyr::arrange(!!sel2) |> \n        DT::datatable(class = 'cell-border compact stripe', \n            options = list(\n              pageLength = 25,\n              lengthMenu = c(5, 10, 15, 20, 25, 50),\n              columnDefs = list(\n                  list(className = 'dt-body-left', targets = 2)\n                  )\n              )\n        )\n}\n\nclass_scheme2 <- function(df, sel1, sel2) {\n    ## df = dataframe to show\n    ## sel1 = name of the first column (country names) to select\n    ## sel2 = name of the column with the regional indicator\n  df |> \n        dplyr::select(!!sel1, !!sel2) |> \n        dplyr::nest_by(!!sel2) |> \n        dplyr::mutate(data = as.vector(data)) |>\n        dplyr::mutate(data = stringr::str_c(data, collapse = \"; \")) |>\n        dplyr::mutate(data = paste(data, \";\")) |> \n        dplyr::mutate(N = lengths(gregexpr(\";\", data))) |> \n        dplyr::rename(Country = data) |> \n        dplyr::arrange(!!sel2)\n}\n```\n:::\n\n\n\n\n\nFunction `class_scheme()` for showing results of a classification system\n:::\n\nHere I am using complex code lines. Using {**dplyr**} programming code in functions needs some special consideration. I have learned the details from \"Bang Bang – How to\nprogram with dplyr\" [@berroth-2019].\n::::\n:::::::\n\n### WHR 2020 with `class_scheme()` function\n\nAs the `class_scheme()` function is now in place, I can display with this function the different grouping\nschemes. At first I will try it out with the WHR data from the 2021 report:\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-whr-grouping-schema}\n: Classification of the WHR data\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_whr <-  base::readRDS(\n    paste0(here::here(), \"/data/whr/raw/whr_raw_2021.rds\"))\n(\n    whr_class <- class_scheme(\n            df = df_whr,\n            sel1 = rlang::quo(`Country name`),\n            sel2 = rlang::quo(`Regional indicator`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-9b82704c11a574bd7151\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9b82704c11a574bd7151\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Central and Eastern Europe\",\"Commonwealth of Independent States\",\"East Asia\",\"Latin America and Caribbean\",\"Middle East and North Africa\",\"North America and ANZ\",\"South Asia\",\"Southeast Asia\",\"Sub-Saharan Africa\",\"Western Europe\"],[\"Czech Republic; Slovenia; Kosovo; Slovakia; Lithuania; Estonia; Poland; Romania; Serbia; Latvia; Hungary; Croatia; Bosnia and Herzegovina; Montenegro; Bulgaria; Albania; North Macedonia ;\",\"Uzbekistan; Kazakhstan; Moldova; Kyrgyzstan; Belarus; Russia; Tajikistan; Armenia; Azerbaijan; Turkmenistan; Georgia; Ukraine ;\",\"Taiwan Province of China; Japan; South Korea; Mongolia; Hong Kong S.A.R. of China; China ;\",\"Costa Rica; Guatemala; Uruguay; Brazil; Mexico; Jamaica; Panama; Chile; El Salvador; Colombia; Nicaragua; Argentina; Honduras; Peru; Ecuador; Bolivia; Paraguay; Dominican Republic; Venezuela; Haiti ;\",\"Israel; Bahrain; United Arab Emirates; Saudi Arabia; Kuwait; Libya; Turkey; Morocco; Algeria; Iraq; Iran; Tunisia; Lebanon; Palestinian Territories; Jordan; Egypt; Yemen ;\",\"New Zealand; Australia; Canada; United States ;\",\"Nepal; Maldives; Bangladesh; Pakistan; Sri Lanka; India; Afghanistan ;\",\"Singapore; Thailand; Philippines; Vietnam; Malaysia; Indonesia; Laos; Cambodia; Myanmar ;\",\"Mauritius; Congo (Brazzaville); Ivory Coast; Cameroon; Senegal; Ghana; Niger; Gambia; Benin; Guinea; South Africa; Gabon; Burkina Faso; Mozambique; Nigeria; Mali; Uganda; Liberia; Kenya; Namibia; Chad; Swaziland; Comoros; Ethiopia; Mauritania; Madagascar; Togo; Zambia; Sierra Leone; Burundi; Tanzania; Malawi; Lesotho; Botswana; Rwanda; Zimbabwe ;\",\"Finland; Denmark; Switzerland; Iceland; Netherlands; Norway; Sweden; Luxembourg; Austria; Germany; Ireland; United Kingdom; Belgium; France; Malta; Spain; Italy; Cyprus; Portugal; Greece; North Cyprus ;\"],[17,12,6,20,17,4,7,9,36,21]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Regional indicator<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Regional indicator\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n\nIt worked! I got the same result as in @lst-whr-classification-2020.\n\n\n## Official classifications {#sec-02-official-classifications}\n\nThere are already different classification systems in place:\nInternational organizations (e.g., [World\nBank](https://datahelpdesk.worldbank.org/knowledgebase/articles/906519),\n[United Nations](https://unstats.un.org/unsd/methodology/m49/)) have\ndeveloped them with several grouping variants.\n\nI will look into these two official classifications schemes of World Bank and United Nations and apply the following procedure:\n\n:::::{.my-procedure}\n:::{.my-procedure-header}\n:::::: {#prp-country-class}\n: Understand structure and content of the official classifications schemata\n::::::\n:::\n::::{.my-procedure-container}\n1. Create a directory for storing the different country classification files (see @sec-02-create-data-dirs).\n2. Download classification files and store them for faster access as R objects with <a class='glossary' title='The abbreviation “RDS” in file endings .rds refers to “R Data Serialized”. It is a format used by the R programming language to serialize and store R objects, such as data frames, lists, and functions, in a compact and portable binary format.'>rds</a> format  (see @sec-02-wb-download and @sec-02-unsd-download).\n3. Inspect the data classification files of World Bank (@sec-02-inspect-wb) and of the United Nations (@sec-02-inspect-unsd) in detail.\n\n::::\n:::::\n\n### Create data directories {#sec-02-create-data-dirs}\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-create-class-dirs}\n: Create folders for country classification files\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nmy_create_folder(base::paste0(here::here(), \"/data/\"))\nmy_create_folder(base::paste0(here::here(), \"/data/country-class\"))\nmy_create_folder(base::paste0(here::here(), \"/data/country-class/wb\"))\nmy_create_folder(base::paste0(here::here(), \"/data/country-class/unsd\"))\nmy_create_folder(base::paste0(here::here(), \"/data/country-class/wb/excel\"))\nmy_create_folder(base::paste0(here::here(), \"/data/country-class/wb/csv\"))\nmy_create_folder(base::paste0(here::here(), \"/data/country-class/wb/rds\"))\nmy_create_folder(base::paste0(here::here(), \"/data/country-class/unsd/excel\"))\nmy_create_folder(base::paste0(here::here(), \"/data/country-class/unsd/csv\"))\nmy_create_folder(base::paste0(here::here(), \"/data/country-class/unsd/rds\"))\n```\n:::\n\n\n\n\n\n<center>(*For this R code chunk is no output available*)</center>\n\n\n::::\n:::::\n\n### Download classification files {#sec-02-download-class-files}\n\n#### World Bank {#sec-02-wb-download}\n\nThe World Bank Classification can be downloaded from [How does the World Bank classify countries?](https://datahelpdesk.worldbank.org/knowledgebase/articles/378834-how-does-the-world-bank-classify-countries). Near the bottom of the page you can see the line \"Download an Excel file of historical classifications by income.\", providing a link with the word \"Download\". The downloaded file `CLASS.xlsx` does *not* contain a historical classification by income but the general classification system of the last available year (2023).  \n\nYes, there is another Excel file `OGHIST.xslx` with the historical cutoffs\nfor incomes and lending categories, dating from 1987 to 2023. But the download link for this file is located at another web page: [World Bank Country and Lending Groups](https://datahelpdesk.worldbank.org/knowledgebase/articles/906519). On this page you will also find the updates for the cutoffs for countries <a class='glossary' title='Gross National Income (GNI) is a measure of a country’s income, which includes all the income earned by a country’s residents, businesses, and earnings from foreign sources. It is defined as the total amount of money earned by a nation’s people and businesses, no matter where it was earned. GNI is an alternative to GDP as a way to measure and track a nation’s wealth, as it calculates income instead of output.'>GNI</a> income per capita which is important for the lending eligibility of countries. [World Bank country classifications by income level for\n2024-2025](https://blogs.worldbank.org/en/opendata/world-bank-country-classifications-by-income-level-for-2024-2025) has the current updated values and changes over the last year.\n\nThe file `CLASS.xlsx` I am interested here consists of three sheets. \n\n  - 1. \"List of Economies\"\n  - 2. \"compositions\" and\n  - 3. \"Notes\"\n\nI will download the original Excel file with all it sheets and save programmatically\n  \n  - the Excel file with all its sheet\n  - CSV snapshots of all sheets (file extension = `.csv`) and\n  - R objects of all sheets (file extension = `.rds`)\n  \nThe CSV snapshots support reproducibility because it stores the proprietary Excel file in in a tool-agnostic, future-proof format. I am using code inspired by the vignette/article [readxl Workflows](https://readxl.tidyverse.org/articles/readxl-workflows.html) \n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-wb-class}\n: Download the World Bank CLASS Excel file\n::::::\n:::\n::::{.my-r-code-container}\n\n<center>**Run this code chunk manually if the file still needs to be downloaded.**</center>\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nurl_excel = \"https://datacatalogfiles.worldbank.org/ddh-published/0037712/DR0090755/CLASS.xlsx\"\npath_wb_excel <- base::paste0(here::here(), \n            \"/data/country-class/wb/excel/wb-class.xlsx\")\npath_wb_csv <- base::paste0(here::here(), \n            \"/data/country-class/wb/csv/\")\npath_wb_rds <- base::paste0(here::here(), \n            \"/data/country-class/wb/rds/\")\n\n## download wb-class file ##############\ndownloader::download(\n    url = url_excel,\n    destfile = path_wb_excel\n)\n\n## from readxl workflow article ##############\n## includes also my_excel_as_csv_and_rds() function \npath_wb_excel |> \n  readxl::excel_sheets()  |> \n  rlang::set_names()  |>  \n  purrr::map(my_excel_as_csv_and_rds, \n             path_excel = path_wb_excel, \n             path_csv = path_wb_csv,\n             path_rds = path_wb_rds\n             ) \n```\n:::\n\n\n\n\n\n::::\n:::::\n\n#### UNSD-M49 {#sec-02-unsd-download}\n\nAnother more detailed classification system expressively developed for\nstatistical purposes is developed by the United Nations Statistics\nDivision <a class='glossary' title='The United Nations Statistics Division (UNSD) is committed to the advancement of the global statistical system. It compiles and disseminates global statistical information, develop standards and norms for statistical activities, and support countries’ efforts to strengthen their national statistical systems.'>UNSD</a> using the <a class='glossary' title='The United Nations publication “Standard Country or Area Codes for Statistical Use” was originally published as Series M, No. 49 and is now commonly referred to as the M49 standard. M49 is a country/areas classification system prepared by the Statistics Division of the United Nations Secretariat primarily for use in its publications and databases.'>M49</a> methodology.\n\nThe result is called [Standard country or area codes for statistical use\n(M49)](https://unstats.un.org/unsd/methodology/m49/) and can be\ndownloaded manually in different languages and formats (Copy into the\nclipboard, Excel or <a class='glossary' title='Text files where the values are separated with commas (Comma Separated Values = CSV). These files have the file extension .csv'>CSV</a> from the [Overview\npage](https://unstats.un.org/unsd/methodology/m49/overview/). On the page \"Overview\" is\nno URL for an R script available, because triggering one of the buttons\ncopies or downloads the data with the help of Javascript. So I had to download the file manually or to find another location where I could download it programmatically. \n\nI found with the <a class='glossary' title='OMNIKA DataStore is an open-access data science resource for researchers, authors, and technologists. OMNIKA Foundation is an American 501©(3) nonprofit organization that operates a digital mythological library. Almost every culture has relevant mythology that explains where we came from, why things are the way they are, and a number of other things. OMNIKA’s goal is to collect, organize, index, and quantify all of those data in one place and make them available for free. (https://omnika.org/info/about)'>OMNIKA</a> DataStore [United Nations M49 Region Codes](https://omnika.org/datastore/datasets/un-m49-region-codes) an [external source for the UNSD-M49 country classification](https://github.com/omnika-datastore/unsd-m49-standard-area-codes). For security reason I checked the two files with `base::all.equal()` to determine if those two files are identical. Yes, they are!\n\nThe UNSD M40 standard area codes are stored as Excel and CSV files. I download for reproducibility reason the CSV file.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-UNSD-M49}\n: Download the UNSD-M49 CSV file and create an R object (\".rds\")\n::::::\n:::\n::::{.my-r-code-container}\n\n<center>**Run this code chunk manually if the file still needs to be downloaded.**</center>\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n## download unsd-m49 file ############\nurl_unsd_csv <- \"https://github.com/omnika-datastore/unsd-m49-standard-area-codes/raw/refs/heads/main/2022-09-24__CSV_UNSD_M49.csv\"\npath_unsd_csv <- base::paste0(here::here(), \n     \"/data/country-class/unsd/csv/2022-09-24__CSV_UNSD_M49.csv\")\n\ndownloader::download(\n    url = url_unsd_csv,\n    destfile = path_unsd_csv\n)\n\n\n## create R object ###############\nunsd_class <- \n  readr::read_delim(\n    file = path_unsd_csv,\n    delim = \";\"\n  )\n\n\n## save as .rds file ################\nmy_save_data_file(\n  \"country-class/unsd/rds\", \n  unsd_class, \n  \"unsd_class.rds\")\n```\n:::\n\n\n\n\n\n<center>(*For this R code chunk is no output available*)</center>\n\n::::\n:::::\n\n\n\n\n\n### Inspect classification files {#sec-02-inspect-class-files}\n\nTo get an detailed understanding of the data structures I will provide the following outputs:\n\n1. A summary statistics with `skimr::skim()` followed by inspection of the first data with `dplyr::glimpse()`.\n2. Several detailed outputs of the classifications categories (regions) and their elements (countries) in different code chunks (tabs).\n\n#### World Bank {#sec-02-inspect-wb}\n\n::: {.my-code-collection}\n:::: {.my-code-collection-header}\n::::: {.my-code-collection-icon}\n:::::\n:::::: {#exm-02-inspect-wb-class-files}\n: Inspect the structure of the World Bank classification\n::::::\n\n::::\n\n::::{.my-code-collection-container}\n\n::: {.panel-tabset}\n\n###### WB `economies`\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-inspect-wb-sheet1}\n: Inspect sheet `List of Economies` of the World Bank classification file\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb_class_economies <- base::readRDS(\n  \"data/country-class/wb/rds/wb-class-List of economies.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(wb_class_economies)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(wb_class_economies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                   |\n|:------------------------|:------------------|\n|Name                     |wb_class_economies |\n|Number of rows           |267                |\n|Number of columns        |5                  |\n|_______________________  |                   |\n|Column type frequency:   |                   |\n|character                |5                  |\n|________________________ |                   |\n|Group variables          |None               |\n\n\n**Variable type: character**\n\n|skim_variable    | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:----------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Economy          |         1|          1.00|   4|  50|     0|      266|          0|\n|Code             |         1|          1.00|   3|   3|     0|      266|          0|\n|Region           |        49|          0.82|  10|  26|     0|        7|          0|\n|Income group     |        50|          0.81|  10|  19|     0|        4|          0|\n|Lending category |       122|          0.54|   3|   5|     0|        3|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 267\n#> Columns: 5\n#> $ Economy            <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"American Samo…\n#> $ Code               <chr> \"AFG\", \"ALB\", \"DZA\", \"ASM\", \"AND\", \"AGO\", \"ATG\", \"A…\n#> $ Region             <chr> \"South Asia\", \"Europe & Central Asia\", \"Middle East…\n#> $ `Income group`     <chr> \"Low income\", \"Upper middle income\", \"Upper middle …\n#> $ `Lending category` <chr> \"IDA\", \"IBRD\", \"IBRD\", NA, NA, \"IBRD\", \"IBRD\", \"IBR…\n```\n\n\n:::\n:::\n\n\n\n\n\n\n::::\n:::::\n\n\n###### WB `compositions`\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-inspect-wb-sheet2}\n: Inspect sheet `compositions` of the World Bank classification file\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb_class_compositions <- base::readRDS(\n  \"data/country-class/wb/rds/wb-class-compositions.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(wb_class_compositions)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(wb_class_compositions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                      |\n|:------------------------|:---------------------|\n|Name                     |wb_class_compositions |\n|Number of rows           |2085                  |\n|Number of columns        |4                     |\n|_______________________  |                      |\n|Column type frequency:   |                      |\n|character                |4                     |\n|________________________ |                      |\n|Group variables          |None                  |\n\n\n**Variable type: character**\n\n|skim_variable   | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|WB_Group_Code   |         0|             1|   3|   3|     0|       48|          0|\n|WB_Group_Name   |         0|             1|   5|  50|     0|       48|          0|\n|WB_Country_Code |         0|             1|   3|   3|     0|      218|          0|\n|WB_Country_Name |         0|             1|   4|  30|     0|      218|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 2,085\n#> Columns: 4\n#> $ WB_Group_Code   <chr> \"AFE\", \"AFE\", \"AFE\", \"AFE\", \"AFE\", \"AFE\", \"AFE\", \"AFE\"…\n#> $ WB_Group_Name   <chr> \"Africa Eastern and Southern\", \"Africa Eastern and Sou…\n#> $ WB_Country_Code <chr> \"AGO\", \"BWA\", \"BDI\", \"COM\", \"COD\", \"ERI\", \"SWZ\", \"ETH\"…\n#> $ WB_Country_Name <chr> \"Angola\", \"Botswana\", \"Burundi\", \"Comoros\", \"Congo, De…\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n::::\n:::::\n\n###### WB standard\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-wb-class-standard}\n: Pre-defined standard categorization\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_wb_standard <-  base::readRDS(\n  \"data/country-class/wb/rds/wb-class-List of economies.rds\") |> \n    dplyr::slice(1:218)\n\n\n\n(\n    wb_class_standard <- class_scheme(\n            df = df_wb_standard,\n            sel1 = rlang::quo(`Economy`),\n            sel2 = rlang::quo(`Region`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-3a88374727bf36d3ff09\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-3a88374727bf36d3ff09\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"],[\"East Asia &amp; Pacific\",\"Europe &amp; Central Asia\",\"Latin America &amp; Caribbean\",\"Middle East &amp; North Africa\",\"North America\",\"South Asia\",\"Sub-Saharan Africa\"],[\"American Samoa; Australia; Brunei Darussalam; Cambodia; China; Fiji; French Polynesia; Guam; Hong Kong SAR, China; Indonesia; Japan; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Lao PDR; Macao SAR, China; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; New Caledonia; New Zealand; Northern Mariana Islands; Palau; Papua New Guinea; Philippines; Samoa; Singapore; Solomon Islands; Taiwan, China; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Albania; Andorra; Armenia; Austria; Azerbaijan; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Channel Islands; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Georgia; Germany; Gibraltar; Greece; Greenland; Hungary; Iceland; Ireland; Isle of Man; Italy; Kazakhstan; Kosovo; Kyrgyz Republic; Latvia; Liechtenstein; Lithuania; Luxembourg; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Romania; Russian Federation; San Marino; Serbia; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Turkmenistan; Ukraine; United Kingdom; Uzbekistan ;\",\"Antigua and Barbuda; Argentina; Aruba; Bahamas, The; Barbados; Belize; Bolivia; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Sint Maarten (Dutch part); St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Turks and Caicos Islands; Uruguay; Venezuela, RB; Virgin Islands (U.S.) ;\",\"Algeria; Bahrain; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Bermuda; Canada; United States ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\"],[38,58,42,21,3,8,48]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Region<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Region\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n***\n\n`Region` is a coarse classification scheme with only **7 regions formed by 218 countries**.\n\n::::\n:::::\n\n###### WB All\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-wb-class-all}\n: All provided groups, regional, economical and political\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_wb_all <-  base::readRDS(\n  \"data/country-class/wb/rds/wb-class-compositions.rds\")\n\n\n(\n    wb_class_all <- class_scheme(\n            df = df_wb_all,\n            sel1 = rlang::quo(`WB_Country_Name`),\n            sel2 = rlang::quo(`WB_Group_Name`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1edd8b88a065620b20dd\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1edd8b88a065620b20dd\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\"],[\"Africa Eastern and Southern\",\"Africa Western and Central\",\"Arab World\",\"Caribbean small states\",\"Central Europe and the Baltics\",\"Early-demographic dividend\",\"East Asia &amp; Pacific\",\"East Asia &amp; Pacific (IDA &amp; IBRD)\",\"East Asia &amp; Pacific (excluding high income)\",\"Euro area\",\"Europe &amp; Central Asia\",\"Europe &amp; Central Asia (IDA &amp; IBRD)\",\"Europe &amp; Central Asia (excluding high income)\",\"European Union\",\"Fragile and conflict affected situations\",\"Heavily indebted poor countries (HIPC)\",\"High income\",\"IBRD only\",\"IDA &amp; IBRD total\",\"IDA blend\",\"IDA only\",\"IDA total\",\"Late-demographic dividend\",\"Latin America &amp; Caribbean\",\"Latin America &amp; Caribbean (IDA &amp; IBRD)\",\"Latin America &amp; Caribbean (excluding high income)\",\"Least developed countries: UN classification\",\"Low &amp; middle income\",\"Low income\",\"Lower middle income\",\"Middle East &amp; North Africa\",\"Middle East &amp; North Africa (IDA &amp; IBRD)\",\"Middle East &amp; North Africa (excluding high income)\",\"Middle income\",\"North America\",\"OECD members\",\"Other small states\",\"Pacific island small states\",\"Post-demographic dividend\",\"Pre-demographic dividend\",\"Small states (SST)\",\"South Asia\",\"South Asia (IDA &amp; IBRD)\",\"Sub-Saharan Africa\",\"Sub-Saharan Africa (IDA &amp; IBRD)\",\"Sub-Saharan Africa (excluding high income)\",\"Upper middle income\",\"World\"],[\"Angola; Botswana; Burundi; Comoros; Congo, Dem. Rep.; Eritrea; Eswatini; Ethiopia; Kenya; Lesotho; Madagascar; Malawi; Mauritius; Mozambique; Namibia; Rwanda; São Tomé and Príncipe; Seychelles; Somalia; South Africa; South Sudan; Sudan; Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Benin; Burkina Faso; Cabo Verde; Cameroon; Central African Republic; Chad; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Algeria; Bahrain; Comoros; Djibouti; Egypt, Arab Rep.; Iraq; Jordan; Kuwait; Lebanon; Libya; Mauritania; Morocco; Oman; Qatar; Saudi Arabia; Somalia; Sudan; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Antigua and Barbuda; Bahamas, The; Barbados; Belize; Dominica; Grenada; Guyana; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname ;\",\"Bulgaria; Croatia; Czechia; Estonia; Hungary; Latvia; Lithuania; Poland; Romania; Slovak Republic; Slovenia ;\",\"Algeria; Argentina; Bahrain; Bangladesh; Belize; Bhutan; Bolivia; Botswana; Cabo Verde; Cambodia; Djibouti; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Eswatini; Ethiopia; Gabon; Ghana; Grenada; Guatemala; Haiti; Honduras; India; Indonesia; Iran, Islamic Rep.; Israel; Jordan; Kiribati; Lao PDR; Lesotho; Libya; Maldives; Mexico; Micronesia, Fed. Sts.; Myanmar; Namibia; Nepal; Nicaragua; Pakistan; Panama; Papua New Guinea; Paraguay; Peru; Philippines; Rwanda; Samoa; Saudi Arabia; Solomon Islands; South Africa; Suriname; Syrian Arab Republic; Tajikistan; Tonga; Türkiye; Turkmenistan; Uzbekistan; Vanuatu; Venezuela, RB; West Bank and Gaza; Yemen, Rep.; Zimbabwe ;\",\"American Samoa; Australia; Brunei Darussalam; Cambodia; China; Fiji; French Polynesia; Guam; Hong Kong SAR, China; Indonesia; Japan; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Lao PDR; Macao SAR, China; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; New Caledonia; New Zealand; Northern Mariana Islands; Palau; Papua New Guinea; Philippines; Samoa; Singapore; Solomon Islands; Taiwan, China; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Cambodia; China; Fiji; Indonesia; Kiribati; Lao PDR; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; Palau; Papua New Guinea; Philippines; Samoa; Solomon Islands; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Cambodia; China; Fiji; Indonesia; Kiribati; Korea, Dem. People's Rep.; Lao PDR; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Papua New Guinea; Philippines; Samoa; Solomon Islands; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Austria; Belgium; Croatia; Cyprus; Estonia; Finland; France; Germany; Greece; Ireland; Italy; Latvia; Lithuania; Luxembourg; Malta; Netherlands; Portugal; Slovak Republic; Slovenia; Spain ;\",\"Albania; Andorra; Armenia; Austria; Azerbaijan; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Channel Islands; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Georgia; Germany; Gibraltar; Greece; Greenland; Hungary; Iceland; Ireland; Isle of Man; Italy; Kazakhstan; Kosovo; Kyrgyz Republic; Latvia; Liechtenstein; Lithuania; Luxembourg; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Romania; Russian Federation; San Marino; Serbia; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Turkmenistan; Ukraine; United Kingdom; Uzbekistan ;\",\"Albania; Armenia; Azerbaijan; Belarus; Bosnia and Herzegovina; Bulgaria; Croatia; Georgia; Kazakhstan; Kosovo; Kyrgyz Republic; Moldova; Montenegro; North Macedonia; Poland; Romania; Russian Federation; Serbia; Tajikistan; Türkiye; Turkmenistan; Ukraine; Uzbekistan ;\",\"Albania; Armenia; Azerbaijan; Belarus; Bosnia and Herzegovina; Georgia; Kazakhstan; Kosovo; Kyrgyz Republic; Moldova; Montenegro; North Macedonia; Serbia; Tajikistan; Türkiye; Turkmenistan; Ukraine; Uzbekistan ;\",\"Austria; Belgium; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; Hungary; Ireland; Italy; Latvia; Lithuania; Luxembourg; Malta; Netherlands; Poland; Portugal; Romania; Slovak Republic; Slovenia; Spain; Sweden ;\",\"Afghanistan; Burkina Faso; Burundi; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Eritrea; Ethiopia; Guinea-Bissau; Haiti; Iraq; Kiribati; Kosovo; Lebanon; Libya; Mali; Marshall Islands; Micronesia, Fed. Sts.; Mozambique; Myanmar; Niger; Nigeria; Papua New Guinea; São Tomé and Príncipe; Solomon Islands; Somalia; South Sudan; Sudan; Syrian Arab Republic; Timor-Leste; Tuvalu; Ukraine; Venezuela, RB; West Bank and Gaza; Yemen, Rep.; Zimbabwe ;\",\"Afghanistan; Benin; Bolivia; Burkina Faso; Burundi; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Eritrea; Ethiopia; Gambia, The; Ghana; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Nicaragua; Niger; Rwanda; São Tomé and Príncipe; Senegal; Sierra Leone; Somalia; Sudan; Tanzania; Togo; Uganda; Zambia ;\",\"American Samoa; Andorra; Antigua and Barbuda; Aruba; Australia; Austria; Bahamas, The; Bahrain; Barbados; Belgium; Bermuda; British Virgin Islands; Brunei Darussalam; Bulgaria; Canada; Cayman Islands; Channel Islands; Chile; Croatia; Curaçao; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; French Polynesia; Germany; Gibraltar; Greece; Greenland; Guam; Guyana; Hong Kong SAR, China; Hungary; Iceland; Ireland; Isle of Man; Israel; Italy; Japan; Korea, Rep.; Kuwait; Latvia; Liechtenstein; Lithuania; Luxembourg; Macao SAR, China; Malta; Monaco; Nauru; Netherlands; New Caledonia; New Zealand; Northern Mariana Islands; Norway; Oman; Palau; Panama; Poland; Portugal; Puerto Rico; Qatar; Romania; Russian Federation; San Marino; Saudi Arabia; Seychelles; Singapore; Sint Maarten (Dutch part); Slovak Republic; Slovenia; Spain; St. Kitts and Nevis; St. Martin (French part); Sweden; Switzerland; Taiwan, China; Trinidad and Tobago; Turks and Caicos Islands; United Arab Emirates; United Kingdom; United States; Uruguay; Virgin Islands (U.S.) ;\",\"Albania; Algeria; Angola; Antigua and Barbuda; Argentina; Armenia; Azerbaijan; Barbados; Belarus; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Chile; China; Colombia; Costa Rica; Croatia; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Gabon; Georgia; Guatemala; India; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Jordan; Kazakhstan; Lebanon; Libya; Malaysia; Mauritius; Mexico; Moldova; Mongolia; Montenegro; Morocco; Namibia; Nauru; North Macedonia; Palau; Panama; Paraguay; Peru; Philippines; Poland; Romania; Russian Federation; Serbia; Seychelles; South Africa; St. Kitts and Nevis; Thailand; Trinidad and Tobago; Tunisia; Türkiye; Turkmenistan; Ukraine; Uruguay; Venezuela, RB; Vietnam ;\",\"Afghanistan; Albania; Algeria; Angola; Antigua and Barbuda; Argentina; Armenia; Azerbaijan; Bangladesh; Barbados; Belarus; Belize; Benin; Bhutan; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Burkina Faso; Burundi; Cabo Verde; Cambodia; Cameroon; Central African Republic; Chad; Chile; China; Colombia; Comoros; Congo, Dem. Rep.; Congo, Rep.; Costa Rica; Côte d’Ivoire; Croatia; Djibouti; Dominica; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Fiji; Gabon; Gambia, The; Georgia; Ghana; Grenada; Guatemala; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; India; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kiribati; Kosovo; Kyrgyz Republic; Lao PDR; Lebanon; Lesotho; Liberia; Libya; Madagascar; Malawi; Malaysia; Maldives; Mali; Marshall Islands; Mauritania; Mauritius; Mexico; Micronesia, Fed. Sts.; Moldova; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nauru; Nepal; Nicaragua; Niger; Nigeria; North Macedonia; Pakistan; Palau; Panama; Papua New Guinea; Paraguay; Peru; Philippines; Poland; Romania; Russian Federation; Rwanda; Samoa; São Tomé and Príncipe; Senegal; Serbia; Seychelles; Sierra Leone; Solomon Islands; Somalia; South Africa; South Sudan; Sri Lanka; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Sudan; Suriname; Syrian Arab Republic; Tajikistan; Tanzania; Thailand; Timor-Leste; Togo; Tonga; Trinidad and Tobago; Tunisia; Türkiye; Turkmenistan; Tuvalu; Uganda; Ukraine; Uruguay; Uzbekistan; Vanuatu; Venezuela, RB; Vietnam; Yemen, Rep.; Zambia; Zimbabwe ;\",\"Belize; Cabo Verde; Cameroon; Congo, Rep.; Dominica; Eswatini; Fiji; Grenada; Kenya; Nigeria; Pakistan; Papua New Guinea; St. Lucia; St. Vincent and the Grenadines; Suriname; Timor-Leste; Uzbekistan; Zimbabwe ;\",\"Afghanistan; Bangladesh; Benin; Bhutan; Burkina Faso; Burundi; Cambodia; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Côte d’Ivoire; Djibouti; Eritrea; Ethiopia; Gambia, The; Ghana; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; Kiribati; Kosovo; Kyrgyz Republic; Lao PDR; Lesotho; Liberia; Madagascar; Malawi; Maldives; Mali; Marshall Islands; Mauritania; Micronesia, Fed. Sts.; Mozambique; Myanmar; Nepal; Nicaragua; Niger; Rwanda; Samoa; São Tomé and Príncipe; Senegal; Sierra Leone; Solomon Islands; Somalia; South Sudan; Sri Lanka; Sudan; Syrian Arab Republic; Tajikistan; Tanzania; Togo; Tonga; Tuvalu; Uganda; Vanuatu; Yemen, Rep.; Zambia ;\",\"Afghanistan; Bangladesh; Belize; Benin; Bhutan; Burkina Faso; Burundi; Cabo Verde; Cambodia; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Djibouti; Dominica; Eritrea; Eswatini; Ethiopia; Fiji; Gambia, The; Ghana; Grenada; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; Kenya; Kiribati; Kosovo; Kyrgyz Republic; Lao PDR; Lesotho; Liberia; Madagascar; Malawi; Maldives; Mali; Marshall Islands; Mauritania; Micronesia, Fed. Sts.; Mozambique; Myanmar; Nepal; Nicaragua; Niger; Nigeria; Pakistan; Papua New Guinea; Rwanda; Samoa; São Tomé and Príncipe; Senegal; Sierra Leone; Solomon Islands; Somalia; South Sudan; Sri Lanka; St. Lucia; St. Vincent and the Grenadines; Sudan; Suriname; Syrian Arab Republic; Tajikistan; Tanzania; Timor-Leste; Togo; Tonga; Tuvalu; Uganda; Uzbekistan; Vanuatu; Yemen, Rep.; Zambia; Zimbabwe ;\",\"Albania; Armenia; Aruba; Azerbaijan; Bahamas, The; Brazil; Brunei Darussalam; Chile; China; Colombia; Costa Rica; Cyprus; Estonia; Fiji; French Polynesia; Georgia; Guam; Guyana; Iceland; Ireland; Jamaica; Kazakhstan; Korea, Dem. People's Rep.; Kuwait; Kyrgyz Republic; Latvia; Lebanon; Malaysia; Mauritius; Moldova; Mongolia; Montenegro; Morocco; New Caledonia; North Macedonia; Oman; Poland; Puerto Rico; Qatar; Romania; Russian Federation; Serbia; Seychelles; Slovak Republic; Sri Lanka; St. Lucia; St. Vincent and the Grenadines; Thailand; Trinidad and Tobago; Tunisia; United Arab Emirates; Uruguay; Vietnam; Virgin Islands (U.S.) ;\",\"Antigua and Barbuda; Argentina; Aruba; Bahamas, The; Barbados; Belize; Bolivia; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Sint Maarten (Dutch part); St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Turks and Caicos Islands; Uruguay; Venezuela, RB; Virgin Islands (U.S.) ;\",\"Antigua and Barbuda; Argentina; Barbados; Belize; Bolivia; Brazil; Chile; Colombia; Costa Rica; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Uruguay; Venezuela, RB ;\",\"Argentina; Belize; Bolivia; Brazil; Colombia; Costa Rica; Cuba; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Paraguay; Peru; St. Lucia; St. Vincent and the Grenadines; Suriname ;\",\"Afghanistan; Angola; Bangladesh; Benin; Burkina Faso; Burundi; Cambodia; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Djibouti; Eritrea; Ethiopia; Gambia, The; Guinea; Guinea-Bissau; Haiti; Kiribati; Lao PDR; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Myanmar; Nepal; Niger; Rwanda; São Tomé and Príncipe; Senegal; Sierra Leone; Solomon Islands; Somalia; South Sudan; Sudan; Tanzania; Timor-Leste; Togo; Tuvalu; Uganda; Yemen, Rep.; Zambia ;\",\"Afghanistan; Albania; Algeria; Angola; Argentina; Armenia; Azerbaijan; Bangladesh; Belarus; Belize; Benin; Bhutan; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; Burkina Faso; Burundi; Cabo Verde; Cambodia; Cameroon; Central African Republic; Chad; China; Colombia; Comoros; Congo, Dem. Rep.; Congo, Rep.; Costa Rica; Côte d’Ivoire; Cuba; Djibouti; Dominica; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Fiji; Gabon; Gambia, The; Georgia; Ghana; Grenada; Guatemala; Guinea; Guinea-Bissau; Haiti; Honduras; India; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kiribati; Korea, Dem. People's Rep.; Kosovo; Kyrgyz Republic; Lao PDR; Lebanon; Lesotho; Liberia; Libya; Madagascar; Malawi; Malaysia; Maldives; Mali; Marshall Islands; Mauritania; Mauritius; Mexico; Micronesia, Fed. Sts.; Moldova; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nepal; Nicaragua; Niger; Nigeria; North Macedonia; Pakistan; Papua New Guinea; Paraguay; Peru; Philippines; Rwanda; Samoa; São Tomé and Príncipe; Senegal; Serbia; Sierra Leone; Solomon Islands; Somalia; South Africa; South Sudan; Sri Lanka; St. Lucia; St. Vincent and the Grenadines; Sudan; Suriname; Syrian Arab Republic; Tajikistan; Tanzania; Thailand; Timor-Leste; Togo; Tonga; Tunisia; Türkiye; Turkmenistan; Tuvalu; Uganda; Ukraine; Uzbekistan; Vanuatu; Vietnam; West Bank and Gaza; Yemen, Rep.; Zambia; Zimbabwe ;\",\"Afghanistan; Burkina Faso; Burundi; Central African Republic; Chad; Congo, Dem. Rep.; Eritrea; Ethiopia; Gambia, The; Guinea-Bissau; Korea, Dem. People's Rep.; Liberia; Madagascar; Malawi; Mali; Mozambique; Niger; Rwanda; Sierra Leone; Somalia; South Sudan; Sudan; Syrian Arab Republic; Togo; Uganda; Yemen, Rep. ;\",\"Angola; Bangladesh; Benin; Bhutan; Bolivia; Cabo Verde; Cambodia; Cameroon; Comoros; Congo, Rep.; Côte d’Ivoire; Djibouti; Egypt, Arab Rep.; Eswatini; Ghana; Guinea; Haiti; Honduras; India; Jordan; Kenya; Kiribati; Kyrgyz Republic; Lao PDR; Lebanon; Lesotho; Mauritania; Micronesia, Fed. Sts.; Morocco; Myanmar; Nepal; Nicaragua; Nigeria; Pakistan; Papua New Guinea; Philippines; Samoa; São Tomé and Príncipe; Senegal; Solomon Islands; Sri Lanka; Tajikistan; Tanzania; Timor-Leste; Tunisia; Uzbekistan; Vanuatu; Vietnam; West Bank and Gaza; Zambia; Zimbabwe ;\",\"Algeria; Bahrain; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Algeria; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Jordan; Lebanon; Libya; Morocco; Syrian Arab Republic; Tunisia; Yemen, Rep. ;\",\"Algeria; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Jordan; Lebanon; Libya; Morocco; Syrian Arab Republic; Tunisia; West Bank and Gaza; Yemen, Rep. ;\",\"Albania; Algeria; Angola; Argentina; Armenia; Azerbaijan; Bangladesh; Belarus; Belize; Benin; Bhutan; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; Cabo Verde; Cambodia; Cameroon; China; Colombia; Comoros; Congo, Rep.; Costa Rica; Côte d’Ivoire; Cuba; Djibouti; Dominica; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Eswatini; Fiji; Gabon; Georgia; Ghana; Grenada; Guatemala; Guinea; Haiti; Honduras; India; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kiribati; Kosovo; Kyrgyz Republic; Lao PDR; Lebanon; Lesotho; Libya; Malaysia; Maldives; Marshall Islands; Mauritania; Mauritius; Mexico; Micronesia, Fed. Sts.; Moldova; Mongolia; Montenegro; Morocco; Myanmar; Namibia; Nepal; Nicaragua; Nigeria; North Macedonia; Pakistan; Papua New Guinea; Paraguay; Peru; Philippines; Samoa; São Tomé and Príncipe; Senegal; Serbia; Solomon Islands; South Africa; Sri Lanka; St. Lucia; St. Vincent and the Grenadines; Suriname; Tajikistan; Tanzania; Thailand; Timor-Leste; Tonga; Tunisia; Türkiye; Turkmenistan; Tuvalu; Ukraine; Uzbekistan; Vanuatu; Vietnam; West Bank and Gaza; Zambia; Zimbabwe ;\",\"Bermuda; Canada; United States ;\",\"Australia; Austria; Belgium; Canada; Chile; Colombia; Costa Rica; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; Hungary; Iceland; Ireland; Israel; Italy; Japan; Korea, Rep.; Latvia; Lithuania; Luxembourg; Mexico; Netherlands; New Zealand; Norway; Poland; Portugal; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Türkiye; United Kingdom; United States ;\",\"Bahrain; Bhutan; Brunei Darussalam; Cabo Verde; Comoros; Cyprus; Djibouti; Estonia; Eswatini; Iceland; Maldives; Malta; Mauritius; Montenegro; San Marino; São Tomé and Príncipe; Seychelles; Timor-Leste ;\",\"Fiji; Kiribati; Marshall Islands; Micronesia, Fed. Sts.; Nauru; Palau; Samoa; Solomon Islands; Tonga; Tuvalu; Vanuatu ;\",\"Antigua and Barbuda; Australia; Austria; Barbados; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Canada; Croatia; Cuba; Czechia; Denmark; Finland; France; Germany; Greece; Hong Kong SAR, China; Hungary; Italy; Japan; Korea, Rep.; Lithuania; Luxembourg; Macao SAR, China; Malta; Netherlands; New Zealand; Norway; Portugal; Singapore; Slovenia; Spain; Sweden; Switzerland; Ukraine; United Kingdom; United States ;\",\"Afghanistan; Angola; Benin; Burkina Faso; Burundi; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Gambia, The; Guinea; Guinea-Bissau; Iraq; Kenya; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Sudan; Sudan; Tanzania; Timor-Leste; Togo; Uganda; Zambia ;\",\"Antigua and Barbuda; Bahamas, The; Bahrain; Barbados; Belize; Bhutan; Brunei Darussalam; Cabo Verde; Comoros; Cyprus; Djibouti; Dominica; Estonia; Eswatini; Fiji; Grenada; Guyana; Iceland; Kiribati; Maldives; Malta; Marshall Islands; Mauritius; Micronesia, Fed. Sts.; Montenegro; Nauru; Palau; Samoa; San Marino; São Tomé and Príncipe; Seychelles; Solomon Islands; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname; Timor-Leste; Tonga; Tuvalu; Vanuatu ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Albania; Algeria; Argentina; Armenia; Azerbaijan; Belarus; Belize; Bosnia and Herzegovina; Botswana; Brazil; China; Colombia; Costa Rica; Cuba; Dominica; Dominican Republic; Ecuador; El Salvador; Equatorial Guinea; Fiji; Gabon; Georgia; Grenada; Guatemala; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Kazakhstan; Kosovo; Libya; Malaysia; Maldives; Marshall Islands; Mauritius; Mexico; Moldova; Mongolia; Montenegro; Namibia; North Macedonia; Paraguay; Peru; Serbia; South Africa; St. Lucia; St. Vincent and the Grenadines; Suriname; Thailand; Tonga; Türkiye; Turkmenistan; Tuvalu; Ukraine ;\",\"Afghanistan; Albania; Algeria; American Samoa; Andorra; Angola; Antigua and Barbuda; Argentina; Armenia; Aruba; Australia; Austria; Azerbaijan; Bahamas, The; Bahrain; Bangladesh; Barbados; Belarus; Belgium; Belize; Benin; Bermuda; Bhutan; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; British Virgin Islands; Brunei Darussalam; Bulgaria; Burkina Faso; Burundi; Cabo Verde; Cambodia; Cameroon; Canada; Cayman Islands; Central African Republic; Chad; Channel Islands; Chile; China; Colombia; Comoros; Congo, Dem. Rep.; Congo, Rep.; Costa Rica; Côte d’Ivoire; Croatia; Cuba; Curaçao; Cyprus; Czechia; Denmark; Djibouti; Dominica; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Eritrea; Estonia; Eswatini; Ethiopia; Faroe Islands; Fiji; Finland; France; French Polynesia; Gabon; Gambia, The; Georgia; Germany; Ghana; Gibraltar; Greece; Greenland; Grenada; Guam; Guatemala; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; Hong Kong SAR, China; Hungary; Iceland; India; Indonesia; Iran, Islamic Rep.; Iraq; Ireland; Isle of Man; Israel; Italy; Jamaica; Japan; Jordan; Kazakhstan; Kenya; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Kosovo; Kuwait; Kyrgyz Republic; Lao PDR; Latvia; Lebanon; Lesotho; Liberia; Libya; Liechtenstein; Lithuania; Luxembourg; Macao SAR, China; Madagascar; Malawi; Malaysia; Maldives; Mali; Malta; Marshall Islands; Mauritania; Mauritius; Mexico; Micronesia, Fed. Sts.; Moldova; Monaco; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nauru; Nepal; Netherlands; New Caledonia; New Zealand; Nicaragua; Niger; Nigeria; North Macedonia; Northern Mariana Islands; Norway; Oman; Pakistan; Palau; Panama; Papua New Guinea; Paraguay; Peru; Philippines; Poland; Portugal; Puerto Rico; Qatar; Romania; Russian Federation; Rwanda; Samoa; San Marino; São Tomé and Príncipe; Saudi Arabia; Senegal; Serbia; Seychelles; Sierra Leone; Singapore; Sint Maarten (Dutch part); Slovak Republic; Slovenia; Solomon Islands; Somalia; South Africa; South Sudan; Spain; Sri Lanka; St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Sudan; Suriname; Sweden; Switzerland; Syrian Arab Republic; Taiwan, China; Tajikistan; Tanzania; Thailand; Timor-Leste; Togo; Tonga; Trinidad and Tobago; Tunisia; Türkiye; Turkmenistan; Turks and Caicos Islands; Tuvalu; Uganda; Ukraine; United Arab Emirates; United Kingdom; United States; Uruguay; Uzbekistan; Vanuatu; Venezuela, RB; Vietnam; Virgin Islands (U.S.); West Bank and Gaza; Yemen, Rep.; Zambia; Zimbabwe ;\"],[26,22,22,11,11,62,38,23,22,20,58,23,18,27,39,39,86,67,145,18,60,78,54,42,31,23,45,131,26,51,21,12,13,105,3,38,18,11,38,37,40,8,8,48,48,47,54,218]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>WB_Group_Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"WB_Group_Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n***\n\n`WB_Group_Name` in the \"compositions\" file contains all available groups. They are not restricted to regional groups because they are formed by economical and political criteria as well. There is no 1:1 match, because almost all countries belong to two or more groups. There are **48 groups with a total of 2085 elements**.\n\n::::\n:::::\n\n###### Region1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-wb-class-regional}\n: Groups formed by regional criteria (without the redundant `World` region)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_reg <- c(\"AFE\", \"AFW\", \"ARB\", \"CSS\", \"CEB\",\n             \"EAS\", \"ECS\", \"LCN\", \"MEA\", \"NAC\",\n             \"OSS\", \"PSS\", \"SST\", \"SAS\", \"SSF\")\n\ndf_wb_reg <-  base::readRDS(\n  \"data/country-class/wb/rds/wb-class-compositions.rds\") |> \n  dplyr::filter(WB_Group_Code %in% str_reg)\n\n(\n    wb_class_reg <- class_scheme(\n            df = df_wb_reg,\n            sel1 = rlang::quo(`WB_Country_Name`),\n            sel2 = rlang::quo(`WB_Group_Name`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-c3535e07ee62959120ca\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c3535e07ee62959120ca\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\"],[\"Africa Eastern and Southern\",\"Africa Western and Central\",\"Arab World\",\"Caribbean small states\",\"Central Europe and the Baltics\",\"East Asia &amp; Pacific\",\"Europe &amp; Central Asia\",\"Latin America &amp; Caribbean\",\"Middle East &amp; North Africa\",\"North America\",\"Other small states\",\"Pacific island small states\",\"Small states (SST)\",\"South Asia\",\"Sub-Saharan Africa\"],[\"Angola; Botswana; Burundi; Comoros; Congo, Dem. Rep.; Eritrea; Eswatini; Ethiopia; Kenya; Lesotho; Madagascar; Malawi; Mauritius; Mozambique; Namibia; Rwanda; São Tomé and Príncipe; Seychelles; Somalia; South Africa; South Sudan; Sudan; Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Benin; Burkina Faso; Cabo Verde; Cameroon; Central African Republic; Chad; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Algeria; Bahrain; Comoros; Djibouti; Egypt, Arab Rep.; Iraq; Jordan; Kuwait; Lebanon; Libya; Mauritania; Morocco; Oman; Qatar; Saudi Arabia; Somalia; Sudan; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Antigua and Barbuda; Bahamas, The; Barbados; Belize; Dominica; Grenada; Guyana; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname ;\",\"Bulgaria; Croatia; Czechia; Estonia; Hungary; Latvia; Lithuania; Poland; Romania; Slovak Republic; Slovenia ;\",\"American Samoa; Australia; Brunei Darussalam; Cambodia; China; Fiji; French Polynesia; Guam; Hong Kong SAR, China; Indonesia; Japan; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Lao PDR; Macao SAR, China; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; New Caledonia; New Zealand; Northern Mariana Islands; Palau; Papua New Guinea; Philippines; Samoa; Singapore; Solomon Islands; Taiwan, China; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Albania; Andorra; Armenia; Austria; Azerbaijan; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Channel Islands; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Georgia; Germany; Gibraltar; Greece; Greenland; Hungary; Iceland; Ireland; Isle of Man; Italy; Kazakhstan; Kosovo; Kyrgyz Republic; Latvia; Liechtenstein; Lithuania; Luxembourg; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Romania; Russian Federation; San Marino; Serbia; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Turkmenistan; Ukraine; United Kingdom; Uzbekistan ;\",\"Antigua and Barbuda; Argentina; Aruba; Bahamas, The; Barbados; Belize; Bolivia; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Sint Maarten (Dutch part); St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Turks and Caicos Islands; Uruguay; Venezuela, RB; Virgin Islands (U.S.) ;\",\"Algeria; Bahrain; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Bermuda; Canada; United States ;\",\"Bahrain; Bhutan; Brunei Darussalam; Cabo Verde; Comoros; Cyprus; Djibouti; Estonia; Eswatini; Iceland; Maldives; Malta; Mauritius; Montenegro; San Marino; São Tomé and Príncipe; Seychelles; Timor-Leste ;\",\"Fiji; Kiribati; Marshall Islands; Micronesia, Fed. Sts.; Nauru; Palau; Samoa; Solomon Islands; Tonga; Tuvalu; Vanuatu ;\",\"Antigua and Barbuda; Bahamas, The; Bahrain; Barbados; Belize; Bhutan; Brunei Darussalam; Cabo Verde; Comoros; Cyprus; Djibouti; Dominica; Estonia; Eswatini; Fiji; Grenada; Guyana; Iceland; Kiribati; Maldives; Malta; Marshall Islands; Mauritius; Micronesia, Fed. Sts.; Montenegro; Nauru; Palau; Samoa; San Marino; São Tomé and Príncipe; Seychelles; Solomon Islands; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname; Timor-Leste; Tonga; Tuvalu; Vanuatu ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\"],[26,22,22,11,11,38,58,42,21,3,18,11,40,8,48]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>WB_Group_Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"WB_Group_Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n***\n\nBrowsing through the `composition` data I have defined 15 `WB_GROUP_CODE`s as regional codes. These regional classification criteria results per definition to **15 regions containing 379 countries**.\n\n::::\n:::::\n\n###### Region2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-wb-class-regional}\n: Groups formed by regional criteria (without the redundant `World` region)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_reg2 <- c(\"AFE\", \"AFW\", \"ARB\", \"CEB\",\n             \"EAS\", \"ECS\", \"LCN\", \"MEA\", \"NAC\",\n             \"SAS\", \"SSF\")\n\ndf_wb_reg2 <-  base::readRDS(\n  \"data/country-class/wb/rds/wb-class-compositions.rds\") |> \n  dplyr::filter(WB_Group_Code %in% str_reg2)\n\n(\n    wb_class_reg2 <- class_scheme(\n            df = df_wb_reg2,\n            sel1 = rlang::quo(`WB_Country_Name`),\n            sel2 = rlang::quo(`WB_Group_Name`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1984dccb1dc1aed1a359\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1984dccb1dc1aed1a359\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\"],[\"Africa Eastern and Southern\",\"Africa Western and Central\",\"Arab World\",\"Central Europe and the Baltics\",\"East Asia &amp; Pacific\",\"Europe &amp; Central Asia\",\"Latin America &amp; Caribbean\",\"Middle East &amp; North Africa\",\"North America\",\"South Asia\",\"Sub-Saharan Africa\"],[\"Angola; Botswana; Burundi; Comoros; Congo, Dem. Rep.; Eritrea; Eswatini; Ethiopia; Kenya; Lesotho; Madagascar; Malawi; Mauritius; Mozambique; Namibia; Rwanda; São Tomé and Príncipe; Seychelles; Somalia; South Africa; South Sudan; Sudan; Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Benin; Burkina Faso; Cabo Verde; Cameroon; Central African Republic; Chad; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Algeria; Bahrain; Comoros; Djibouti; Egypt, Arab Rep.; Iraq; Jordan; Kuwait; Lebanon; Libya; Mauritania; Morocco; Oman; Qatar; Saudi Arabia; Somalia; Sudan; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Bulgaria; Croatia; Czechia; Estonia; Hungary; Latvia; Lithuania; Poland; Romania; Slovak Republic; Slovenia ;\",\"American Samoa; Australia; Brunei Darussalam; Cambodia; China; Fiji; French Polynesia; Guam; Hong Kong SAR, China; Indonesia; Japan; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Lao PDR; Macao SAR, China; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; New Caledonia; New Zealand; Northern Mariana Islands; Palau; Papua New Guinea; Philippines; Samoa; Singapore; Solomon Islands; Taiwan, China; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Albania; Andorra; Armenia; Austria; Azerbaijan; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Channel Islands; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Georgia; Germany; Gibraltar; Greece; Greenland; Hungary; Iceland; Ireland; Isle of Man; Italy; Kazakhstan; Kosovo; Kyrgyz Republic; Latvia; Liechtenstein; Lithuania; Luxembourg; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Romania; Russian Federation; San Marino; Serbia; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Turkmenistan; Ukraine; United Kingdom; Uzbekistan ;\",\"Antigua and Barbuda; Argentina; Aruba; Bahamas, The; Barbados; Belize; Bolivia; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Sint Maarten (Dutch part); St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Turks and Caicos Islands; Uruguay; Venezuela, RB; Virgin Islands (U.S.) ;\",\"Algeria; Bahrain; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Bermuda; Canada; United States ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\"],[26,22,22,11,38,58,42,21,3,8,48]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>WB_Group_Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"WB_Group_Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n***\n\nBrowsing through the `composition` data I have declassified all small states for an alternative regional group. These regional classification criteria results to **11 regions containing 299 countries**.\n\n::::\n:::::\n\n\n\n:::\n\n::::\n:::::\n\n##### Description of the World Bank tabs\n\n1. **WB economies** displays the \"List of Economies\" and has five columns:\n    -   `Economy` with the country names (2-219) and regional names\n        (221-268)\n    -   `Code` with the ISO alpha3 codes for countries (2-219) and for\n        the regional names (221-268)\n    -   `Region` with seven different regional names:\n        -   East Asia and Pacific,\n        -   Europe and Central Asia,\n        -   Latin America & the Caribbean,\n        -   Middle East and North Africa,\n        -   North America\n        -   South Asia and\n        -   Sub-Saharan Africa\n    -   `Income group` with four groups: Low income, Lower middle\n        income, Higher middle income, and High income.\n    -   `Lending category` with three groups: `IBRD`, `Blend`, and\n        `IDA`.\n2.  **WB compositions** has four columns: `WB_Group_Code`, `WB_Group_Name`,\n    `WB_Country_Code`, `WB_Country_Name`. The 2084 rows are combinations\n    of the regional and income group with their ISO alpha 3 codes and\n    country names. (This is a more complex arrangement that I will analyse more in detail later.)\n3. **WB Standard** shows the World Bank seven standard regional groups with their countries. The 218 countries  involved in the taxonomy of the World Bank consists of all member countries of the World Bank (189) and other economies with populations of more than 30,000 (29).\n4. **WB All** includes the seven regions from the \"WB Standard\" tab but much more. But it is important to note that there is no alternative *regional* structure that comprises systematically all countries of the world --- the overall category \"World\" obviously excluded. \n    - Five of the seven regional groups of \"WB Standard\" are also clustered without high income countries. \n    - There are six other regional subcategories: \"Arab World\", \"Caribbean small states\", \"Central Europe and Baltics\", \"Other small states\", \"Pacific island small states\", \"Small states\". \n    - Additionally there are some political groups like European Union, OECD and \n    - several economical classification like \"Euro area\", \n    - different combinations of the four income groups and \n    different combinations of the three lending statuses.\n5. **Region 1** includes `WB_Group_Code` from the `composition` data and results into 15 regions containing 379 countries.\n6. **Region 2** includes again the `WB_Group_Code` from the `composition` data but has excluded all small states for an alternative regional group. These regional classification criteria results to 11 regions containing 299 countries.\n    \n**More details**\n\nThe cut off limits for the income groups are: (see: [World Bank Country and Lending Groups](https://datahelpdesk.worldbank.org/knowledgebase/articles/906519-world-bank-country-and-lending-groups))\n\n- low income, $1,145 or less; \n- lower middle income, $1,146  to $4,515; \n- upper middle income, $4,516 to $14,005; and \n- high income, more than $14,005. \n\nThe effective operational cutoff for <a class='glossary' title='The International Development Association (IDA) is the part of the World Bank that helps the world’s low-income countries. IDA’s grants and low-interest loans help countries invest in their futures, improve lives, and create safer, more prosperous communities around the world. (https://ida.worldbank.org/en/what-is-ida)'>IDA</a> eligibility is $1,335 or less. The three lending categories and their relation to each other are: (From the `Notes` sheet.)\n\n> <a class='glossary' title='The International Development Association (IDA) is the part of the World Bank that helps the world’s low-income countries. IDA’s grants and low-interest loans help countries invest in their futures, improve lives, and create safer, more prosperous communities around the world. (https://ida.worldbank.org/en/what-is-ida)'>IDA</a> countries are those that lack the financial ability to borrow from <a class='glossary' title='The International Bank for Reconstruction and Development (IBRD) is a global development cooperative owned by 189 member countries. As the largest development bank in the world, it supports the World Bank Group’s mission by providing loans, guarantees, risk management products, and advisory services to middle-income and creditworthy low-income countries, as well as by coordinating responses to regional and global challenges. (https://www.worldbank.org/en/who-we-are/ibrd)'>IBRD</a>. IDA credits are deeply concessional—interest-free loans and grants for programs aimed at boosting economic growth and improving living conditions. IBRD loans are non-concessional. `Blend` countries are eligible for IDA credits because of their low per capita incomes but are also eligible for IBRD because they are financially creditworthy.\n\nThree additional remark relating to the `Notes` sheet: \n\n1. In the `Notes` I found the sentence: \"Geographic classifications in this table cover all income levels.\" But there is a difference of one missing data value more in the `Income group` column compared with the `Region` column (50:49). The reason is that `Venezuela RB` is lacking an income group because it has been temporarily unclassified since July 2021 pending release of revised national accounts statistics. Venezuela, RB was classified as an upper-middle income country until FY21, has been unclassified since then due to the unavailability of data. But it is now again classified as `Upper middle income` (See the World Bank [page about Venezuela, RB](https://archive.doingbusiness.org/en/data/exploreeconomies/venezuela)).\n\n2. The term country, used interchangeably with economy, does not imply political independence but refers to any territory for which authorities report separate social or economic statistics. \n\n3. What follows is a quote about some details of the income classifications for the 2023 file:\n\n> Set on 1 July 2022 remain in effect until 1 July 2023. Venezuela has been temporarily unclassified since July 2021 pending release of revised national accounts statistics. Argentina, which was temporarily unclassified in July 2016 pending release of revised national accounts statistics, was classified as upper middle income for FY17 as of 29 September 2016 based on alternative conversion factors. Also effective 29 September 2016, Syrian Arab Republic is reclassified from IBRD lending category to IDA-only. On 29 March 2017, new country codes were introduced to align World Bank 3-letter codes with ISO 3-letter codes: Andorra (AND), Dem. Rep. Congo (COD), Isle of Man (IMN), Kosovo (XKX), Romania (ROU), Timor-Leste (TLS), and West Bank and Gaza (PSE). It is to be noted that Venezuela, RB classified as an upper-middle income country until FY21, has been unclassified since then due to the unavailability of data.\n\n##### Summary {#sec-02-wb-summary}\n\nThe only missing data in the columns `Economy` and `Code` corresponds to the empty line #220 that separates the country codes from the regional codes. The missing data in the other columns stem from the different structure of the second part (starting with row #221) of the data, which consists only of the two columns 'Economy' and 'Code'. \n\nEssentially this means that we have in the `wb-class.xlsx` file two different data sets: One for economies and the other one to explicate regional, economical and political grouping codes. In the Excel sheet `compositions` you will find an extended list of all available group names and their three letter codes combined with the country names and their three letter codes. These group names comprise different kinds of regional groups but also names and codes for different combination of country incomes and lending categories.\n\nAll these groups may be of interests for analysis of different trends. \n\nThe World Bank file `wb-class.xlsx` classifies all World Bank member countries (189), and all other economies with populations of more than 30,000 (29) in a coarse grid of only seven regions. For operational and analytical purposes, these economies are divided among income groups according to their [gross national income (GNI) per capita](https://datahelpdesk.worldbank.org/knowledgebase/articles/378831-why-use-gni-per-capita-to-classify-economies-into) in 2023, calculated using the [World Bank Atlas method](https://datahelpdesk.worldbank.org/knowledgebase/articles/378832-what-is-the-world-bank-atlas-method). \n\n\n#### United Nations {#sec-02-inspect-unsd}\n\n\n\n::: {.my-code-collection}\n:::: {.my-code-collection-header}\n::::: {.my-code-collection-icon}\n:::::\n:::::: {#exm-02-inspect-unsd}\n: Inspect UNSD-M49 geoscheme classification\n::::::\n\n::::\n\n::::{.my-code-collection-container}\n\n::: {.panel-tabset}\n\n###### raw\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-inspect-unsd-m49}\n: Inspect UNSD M49 geoscheme classification\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunsd_class <- base::readRDS(\n  \"data/country-class/unsd/rds/unsd_class.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(unsd_class)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(unsd_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |unsd_class |\n|Number of rows           |249        |\n|Number of columns        |15         |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |15         |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable                           | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Global Code                             |         0|          1.00|   3|   3|     0|        1|          0|\n|Global Name                             |         0|          1.00|   5|   5|     0|        1|          0|\n|Region Code                             |         1|          1.00|   3|   3|     0|        5|          0|\n|Region Name                             |         1|          1.00|   4|   8|     0|        5|          0|\n|Sub-region Code                         |         1|          1.00|   3|   3|     0|       17|          0|\n|Sub-region Name                         |         1|          1.00|   9|  31|     0|       17|          0|\n|Intermediate Region Code                |       141|          0.43|   3|   3|     0|        8|          0|\n|Intermediate Region Name                |       141|          0.43|   9|  15|     0|        8|          0|\n|Country or Area                         |         0|          1.00|   4|  52|     0|      249|          0|\n|M49 Code                                |         0|          1.00|   3|   3|     0|      249|          0|\n|ISO-alpha2 Code                         |         2|          0.99|   2|   2|     0|      247|          0|\n|ISO-alpha3 Code                         |         1|          1.00|   3|   3|     0|      248|          0|\n|Least Developed Countries (LDC)         |       203|          0.18|   1|   1|     0|        1|          0|\n|Land Locked Developing Countries (LLDC) |       217|          0.13|   1|   1|     0|        1|          0|\n|Small Island Developing States (SIDS)   |       196|          0.21|   1|   1|     0|        1|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 249\n#> Columns: 15\n#> $ `Global Code`                             <chr> \"001\", \"001\", \"001\", \"001\", …\n#> $ `Global Name`                             <chr> \"World\", \"World\", \"World\", \"…\n#> $ `Region Code`                             <chr> \"002\", \"002\", \"002\", \"002\", …\n#> $ `Region Name`                             <chr> \"Africa\", \"Africa\", \"Africa\"…\n#> $ `Sub-region Code`                         <chr> \"015\", \"015\", \"015\", \"015\", …\n#> $ `Sub-region Name`                         <chr> \"Northern Africa\", \"Northern…\n#> $ `Intermediate Region Code`                <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Intermediate Region Name`                <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Country or Area`                         <chr> \"Algeria\", \"Egypt\", \"Libya\",…\n#> $ `M49 Code`                                <chr> \"012\", \"818\", \"434\", \"504\", …\n#> $ `ISO-alpha2 Code`                         <chr> \"DZ\", \"EG\", \"LY\", \"MA\", \"SD\"…\n#> $ `ISO-alpha3 Code`                         <chr> \"DZA\", \"EGY\", \"LBY\", \"MAR\", …\n#> $ `Least Developed Countries (LDC)`         <chr> NA, NA, NA, NA, \"x\", NA, NA,…\n#> $ `Land Locked Developing Countries (LLDC)` <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Small Island Developing States (SIDS)`   <chr> NA, NA, NA, NA, NA, NA, NA, …\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n\n###### clean \n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-clean-unsd-m49}\n: Clean UNSD M49 geoscheme classification\n::::::\n:::\n::::{.my-r-code-container}\n:::::{#lst-02-clean-unsd-m49}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## column renaming vector ########\nm49_cols = c(\n  region_c = \"Region Code\", region_n = \"Region Name\",\n  subr_c = \"Sub-region Code\", subr_n = \"Sub-region Name\", \n  midr_c = \"Intermediate Region Code\", midr_n = \"Intermediate Region Name\",\n  country = \"Country or Area\", m49 = \"M49 Code\", \n  iso2 = \"ISO-alpha2 Code\", iso3 = \"ISO-alpha3 Code\",\n  ldc = \"Least Developed Countries (LDC)\", \n  lldc = \"Land Locked Developing Countries (LLDC)\", \n  sids = \"Small Island Developing States (SIDS)\"\n  )\n  \n## clean data ###############################\nunsd_class <- base::readRDS(\n  \"data/country-class/unsd/rds/unsd_class.rds\")\nunsd_class_clean <- unsd_class |> \n  dplyr::select(-(1:2)) |> \n  dplyr::rename(tidyselect::all_of(m49_cols)) |> \n  dplyr::filter(country != \"Antarctica\") |> \n  dplyr::mutate(iso2 = base::ifelse(country == \"Namibia\", \"NA\", iso2)) |> \n  dplyr::relocate(country, .before = region_c) |> \n  # set ldc, lldc and sids to 0 and 1\n  # .x = anonymous function; \"x\" = value in cols of unsd_class\n  dplyr::mutate(dplyr::across(\n    ldc:sids, ~ dplyr::if_else(.x == \"x\", \"1\", \"999\", \"0\") \n    )) |> \n  dplyr::arrange(country)\n\n## save new tibble ##########\nmy_save_data_file(\n  \"country-class/unsd/rds\",\n  unsd_class_clean,\n  \"unsd_class_clean.rds\"\n)\n\n\n## prepare skimmers ##########\nmy_skim <- skimr::skim_with(\n  character = skimr::sfl(\n    whitespace = NULL,\n    min = NULL,\n    max = NULL,\n    empty = NULL\n    )\n)\n\n\n## display results ##########\nunsd_class <- base::readRDS(\n  \"data/country-class/unsd/rds/unsd_class.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nmy_skim(unsd_class_clean) |> dplyr::select(-complete_rate)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(unsd_class_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                 |\n|:------------------------|:----------------|\n|Name                     |unsd_class_clean |\n|Number of rows           |248              |\n|Number of columns        |13               |\n|_______________________  |                 |\n|Column type frequency:   |                 |\n|character                |13               |\n|________________________ |                 |\n|Group variables          |None             |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| n_unique|\n|:-------------|---------:|--------:|\n|country       |         0|      248|\n|region_c      |         0|        5|\n|region_n      |         0|        5|\n|subr_c        |         0|       17|\n|subr_n        |         0|       17|\n|midr_c        |       140|        8|\n|midr_n        |       140|        8|\n|m49           |         0|      248|\n|iso2          |         1|      247|\n|iso3          |         1|      247|\n|ldc           |         0|        2|\n|lldc          |         0|        2|\n|sids          |         0|        2|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 248\n#> Columns: 13\n#> $ country  <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"American Samoa\", \"Andor…\n#> $ region_c <chr> \"142\", \"150\", \"002\", \"009\", \"150\", \"002\", \"019\", \"019\", \"019\"…\n#> $ region_n <chr> \"Asia\", \"Europe\", \"Africa\", \"Oceania\", \"Europe\", \"Africa\", \"A…\n#> $ subr_c   <chr> \"034\", \"039\", \"015\", \"061\", \"039\", \"202\", \"419\", \"419\", \"419\"…\n#> $ subr_n   <chr> \"Southern Asia\", \"Southern Europe\", \"Northern Africa\", \"Polyn…\n#> $ midr_c   <chr> NA, NA, NA, NA, NA, \"017\", \"029\", \"029\", \"005\", NA, \"029\", NA…\n#> $ midr_n   <chr> NA, NA, NA, NA, NA, \"Middle Africa\", \"Caribbean\", \"Caribbean\"…\n#> $ m49      <chr> \"004\", \"008\", \"012\", \"016\", \"020\", \"024\", \"660\", \"028\", \"032\"…\n#> $ iso2     <chr> \"AF\", \"AL\", \"DZ\", \"AS\", \"AD\", \"AO\", \"AI\", \"AG\", \"AR\", \"AM\", \"…\n#> $ iso3     <chr> \"AFG\", \"ALB\", \"DZA\", \"ASM\", \"AND\", \"AGO\", \"AIA\", \"ATG\", \"ARG\"…\n#> $ ldc      <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"…\n#> $ lldc     <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"…\n#> $ sids     <chr> \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"1\", \"1\", \"0\", \"0\", \"1\", \"0\", \"…\n```\n\n\n:::\n:::\n\n\n\n\n\nScript for data cleaning of the `unsd_class.rds` file as explained in @prp-02-clean-unsd-m49-data\n:::::\n\n::::\n:::::\n\n###### Region\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-ID-text}\n: Display regions of UNSD class scheme\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_unsd <-  base::readRDS(\n  \"data/country-class/unsd/rds/unsd_class_clean.rds\")\n\n(\n    unsd_class1 <- class_scheme(\n            df = df_unsd,\n            sel1 = rlang::quo(`country`),\n            sel2 = rlang::quo(`region_n`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-c8359f27f798afac29eb\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c8359f27f798afac29eb\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[\"Africa\",\"Americas\",\"Asia\",\"Europe\",\"Oceania\"],[\"Algeria; Angola; Benin; Botswana; British Indian Ocean Territory; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Djibouti; Egypt; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; French Southern Territories; Gabon; Gambia; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Libya; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mayotte; Morocco; Mozambique; Namibia; Niger; Nigeria; Rwanda; Réunion; Saint Helena; Sao Tome and Principe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Togo; Tunisia; Uganda; United Republic of Tanzania; Western Sahara; Zambia; Zimbabwe ;\",\"Anguilla; Antigua and Barbuda; Argentina; Aruba; Bahamas; Barbados; Belize; Bermuda; Bolivia (Plurinational State of); Bonaire, Sint Eustatius and Saba; Bouvet Island; Brazil; British Virgin Islands; Canada; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Falkland Islands (Malvinas); French Guiana; Greenland; Grenada; Guadeloupe; Guatemala; Guyana; Haiti; Honduras; Jamaica; Martinique; Mexico; Montserrat; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Pierre and Miquelon; Saint Vincent and the Grenadines; Sint Maarten (Dutch part); South Georgia and the South Sandwich Islands; Suriname; Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands; United States of America; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Afghanistan; Armenia; Azerbaijan; Bahrain; Bangladesh; Bhutan; Brunei Darussalam; Cambodia; China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Cyprus; Democratic People's Republic of Korea; Georgia; India; Indonesia; Iran (Islamic Republic of); Iraq; Israel; Japan; Jordan; Kazakhstan; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Malaysia; Maldives; Mongolia; Myanmar; Nepal; Oman; Pakistan; Philippines; Qatar; Republic of Korea; Saudi Arabia; Singapore; Sri Lanka; State of Palestine; Syrian Arab Republic; Tajikistan; Thailand; Timor-Leste; Turkmenistan; Türkiye; United Arab Emirates; Uzbekistan; Viet Nam; Yemen ;\",\"Albania; Andorra; Austria; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Guernsey; Holy See; Hungary; Iceland; Ireland; Isle of Man; Italy; Jersey; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Republic of Moldova; Romania; Russian Federation; San Marino; Sark; Serbia; Slovakia; Slovenia; Spain; Svalbard and Jan Mayen Islands; Sweden; Switzerland; Ukraine; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Australia; Christmas Island; Cocos (Keeling) Islands; Cook Islands; Fiji; French Polynesia; Guam; Heard Island and McDonald Islands; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; New Caledonia; New Zealand; Niue; Norfolk Island; Northern Mariana Islands; Palau; Papua New Guinea; Pitcairn; Samoa; Solomon Islands; Tokelau; Tonga; Tuvalu; United States Minor Outlying Islands; Vanuatu; Wallis and Futuna Islands ;\"],[60,57,50,52,29]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region_n<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region_n\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\n::::\n:::::\n\n`region_n` is a classification scheme for continents with **248\ncountries in 5 regions**.\n\n###### Sub-region\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-sub-region}\n: Display sub-regions of UNSD class scheme\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_unsd <-  base::readRDS(\n  \"data/country-class/unsd/rds/unsd_class_clean.rds\")\n\n(\n    unsd_class2 <- class_scheme(\n            df = df_unsd,\n            sel1 = rlang::quo(`country`),\n            sel2 = rlang::quo(`subr_n`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-7d793fdd1d558c25ccf4\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7d793fdd1d558c25ccf4\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\"],[\"Australia and New Zealand\",\"Central Asia\",\"Eastern Asia\",\"Eastern Europe\",\"Latin America and the Caribbean\",\"Melanesia\",\"Micronesia\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"Polynesia\",\"South-eastern Asia\",\"Southern Asia\",\"Southern Europe\",\"Sub-Saharan Africa\",\"Western Asia\",\"Western Europe\"],[\"Australia; Christmas Island; Cocos (Keeling) Islands; Heard Island and McDonald Islands; New Zealand; Norfolk Island ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Turkmenistan; Uzbekistan ;\",\"China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Democratic People's Republic of Korea; Japan; Mongolia; Republic of Korea ;\",\"Belarus; Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Anguilla; Antigua and Barbuda; Argentina; Aruba; Bahamas; Barbados; Belize; Bolivia (Plurinational State of); Bonaire, Sint Eustatius and Saba; Bouvet Island; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Falkland Islands (Malvinas); French Guiana; Grenada; Guadeloupe; Guatemala; Guyana; Haiti; Honduras; Jamaica; Martinique; Mexico; Montserrat; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); South Georgia and the South Sandwich Islands; Suriname; Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Fiji; New Caledonia; Papua New Guinea; Solomon Islands; Vanuatu ;\",\"Guam; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; Northern Mariana Islands; Palau; United States Minor Outlying Islands ;\",\"Algeria; Egypt; Libya; Morocco; Sudan; Tunisia; Western Sahara ;\",\"Bermuda; Canada; Greenland; Saint Pierre and Miquelon; United States of America ;\",\"Denmark; Estonia; Faroe Islands; Finland; Guernsey; Iceland; Ireland; Isle of Man; Jersey; Latvia; Lithuania; Norway; Sark; Svalbard and Jan Mayen Islands; Sweden; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Cook Islands; French Polynesia; Niue; Pitcairn; Samoa; Tokelau; Tonga; Tuvalu; Wallis and Futuna Islands ;\",\"Brunei Darussalam; Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Afghanistan; Bangladesh; Bhutan; India; Iran (Islamic Republic of); Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Albania; Andorra; Bosnia and Herzegovina; Croatia; Gibraltar; Greece; Holy See; Italy; Malta; Montenegro; North Macedonia; Portugal; San Marino; Serbia; Slovenia; Spain ;\",\"Angola; Benin; Botswana; British Indian Ocean Territory; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Djibouti; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; French Southern Territories; Gabon; Gambia; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mayotte; Mozambique; Namibia; Niger; Nigeria; Rwanda; Réunion; Saint Helena; Sao Tome and Principe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Togo; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Qatar; Saudi Arabia; State of Palestine; Syrian Arab Republic; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Liechtenstein; Luxembourg; Monaco; Netherlands; Switzerland ;\"],[6,5,7,10,52,5,8,7,5,17,10,11,9,16,53,18,9]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>subr_n<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"subr_n\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n`subr_n` is a classification scheme with **248\ncountries in 17 regions**.\n\n###### Intermediate\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ID-text}\n: Display intermediate regions of UNSD class scheme\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_unsd <-  base::readRDS(\n  \"data/country-class/unsd/rds/unsd_class_clean.rds\")\n\n(\n    dt_unsd_class3 <- class_scheme(\n            df = df_unsd,\n            sel1 = rlang::quo(`country`),\n            sel2 = rlang::quo(`midr_n`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1e9863dbec5c31f5f7b7\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1e9863dbec5c31f5f7b7\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],[\"Caribbean\",\"Central America\",\"Channel Islands\",\"Eastern Africa\",\"Middle Africa\",\"South America\",\"Southern Africa\",\"Western Africa\",null],[\"Anguilla; Antigua and Barbuda; Aruba; Bahamas; Barbados; Bonaire, Sint Eustatius and Saba; British Virgin Islands; Cayman Islands; Cuba; Curaçao; Dominica; Dominican Republic; Grenada; Guadeloupe; Haiti; Jamaica; Martinique; Montserrat; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Guernsey; Jersey; Sark ;\",\"British Indian Ocean Territory; Burundi; Comoros; Djibouti; Eritrea; Ethiopia; French Southern Territories; Kenya; Madagascar; Malawi; Mauritius; Mayotte; Mozambique; Rwanda; Réunion; Seychelles; Somalia; South Sudan; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"Angola; Cameroon; Central African Republic; Chad; Congo; Democratic Republic of the Congo; Equatorial Guinea; Gabon; Sao Tome and Principe ;\",\"Argentina; Bolivia (Plurinational State of); Bouvet Island; Brazil; Chile; Colombia; Ecuador; Falkland Islands (Malvinas); French Guiana; Guyana; Paraguay; Peru; South Georgia and the South Sandwich Islands; Suriname; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Benin; Burkina Faso; Cabo Verde; Côte d’Ivoire; Gambia; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Saint Helena; Senegal; Sierra Leone; Togo ;\",\"Afghanistan; Albania; Algeria; American Samoa; Andorra; Armenia; Australia; Austria; Azerbaijan; Bahrain; Bangladesh; Belarus; Belgium; Bermuda; Bhutan; Bosnia and Herzegovina; Brunei Darussalam; Bulgaria; Cambodia; Canada; China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Christmas Island; Cocos (Keeling) Islands; Cook Islands; Croatia; Cyprus; Czechia; Democratic People's Republic of Korea; Denmark; Egypt; Estonia; Faroe Islands; Fiji; Finland; France; French Polynesia; Georgia; Germany; Gibraltar; Greece; Greenland; Guam; Heard Island and McDonald Islands; Holy See; Hungary; Iceland; India; Indonesia; Iran (Islamic Republic of); Iraq; Ireland; Isle of Man; Israel; Italy; Japan; Jordan; Kazakhstan; Kiribati; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Latvia; Lebanon; Libya; Liechtenstein; Lithuania; Luxembourg; Malaysia; Maldives; Malta; Marshall Islands; Micronesia (Federated States of); Monaco; Mongolia; Montenegro; Morocco; Myanmar; Nauru; Nepal; Netherlands; New Caledonia; New Zealand; Niue; Norfolk Island; North Macedonia; Northern Mariana Islands; Norway; Oman; Pakistan; Palau; Papua New Guinea; Philippines; Pitcairn; Poland; Portugal; Qatar; Republic of Korea; Republic of Moldova; Romania; Russian Federation; Saint Pierre and Miquelon; Samoa; San Marino; Saudi Arabia; Serbia; Singapore; Slovakia; Slovenia; Solomon Islands; Spain; Sri Lanka; State of Palestine; Sudan; Svalbard and Jan Mayen Islands; Sweden; Switzerland; Syrian Arab Republic; Tajikistan; Thailand; Timor-Leste; Tokelau; Tonga; Tunisia; Turkmenistan; Tuvalu; Türkiye; Ukraine; United Arab Emirates; United Kingdom of Great Britain and Northern Ireland; United States Minor Outlying Islands; United States of America; Uzbekistan; Vanuatu; Viet Nam; Wallis and Futuna Islands; Western Sahara; Yemen; Åland Islands ;\"],[28,8,3,22,9,16,5,17,140]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>midr_n<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"midr_n\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n::::\n:::::\n\n`midr_n` is an inconsistent classification scheme with **248\ncountries in 9 regions**. It has a focus on South- / Central America and Africa. All the other countries are together in a big mixed groups with 140 countries.\n\n###### Intermediate2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-ID-text}\n: Display alternative intermediate regions of UNSD class scheme\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunsd_class_clean <-  base::readRDS(\n  \"data/country-class/unsd/rds/unsd_class_clean.rds\")\n\n# create interemdiate2 (more consistent than intermediate)\nunsd_class4 <- unsd_class_clean |> \n  dplyr::mutate(midr_n2 = \n         base::ifelse(is.na(midr_n), subr_n, midr_n)\n         ) |> \n  dplyr::mutate(midr_c2 = \n         base::ifelse(is.na(midr_c), subr_c, midr_c)\n         )\n\n\n## save intermediate2 data as .rds file ################\nmy_save_data_file(\n  \"country-class/unsd/rds\", \n  unsd_class4, \n  \"unsd_class_finale.rds\")\n\n\n(\n    dt_unsd_class4 <- class_scheme(\n            df = unsd_class4,\n            sel1 = rlang::quo(`country`),\n            sel2 = rlang::quo(`midr_n2`)\n            )\n) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-135fe37cec7e0ea4a13c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-135fe37cec7e0ea4a13c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"],[\"Australia and New Zealand\",\"Caribbean\",\"Central America\",\"Central Asia\",\"Channel Islands\",\"Eastern Africa\",\"Eastern Asia\",\"Eastern Europe\",\"Melanesia\",\"Micronesia\",\"Middle Africa\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"Polynesia\",\"South America\",\"South-eastern Asia\",\"Southern Africa\",\"Southern Asia\",\"Southern Europe\",\"Western Africa\",\"Western Asia\",\"Western Europe\"],[\"Australia; Christmas Island; Cocos (Keeling) Islands; Heard Island and McDonald Islands; New Zealand; Norfolk Island ;\",\"Anguilla; Antigua and Barbuda; Aruba; Bahamas; Barbados; Bonaire, Sint Eustatius and Saba; British Virgin Islands; Cayman Islands; Cuba; Curaçao; Dominica; Dominican Republic; Grenada; Guadeloupe; Haiti; Jamaica; Martinique; Montserrat; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Turkmenistan; Uzbekistan ;\",\"Guernsey; Jersey; Sark ;\",\"British Indian Ocean Territory; Burundi; Comoros; Djibouti; Eritrea; Ethiopia; French Southern Territories; Kenya; Madagascar; Malawi; Mauritius; Mayotte; Mozambique; Rwanda; Réunion; Seychelles; Somalia; South Sudan; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Democratic People's Republic of Korea; Japan; Mongolia; Republic of Korea ;\",\"Belarus; Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Fiji; New Caledonia; Papua New Guinea; Solomon Islands; Vanuatu ;\",\"Guam; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; Northern Mariana Islands; Palau; United States Minor Outlying Islands ;\",\"Angola; Cameroon; Central African Republic; Chad; Congo; Democratic Republic of the Congo; Equatorial Guinea; Gabon; Sao Tome and Principe ;\",\"Algeria; Egypt; Libya; Morocco; Sudan; Tunisia; Western Sahara ;\",\"Bermuda; Canada; Greenland; Saint Pierre and Miquelon; United States of America ;\",\"Denmark; Estonia; Faroe Islands; Finland; Iceland; Ireland; Isle of Man; Latvia; Lithuania; Norway; Svalbard and Jan Mayen Islands; Sweden; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Cook Islands; French Polynesia; Niue; Pitcairn; Samoa; Tokelau; Tonga; Tuvalu; Wallis and Futuna Islands ;\",\"Argentina; Bolivia (Plurinational State of); Bouvet Island; Brazil; Chile; Colombia; Ecuador; Falkland Islands (Malvinas); French Guiana; Guyana; Paraguay; Peru; South Georgia and the South Sandwich Islands; Suriname; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Brunei Darussalam; Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Afghanistan; Bangladesh; Bhutan; India; Iran (Islamic Republic of); Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Albania; Andorra; Bosnia and Herzegovina; Croatia; Gibraltar; Greece; Holy See; Italy; Malta; Montenegro; North Macedonia; Portugal; San Marino; Serbia; Slovenia; Spain ;\",\"Benin; Burkina Faso; Cabo Verde; Côte d’Ivoire; Gambia; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Saint Helena; Senegal; Sierra Leone; Togo ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Qatar; Saudi Arabia; State of Palestine; Syrian Arab Republic; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Liechtenstein; Luxembourg; Monaco; Netherlands; Switzerland ;\"],[6,28,8,5,3,22,7,10,5,8,9,7,5,14,10,16,11,5,9,16,17,18,9]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>midr_n2<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"midr_n2\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n::::\n:::::\n\n`midr_n2` is a classification scheme with **248\ncountries in 23 regions**. This grouping divides each continent into different regions and has more plausibility than the `midr_n` classification in tab \"Intermediate\".\n\n\n\n:::\n\n::::\n:::::\n\n\n##### Descriptions of the UNSD-M49 geoscheme classification\n\nWhat follows is a description if the tabs in @exm-02-inspect-unsd.\n\n**Tab \"raw\"**: The raw file `unsd_class` has 15 columns as you can also see online from the [Overview\npage](https://unstats.un.org/unsd/methodology/m49/overview/). The many missing values (`NAs`) for the categories <a class='glossary' title='The term “Least Developed Countries” (LDCs) refers to developing countries listed by the United Nations that exhibit the lowest indicators of socioeconomic development. As of December 2024, the classification applies to 44 countries. See https://unctad.org/topic/least-developed-countries/list'>LDC</a>, <a class='glossary' title='Landlocked Developing Countries (LLDCs) are developing nations that do not have direct access to the sea. These countries face significant economic and development challenges due to their geographical isolation and the need to rely on neighboring countries for access to international markets. Of the 32 LLDCs 16 are classified as LDCs (December 2024). See: https://www.un.org/ohrlls/content/about-landlocked-developing-countries'>LLDC</a> and <a class='glossary' title='Small Island Developing States (SIDS) are a group of developing countries that are small island nations and territories facing similar sustainable development challenges. These countries are particularly vulnerable to environmental and economic shocks due to their small size, limited resources, and remote locations. The aggregate population of all the SIDS is 65 million. See: https://www.un.org/ohrlls/content/about-small-island-developing-states'>SIDS</a> are easy explained: These three columns are coded with an 'x' if the country of this row belong to this category. \n\nOne of the missing value for ISO-alpha2 codes belongs to Namibia because its abbreviation `NA` is interpreted by R as a missing value!\n\nThe other missing values for ISO-alpha2 and ISO-alpha3 is related to [Sark](https://www.sark.co.uk/), which is \"recognized by the United Nations Statistics Division (UNSD) as a separate territory\" but was not accepted by ISO now for more than 20 years [@mccarthy-2020]. Recently a new application (see [PDF](https://www.sarkid.org/assets/pdf/SarkID%20Identity%20info%20v1_2.pdf)) will change that but currently Sark is still waiting for [ISO 3166 codes](https://www.iso.org/iso-3166-country-codes.html).\n\n\n**Tab \"clean\"**: Recoding columns \"LDC\", \"LLDC\" and \"SIDS\" with 1 and 0 (1 = yes, belongs to this category, 0 = no, does not belong to this category) reduce most of their missing values. I have also recoded \"Namibia\" to repair their \"NA\" value.\n\n**Tab \"Region\", \"Sub-Region\" and \"Intermediate Region\"**: One missing value in these regional categories is related to Antarctica which is not seen by the M49 scheme as a separated region. It has therefore no regional codes and names with the exception of the overall comprising global region. But it has M49 as well ISO-alpha codes.\n\n\n:::::{.my-procedure}\n:::{.my-procedure-header}\n:::::: {#prp-02-clean-unsd-m49-data}\n: Cleaning the UNSD M49 data file\n::::::\n:::\n::::{.my-procedure-container}\nTo clean the data I have taken the following recoding actions in the script for the \"clean\" tab in\n\n- Remove the global codes and names because they a redundant: All rows have global code \"001\" (\"World\").\n- Rename the columns to get shorter names.\n- Remove Antarctica because it is not seen as separate country.\n- Replace `NA` in the column ISO-alpha2 Code\" of Namibia with the string \"NA\".\n- Recode the columns LDC, LLDC and SIDS with 0 and 1.\n- Relocate the column \"country\" (previously \"Country or Area\") to the first column because than it easier to find some relevant content\n- Sort the data alphabetically by \"country\".\n::::\n:::::\n\n\n\n\n\n\n##### Summary\n\nThe UN geoscheme classification knows 248 countries divided the world into \n\n-  5 continents (Africa, Americas, Asia, Europe and Oceania): **Tab Region** \n- 17 sub-regions **Tab Sub-region**\n-  9 intermediate regions focussing on South/Central America and Africa, otherwise not consistent **Tab Intermediate**\n- 23 areas divides the continents into different parts **Tab Intermediate2**\n\n\n## Combining M49 and WHR {#sec-02-combine-whr-with-m49}\n\nTo use the different region with the WHR data I will combine the M49 classification data scheme with the WHR data. Ideally I would combine the two datasets with their unique ISO3 code, but unfortunately the WHR data are lacking these data. Thew next best approach is to link the two datasets via the country names. But here I have to take into account that the authoritative country names are provided by M49 and not by the WHR data.\n\n### Combine with country names\n\n::: {.my-code-collection}\n:::: {.my-code-collection-header}\n::::: {.my-code-collection-icon}\n:::::\n:::::: {#exm-02-combine-whr-with-m49}\n: Combine WHR data with M49 geoscheme\n::::::\n\n::::\n\n::::{.my-code-collection-container}\n\n::: {.panel-tabset}\n\n###### Combine\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-combine-whr-m49}\n: Combine WHR with UNSD M49 data\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhr_2011_2024 <-  base::readRDS(\n  \"data/whr-cantril/rds/whr_2011_2024_arrange.rds\")\n\nunsd_class_finale <-  base::readRDS(\n  \"data/country-class/unsd/rds/unsd_class_finale.rds\")\n\n## left join: WHR as priority ########\nwhr_m49_first_try <- dplyr::left_join(\n  x = whr_2011_2024,\n  y = unsd_class_finale,\n  by = dplyr::join_by(`Country name` == country),\n  relationship = \"many-to-one\") |> \n  dplyr::relocate(iso3, .after = `Country name`)\n\n## select columns and show distinct countries\n whr_m49_first_try |> \n    dplyr::select(\n      `Country name`, iso2, iso3, m49\n    ) |> \n    dplyr::distinct() |> \n    DT::datatable(class = 'cell-border compact stripe', \n                  options = list(\n                    pageLength = 25,\n                    lengthMenu = c(25, 50, 100, 200)\n                    )\n              )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-c45ea61984d1ecc30ffe\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c45ea61984d1ecc30ffe\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\"],[\"Afghanistan\",\"Albania\",\"Algeria\",\"Angola\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahrain\",\"Bangladesh\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bhutan\",\"Bolivia\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Central African Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Comoros\",\"Congo\",\"Costa Rica\",\"Croatia\",\"Cuba\",\"Cyprus\",\"Czechia\",\"Côte d’Ivoire\",\"DR Congo\",\"Denmark\",\"Djibouti\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Estonia\",\"Eswatini\",\"Ethiopia\",\"Finland\",\"France\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Guatemala\",\"Guinea\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong SAR of China\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Lao PDR\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Lithuania\",\"Luxembourg\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Cyprus\",\"North Macedonia\",\"Norway\",\"Oman\",\"Pakistan\",\"Panama\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Republic of Korea\",\"Republic of Moldova\",\"Romania\",\"Russian Federation\",\"Rwanda\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Somalia\",\"Somaliland Region\",\"South Africa\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"State of Palestine\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan Province of China\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Togo\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkmenistan\",\"Türkiye\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Venezuela\",\"Viet Nam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"],[\"AF\",\"AL\",\"DZ\",\"AO\",\"AR\",\"AM\",\"AU\",\"AT\",\"AZ\",\"BH\",\"BD\",\"BY\",\"BE\",\"BZ\",\"BJ\",\"BT\",null,\"BA\",\"BW\",\"BR\",\"BG\",\"BF\",\"BI\",\"KH\",\"CM\",\"CA\",\"CF\",\"TD\",\"CL\",\"CN\",\"CO\",\"KM\",\"CG\",\"CR\",\"HR\",\"CU\",\"CY\",\"CZ\",\"CI\",null,\"DK\",\"DJ\",\"DO\",\"EC\",\"EG\",\"SV\",\"EE\",\"SZ\",\"ET\",\"FI\",\"FR\",\"GA\",\"GM\",\"GE\",\"DE\",\"GH\",\"GR\",\"GT\",\"GN\",\"GY\",\"HT\",\"HN\",null,\"HU\",\"IS\",\"IN\",\"ID\",null,\"IQ\",\"IE\",\"IL\",\"IT\",\"JM\",\"JP\",\"JO\",\"KZ\",\"KE\",null,\"KW\",\"KG\",null,\"LV\",\"LB\",\"LS\",\"LR\",\"LY\",\"LT\",\"LU\",null,\"MG\",\"MW\",\"MY\",\"MV\",\"ML\",\"MT\",\"MR\",\"MU\",\"MX\",\"MN\",\"ME\",\"MA\",\"MZ\",\"MM\",\"NA\",\"NP\",\"NL\",\"NZ\",\"NI\",\"NE\",\"NG\",null,\"MK\",\"NO\",\"OM\",\"PK\",\"PA\",\"PY\",\"PE\",\"PH\",\"PL\",\"PT\",\"PR\",\"QA\",\"KR\",\"MD\",\"RO\",\"RU\",\"RW\",\"SA\",\"SN\",\"RS\",\"SL\",\"SG\",\"SK\",\"SI\",\"SO\",null,\"ZA\",\"SS\",\"ES\",\"LK\",\"PS\",\"SD\",\"SR\",null,\"SE\",\"CH\",null,null,\"TJ\",null,\"TH\",\"TG\",\"TT\",\"TN\",\"TM\",\"TR\",\"UG\",\"UA\",\"AE\",null,null,\"UY\",\"UZ\",null,\"VN\",\"YE\",\"ZM\",\"ZW\"],[\"AFG\",\"ALB\",\"DZA\",\"AGO\",\"ARG\",\"ARM\",\"AUS\",\"AUT\",\"AZE\",\"BHR\",\"BGD\",\"BLR\",\"BEL\",\"BLZ\",\"BEN\",\"BTN\",null,\"BIH\",\"BWA\",\"BRA\",\"BGR\",\"BFA\",\"BDI\",\"KHM\",\"CMR\",\"CAN\",\"CAF\",\"TCD\",\"CHL\",\"CHN\",\"COL\",\"COM\",\"COG\",\"CRI\",\"HRV\",\"CUB\",\"CYP\",\"CZE\",\"CIV\",null,\"DNK\",\"DJI\",\"DOM\",\"ECU\",\"EGY\",\"SLV\",\"EST\",\"SWZ\",\"ETH\",\"FIN\",\"FRA\",\"GAB\",\"GMB\",\"GEO\",\"DEU\",\"GHA\",\"GRC\",\"GTM\",\"GIN\",\"GUY\",\"HTI\",\"HND\",null,\"HUN\",\"ISL\",\"IND\",\"IDN\",null,\"IRQ\",\"IRL\",\"ISR\",\"ITA\",\"JAM\",\"JPN\",\"JOR\",\"KAZ\",\"KEN\",null,\"KWT\",\"KGZ\",null,\"LVA\",\"LBN\",\"LSO\",\"LBR\",\"LBY\",\"LTU\",\"LUX\",null,\"MDG\",\"MWI\",\"MYS\",\"MDV\",\"MLI\",\"MLT\",\"MRT\",\"MUS\",\"MEX\",\"MNG\",\"MNE\",\"MAR\",\"MOZ\",\"MMR\",\"NAM\",\"NPL\",\"NLD\",\"NZL\",\"NIC\",\"NER\",\"NGA\",null,\"MKD\",\"NOR\",\"OMN\",\"PAK\",\"PAN\",\"PRY\",\"PER\",\"PHL\",\"POL\",\"PRT\",\"PRI\",\"QAT\",\"KOR\",\"MDA\",\"ROU\",\"RUS\",\"RWA\",\"SAU\",\"SEN\",\"SRB\",\"SLE\",\"SGP\",\"SVK\",\"SVN\",\"SOM\",null,\"ZAF\",\"SSD\",\"ESP\",\"LKA\",\"PSE\",\"SDN\",\"SUR\",null,\"SWE\",\"CHE\",null,null,\"TJK\",null,\"THA\",\"TGO\",\"TTO\",\"TUN\",\"TKM\",\"TUR\",\"UGA\",\"UKR\",\"ARE\",null,null,\"URY\",\"UZB\",null,\"VNM\",\"YEM\",\"ZMB\",\"ZWE\"],[\"004\",\"008\",\"012\",\"024\",\"032\",\"051\",\"036\",\"040\",\"031\",\"048\",\"050\",\"112\",\"056\",\"084\",\"204\",\"064\",null,\"070\",\"072\",\"076\",\"100\",\"854\",\"108\",\"116\",\"120\",\"124\",\"140\",\"148\",\"152\",\"156\",\"170\",\"174\",\"178\",\"188\",\"191\",\"192\",\"196\",\"203\",\"384\",null,\"208\",\"262\",\"214\",\"218\",\"818\",\"222\",\"233\",\"748\",\"231\",\"246\",\"250\",\"266\",\"270\",\"268\",\"276\",\"288\",\"300\",\"320\",\"324\",\"328\",\"332\",\"340\",null,\"348\",\"352\",\"356\",\"360\",null,\"368\",\"372\",\"376\",\"380\",\"388\",\"392\",\"400\",\"398\",\"404\",null,\"414\",\"417\",null,\"428\",\"422\",\"426\",\"430\",\"434\",\"440\",\"442\",null,\"450\",\"454\",\"458\",\"462\",\"466\",\"470\",\"478\",\"480\",\"484\",\"496\",\"499\",\"504\",\"508\",\"104\",\"516\",\"524\",\"528\",\"554\",\"558\",\"562\",\"566\",null,\"807\",\"578\",\"512\",\"586\",\"591\",\"600\",\"604\",\"608\",\"616\",\"620\",\"630\",\"634\",\"410\",\"498\",\"642\",\"643\",\"646\",\"682\",\"686\",\"688\",\"694\",\"702\",\"703\",\"705\",\"706\",null,\"710\",\"728\",\"724\",\"144\",\"275\",\"729\",\"740\",null,\"752\",\"756\",null,null,\"762\",null,\"764\",\"768\",\"780\",\"788\",\"795\",\"792\",\"800\",\"804\",\"784\",null,null,\"858\",\"860\",null,\"704\",\"887\",\"894\",\"716\"]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Country name<\\/th>\\n      <th>iso2<\\/th>\\n      <th>iso3<\\/th>\\n      <th>m49<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[25,50,100,200],\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Country name\",\"targets\":1},{\"name\":\"iso2\",\"targets\":2},{\"name\":\"iso3\",\"targets\":3},{\"name\":\"m49\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n\n###### Show Missing\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-show-missing-iso3-codes}\n: Show WHR countries with missing ISO3 codes\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhr_m49_first_try |> \n  dplyr::select(\n      `Country name`, iso2, iso3, m49\n    ) |> \n    dplyr::distinct() |> \n  dplyr::filter(base::is.na(iso3)) |> \n  DT::datatable(class = 'cell-border compact stripe', \n                  options = list(\n                    pageLength = 25,\n                    lengthMenu = c(5, 10, 15, 25)\n                    )\n              )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-f34fd5cff405152997b8\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f34fd5cff405152997b8\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\"],[\"Bolivia\",\"DR Congo\",\"Hong Kong SAR of China\",\"Iran\",\"Kosovo\",\"Lao PDR\",\"Macedonia\",\"North Cyprus\",\"Somaliland Region\",\"Swaziland\",\"Syria\",\"Taiwan Province of China\",\"Tanzania\",\"United Kingdom\",\"United States\",\"Venezuela\"],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Country name<\\/th>\\n      <th>iso2<\\/th>\\n      <th>iso3<\\/th>\\n      <th>m49<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,25],\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Country name\",\"targets\":1},{\"name\":\"iso2\",\"targets\":2},{\"name\":\"iso3\",\"targets\":3},{\"name\":\"m49\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n\n### Differences WHR and M49\n\n\nCombining the two datasets of M49 classification WHR leaves 16 country names in WHR empty because they do not match. The reasons are two fold:\n\n1. Many names do not match because of different names even both dataset mean the same countries.\n2. Some country names of the WHR data do not correspond to the official country classification (M49).\n\nThe following table details the differences between the country names in the WHR and UNSD M49 datasets.\n\n| Country name WHR         | Country name M49                      | Comment                                                 |\n|:--------------------------|:------------------------------------------------------|:--------------------------------------------------------|\n| Bolivia                  | Bolivia (Plurinational State of)                     |                                                         |\n| DR Congo                 | Democratic Republic of the Congo                     |                                                         |\n| Hong Kong SAR of China   | China, Hong Kong Special Administrative Region       |                                                         |\n| Iran                     | Iran (Islamic Republic of)                           |                                                         |\n| Kosovo                   |                                                      | Not every country recognizes Kosovo (prov. code XKX)    |\n| Lao PDR                  | Lao People's Democratic Republic                     |                                                         |\n| Macedonia                | North Macedonia                                      | Renamed 2019, only wrong for the year 2019                                           |\n| North Cyprus             |                                                      | Recognized only by Türkiye                              |\n| Somaliland Region        |                                                      | Not recognized, self-declared independence from Somalia |\n| Swaziland                | Eswatini                                             | Renamed 2018                                           |\n| Syria                    | Syrian Arab Republic                                 |                                                         |\n| Taiwan Province of China |                                                      | China -- as one of the world's largest and most influential countries -- considers Taiwan as part of its territory         |\n| Tanzania                 | United Republic of Tanzania                          |                                                         |\n| United Kingdom           | United Kingdom of Great Britain and Northern Ireland |                                                         |\n| United States            | United States of America                             |                                                         |\n| Venezuela                | Venezuela (Bolivarian Republic of)                     |                                                         |\n\n: Differences between WHR and UNSD M49 {#tbl-02-differences-whr-m49} {.striped .hover}\n\n### WHR with revised country name\n\nI change the WHR country designations to their official m49 country names. The exception are Kosovo, North Cyprus, Somaliland and Taiwan where no ISO codes exist.  These four names are set in angle brackets \"[]\" and remain without ISO and M49 codes.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-revise-country-names}\n: WHR data with official country names\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhr_2011_2024_arrange <-  base::readRDS(\n  \"data/whr-cantril/rds/whr_2011_2024_arrange.rds\")\n\n## revise WHR data with m49 names ################\nwhr_2011_2024_revised <-  whr_2011_2024_arrange |> \n  dplyr::rename(Country_WHR = `Country name`) |> \n  dplyr::mutate(Country_M49 =\n    dplyr::case_when(\n      Country_WHR == \"Bolivia\" ~ \"Bolivia (Plurinational State of)\",\n      Country_WHR == \"DR Congo\" ~ \"Democratic Republic of the Congo\",\n      Country_WHR == \"Hong Kong SAR of China\" ~ \"China, Hong Kong Special Administrative Region\",\n      Country_WHR == \"Iran\" ~ \"Iran (Islamic Republic of)\",\n      Country_WHR == \"Kosovo\" ~ \"[Kosovo]\",\n      Country_WHR == \"Lao PDR\" ~ \"Lao People's Democratic Republic\",\n      Country_WHR == \"Macedonia\" ~ \"North Macedonia\",\n      Country_WHR == \"North Cyprus\" ~ \"[North Cyprus]\",\n      Country_WHR == \"Somaliland Region\" ~ \"[Somaliland Region]\",\n      Country_WHR == \"Swaziland\" ~ \"Eswatini\",\n      Country_WHR == \"Syria\" ~ \"Syrian Arab Republic\",\n      Country_WHR == \"Taiwan Province of China\" ~ \"[Taiwan Province of China]\",\n      Country_WHR == \"Tanzania\" ~ \"United Republic of Tanzania\",\n      Country_WHR == \"United Kingdom\" ~ \"United Kingdom of Great Britain and Northern Ireland\",\n      Country_WHR == \"United States\" ~ \"United States of America\",\n      Country_WHR == \"Venezuela\" ~ \"Venezuela (Bolivarian Republic of)\",\n      TRUE ~ Country_WHR\n    )\n  ) |> \n  dplyr::relocate(Country_M49, .after = Country_WHR)\n\n## select unique country rows  ################\nwhr_2011_2024_revised |> \n  dplyr::select(Country_WHR, Country_M49) |> \n  dplyr::distinct() |> \n  DT::datatable(class = 'cell-border compact stripe', \n                  options = list(\n                    pageLength = 25,\n                    lengthMenu = c(25, 50, 100, 200)\n                    )\n              )\n\n## save revised data as .rds file ################\nmy_save_data_file(\n  \"whr-cantril/rds\", \n  whr_2011_2024_revised, \n  \"whr_2011_2024_revised.rds\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-fd2190d00fbcb7ef2e33\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-fd2190d00fbcb7ef2e33\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\"],[\"Afghanistan\",\"Albania\",\"Algeria\",\"Angola\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahrain\",\"Bangladesh\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bhutan\",\"Bolivia\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Central African Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Comoros\",\"Congo\",\"Costa Rica\",\"Croatia\",\"Cuba\",\"Cyprus\",\"Czechia\",\"Côte d’Ivoire\",\"DR Congo\",\"Denmark\",\"Djibouti\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Estonia\",\"Eswatini\",\"Ethiopia\",\"Finland\",\"France\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Guatemala\",\"Guinea\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong SAR of China\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Lao PDR\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Lithuania\",\"Luxembourg\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Cyprus\",\"North Macedonia\",\"Norway\",\"Oman\",\"Pakistan\",\"Panama\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Republic of Korea\",\"Republic of Moldova\",\"Romania\",\"Russian Federation\",\"Rwanda\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Somalia\",\"Somaliland Region\",\"South Africa\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"State of Palestine\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan Province of China\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Togo\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkmenistan\",\"Türkiye\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Venezuela\",\"Viet Nam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"],[\"Afghanistan\",\"Albania\",\"Algeria\",\"Angola\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahrain\",\"Bangladesh\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bhutan\",\"Bolivia (Plurinational State of)\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Central African Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Comoros\",\"Congo\",\"Costa Rica\",\"Croatia\",\"Cuba\",\"Cyprus\",\"Czechia\",\"Côte d’Ivoire\",\"Democratic Republic of the Congo\",\"Denmark\",\"Djibouti\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Estonia\",\"Eswatini\",\"Ethiopia\",\"Finland\",\"France\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Guatemala\",\"Guinea\",\"Guyana\",\"Haiti\",\"Honduras\",\"China, Hong Kong Special Administrative Region\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran (Islamic Republic of)\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"[Kosovo]\",\"Kuwait\",\"Kyrgyzstan\",\"Lao People's Democratic Republic\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Lithuania\",\"Luxembourg\",\"North Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"[North Cyprus]\",\"North Macedonia\",\"Norway\",\"Oman\",\"Pakistan\",\"Panama\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Republic of Korea\",\"Republic of Moldova\",\"Romania\",\"Russian Federation\",\"Rwanda\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Somalia\",\"[Somaliland Region]\",\"South Africa\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"State of Palestine\",\"Sudan\",\"Suriname\",\"Eswatini\",\"Sweden\",\"Switzerland\",\"Syrian Arab Republic\",\"[Taiwan Province of China]\",\"Tajikistan\",\"United Republic of Tanzania\",\"Thailand\",\"Togo\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkmenistan\",\"Türkiye\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom of Great Britain and Northern Ireland\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Venezuela (Bolivarian Republic of)\",\"Viet Nam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Country_WHR<\\/th>\\n      <th>Country_M49<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[25,50,100,200],\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Country_WHR\",\"targets\":1},{\"name\":\"Country_M49\",\"targets\":2}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\nI have saved the WHR data file as `whr_2011_2024_revised.rds` under \"data/whr_cantril/rds\" with the new column `Country_M49` and have changed the old WHR column `Country name` to `Country_WHR`.\n\n\n### Combine WHR and M49 revised \n\nI am now in the position to combine the revised WHR file with the UNSD M49 classification file. I will show only the interesting columns but save the full new dataframe as `whr_m49` under the folder \"data/whr_cantril/rds\".\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-combine-whr-m49-revised}\n: Combine WHR and M49 with revised country column\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhr_2011_2024_revised <-  base::readRDS(\n  \"data/whr-cantril/rds/whr_2011_2024_revised.rds\")\n\nunsd_class_finale <-  base::readRDS(\n  \"data/country-class/unsd/rds/unsd_class_finale.rds\")\n\n## left join: WHR as priority ########\nwhr_m49 <- dplyr::left_join(\n  x = whr_2011_2024_revised,\n  y = unsd_class_finale,\n  by = dplyr::join_by(Country_M49 == country),\n      relationship = \"many-to-one\") \n\nwhr_m49 |> \n  dplyr::select(\n    Country_WHR, \n    Country_M49,\n    m49, iso2, iso3\n    ) |> \n  dplyr::distinct() |> \n  DT::datatable(class = 'cell-border compact stripe', \n                  options = list(\n                    pageLength = 25,\n                    lengthMenu = c(25, 50, 100, 200)\n                    )\n              )\n\n## save revised data as .rds file ################\nmy_save_data_file(\n  \"whr-cantril/rds\", \n  whr_m49, \n  \"whr_m49.rds\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-9927e209b2e4c448e547\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9927e209b2e4c448e547\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\"],[\"Afghanistan\",\"Albania\",\"Algeria\",\"Angola\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahrain\",\"Bangladesh\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bhutan\",\"Bolivia\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Central African Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Comoros\",\"Congo\",\"Costa Rica\",\"Croatia\",\"Cuba\",\"Cyprus\",\"Czechia\",\"Côte d’Ivoire\",\"DR Congo\",\"Denmark\",\"Djibouti\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Estonia\",\"Eswatini\",\"Ethiopia\",\"Finland\",\"France\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Guatemala\",\"Guinea\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong SAR of China\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Lao PDR\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Lithuania\",\"Luxembourg\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Cyprus\",\"North Macedonia\",\"Norway\",\"Oman\",\"Pakistan\",\"Panama\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Republic of Korea\",\"Republic of Moldova\",\"Romania\",\"Russian Federation\",\"Rwanda\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Somalia\",\"Somaliland Region\",\"South Africa\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"State of Palestine\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan Province of China\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Togo\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkmenistan\",\"Türkiye\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Venezuela\",\"Viet Nam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"],[\"Afghanistan\",\"Albania\",\"Algeria\",\"Angola\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahrain\",\"Bangladesh\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bhutan\",\"Bolivia (Plurinational State of)\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Central African Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Comoros\",\"Congo\",\"Costa Rica\",\"Croatia\",\"Cuba\",\"Cyprus\",\"Czechia\",\"Côte d’Ivoire\",\"Democratic Republic of the Congo\",\"Denmark\",\"Djibouti\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Estonia\",\"Eswatini\",\"Ethiopia\",\"Finland\",\"France\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Guatemala\",\"Guinea\",\"Guyana\",\"Haiti\",\"Honduras\",\"China, Hong Kong Special Administrative Region\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran (Islamic Republic of)\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"[Kosovo]\",\"Kuwait\",\"Kyrgyzstan\",\"Lao People's Democratic Republic\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Lithuania\",\"Luxembourg\",\"North Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"[North Cyprus]\",\"North Macedonia\",\"Norway\",\"Oman\",\"Pakistan\",\"Panama\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Republic of Korea\",\"Republic of Moldova\",\"Romania\",\"Russian Federation\",\"Rwanda\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Somalia\",\"[Somaliland Region]\",\"South Africa\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"State of Palestine\",\"Sudan\",\"Suriname\",\"Eswatini\",\"Sweden\",\"Switzerland\",\"Syrian Arab Republic\",\"[Taiwan Province of China]\",\"Tajikistan\",\"United Republic of Tanzania\",\"Thailand\",\"Togo\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkmenistan\",\"Türkiye\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom of Great Britain and Northern Ireland\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Venezuela (Bolivarian Republic of)\",\"Viet Nam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"],[\"004\",\"008\",\"012\",\"024\",\"032\",\"051\",\"036\",\"040\",\"031\",\"048\",\"050\",\"112\",\"056\",\"084\",\"204\",\"064\",\"068\",\"070\",\"072\",\"076\",\"100\",\"854\",\"108\",\"116\",\"120\",\"124\",\"140\",\"148\",\"152\",\"156\",\"170\",\"174\",\"178\",\"188\",\"191\",\"192\",\"196\",\"203\",\"384\",\"180\",\"208\",\"262\",\"214\",\"218\",\"818\",\"222\",\"233\",\"748\",\"231\",\"246\",\"250\",\"266\",\"270\",\"268\",\"276\",\"288\",\"300\",\"320\",\"324\",\"328\",\"332\",\"340\",\"344\",\"348\",\"352\",\"356\",\"360\",\"364\",\"368\",\"372\",\"376\",\"380\",\"388\",\"392\",\"400\",\"398\",\"404\",null,\"414\",\"417\",\"418\",\"428\",\"422\",\"426\",\"430\",\"434\",\"440\",\"442\",\"807\",\"450\",\"454\",\"458\",\"462\",\"466\",\"470\",\"478\",\"480\",\"484\",\"496\",\"499\",\"504\",\"508\",\"104\",\"516\",\"524\",\"528\",\"554\",\"558\",\"562\",\"566\",null,\"807\",\"578\",\"512\",\"586\",\"591\",\"600\",\"604\",\"608\",\"616\",\"620\",\"630\",\"634\",\"410\",\"498\",\"642\",\"643\",\"646\",\"682\",\"686\",\"688\",\"694\",\"702\",\"703\",\"705\",\"706\",null,\"710\",\"728\",\"724\",\"144\",\"275\",\"729\",\"740\",\"748\",\"752\",\"756\",\"760\",null,\"762\",\"834\",\"764\",\"768\",\"780\",\"788\",\"795\",\"792\",\"800\",\"804\",\"784\",\"826\",\"840\",\"858\",\"860\",\"862\",\"704\",\"887\",\"894\",\"716\"],[\"AF\",\"AL\",\"DZ\",\"AO\",\"AR\",\"AM\",\"AU\",\"AT\",\"AZ\",\"BH\",\"BD\",\"BY\",\"BE\",\"BZ\",\"BJ\",\"BT\",\"BO\",\"BA\",\"BW\",\"BR\",\"BG\",\"BF\",\"BI\",\"KH\",\"CM\",\"CA\",\"CF\",\"TD\",\"CL\",\"CN\",\"CO\",\"KM\",\"CG\",\"CR\",\"HR\",\"CU\",\"CY\",\"CZ\",\"CI\",\"CD\",\"DK\",\"DJ\",\"DO\",\"EC\",\"EG\",\"SV\",\"EE\",\"SZ\",\"ET\",\"FI\",\"FR\",\"GA\",\"GM\",\"GE\",\"DE\",\"GH\",\"GR\",\"GT\",\"GN\",\"GY\",\"HT\",\"HN\",\"HK\",\"HU\",\"IS\",\"IN\",\"ID\",\"IR\",\"IQ\",\"IE\",\"IL\",\"IT\",\"JM\",\"JP\",\"JO\",\"KZ\",\"KE\",null,\"KW\",\"KG\",\"LA\",\"LV\",\"LB\",\"LS\",\"LR\",\"LY\",\"LT\",\"LU\",\"MK\",\"MG\",\"MW\",\"MY\",\"MV\",\"ML\",\"MT\",\"MR\",\"MU\",\"MX\",\"MN\",\"ME\",\"MA\",\"MZ\",\"MM\",\"NA\",\"NP\",\"NL\",\"NZ\",\"NI\",\"NE\",\"NG\",null,\"MK\",\"NO\",\"OM\",\"PK\",\"PA\",\"PY\",\"PE\",\"PH\",\"PL\",\"PT\",\"PR\",\"QA\",\"KR\",\"MD\",\"RO\",\"RU\",\"RW\",\"SA\",\"SN\",\"RS\",\"SL\",\"SG\",\"SK\",\"SI\",\"SO\",null,\"ZA\",\"SS\",\"ES\",\"LK\",\"PS\",\"SD\",\"SR\",\"SZ\",\"SE\",\"CH\",\"SY\",null,\"TJ\",\"TZ\",\"TH\",\"TG\",\"TT\",\"TN\",\"TM\",\"TR\",\"UG\",\"UA\",\"AE\",\"GB\",\"US\",\"UY\",\"UZ\",\"VE\",\"VN\",\"YE\",\"ZM\",\"ZW\"],[\"AFG\",\"ALB\",\"DZA\",\"AGO\",\"ARG\",\"ARM\",\"AUS\",\"AUT\",\"AZE\",\"BHR\",\"BGD\",\"BLR\",\"BEL\",\"BLZ\",\"BEN\",\"BTN\",\"BOL\",\"BIH\",\"BWA\",\"BRA\",\"BGR\",\"BFA\",\"BDI\",\"KHM\",\"CMR\",\"CAN\",\"CAF\",\"TCD\",\"CHL\",\"CHN\",\"COL\",\"COM\",\"COG\",\"CRI\",\"HRV\",\"CUB\",\"CYP\",\"CZE\",\"CIV\",\"COD\",\"DNK\",\"DJI\",\"DOM\",\"ECU\",\"EGY\",\"SLV\",\"EST\",\"SWZ\",\"ETH\",\"FIN\",\"FRA\",\"GAB\",\"GMB\",\"GEO\",\"DEU\",\"GHA\",\"GRC\",\"GTM\",\"GIN\",\"GUY\",\"HTI\",\"HND\",\"HKG\",\"HUN\",\"ISL\",\"IND\",\"IDN\",\"IRN\",\"IRQ\",\"IRL\",\"ISR\",\"ITA\",\"JAM\",\"JPN\",\"JOR\",\"KAZ\",\"KEN\",null,\"KWT\",\"KGZ\",\"LAO\",\"LVA\",\"LBN\",\"LSO\",\"LBR\",\"LBY\",\"LTU\",\"LUX\",\"MKD\",\"MDG\",\"MWI\",\"MYS\",\"MDV\",\"MLI\",\"MLT\",\"MRT\",\"MUS\",\"MEX\",\"MNG\",\"MNE\",\"MAR\",\"MOZ\",\"MMR\",\"NAM\",\"NPL\",\"NLD\",\"NZL\",\"NIC\",\"NER\",\"NGA\",null,\"MKD\",\"NOR\",\"OMN\",\"PAK\",\"PAN\",\"PRY\",\"PER\",\"PHL\",\"POL\",\"PRT\",\"PRI\",\"QAT\",\"KOR\",\"MDA\",\"ROU\",\"RUS\",\"RWA\",\"SAU\",\"SEN\",\"SRB\",\"SLE\",\"SGP\",\"SVK\",\"SVN\",\"SOM\",null,\"ZAF\",\"SSD\",\"ESP\",\"LKA\",\"PSE\",\"SDN\",\"SUR\",\"SWZ\",\"SWE\",\"CHE\",\"SYR\",null,\"TJK\",\"TZA\",\"THA\",\"TGO\",\"TTO\",\"TUN\",\"TKM\",\"TUR\",\"UGA\",\"UKR\",\"ARE\",\"GBR\",\"USA\",\"URY\",\"UZB\",\"VEN\",\"VNM\",\"YEM\",\"ZMB\",\"ZWE\"]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Country_WHR<\\/th>\\n      <th>Country_M49<\\/th>\\n      <th>m49<\\/th>\\n      <th>iso2<\\/th>\\n      <th>iso3<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[25,50,100,200],\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Country_WHR\",\"targets\":1},{\"name\":\"Country_M49\",\"targets\":2},{\"name\":\"m49\",\"targets\":3},{\"name\":\"iso2\",\"targets\":4},{\"name\":\"iso3\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n## Combine `whr_m49` with World Bank data {#sec-02-combine-whr-with-wb}\n\nThere are two different sheets to combine with the `whr_m49` dataset: The `wb-class-List of economies.rds` and the `wb-class-compositions.rds`. \n\n### Combine `whr_m49` with World Bank economy regions\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-combine-whr-m49-wb-regions}\n: Combine `whr_m49` with the World Bank economy `Region`\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhr_m49 <-  base::readRDS(\n  \"data/whr-cantril/rds/whr_m49.rds\")\n\nwb_economies <-  base::readRDS(\n  \"data/country-class/wb/rds/wb-class-List of economies.rds\") |> \n  dplyr::select(-1)\n\n## left join: WHR-M49 as priority ########\nwhr_m49_wb_regions <- dplyr::left_join(\n  x = whr_m49,\n  y = wb_economies,\n  by = dplyr::join_by(iso3 == Code),\n      relationship = \"many-to-one\") \n\nwhr_m49_regions <- whr_m49_wb_regions |> \n  dplyr::select(Country_M49, Region) |> \n  dplyr::distinct()\n\n## show whr_m49_wb_regions #########\n(\n    dt_whr_m49_wb_regions <- class_scheme(\n            df = whr_m49_regions,\n            sel1 = rlang::quo(`Country_M49`),\n            sel2 = rlang::quo(`Region`)\n            )\n)\n\n## save whr_m49_wb_reegions as .rds file ################\nmy_save_data_file(\n  \"whr-cantril/rds\", \n  whr_m49_wb_regions, \n  \"whr_m49_wb_regions.rds\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e2da1b065d8cb4ae986f\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e2da1b065d8cb4ae986f\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],[\"East Asia &amp; Pacific\",\"Europe &amp; Central Asia\",\"Latin America &amp; Caribbean\",\"Middle East &amp; North Africa\",\"North America\",\"South Asia\",\"Sub-Saharan Africa\",null],[\"Australia; Cambodia; China; China, Hong Kong Special Administrative Region; Indonesia; Japan; Lao People's Democratic Republic; Malaysia; Mongolia; Myanmar; New Zealand; Philippines; Republic of Korea; Singapore; Thailand; Viet Nam ;\",\"Albania; Armenia; Austria; Azerbaijan; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Georgia; Germany; Greece; Hungary; Iceland; Ireland; Italy; Kazakhstan; Kyrgyzstan; Latvia; Lithuania; Luxembourg; North Macedonia; Montenegro; Netherlands; Norway; Poland; Portugal; Republic of Moldova; Romania; Russian Federation; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Turkmenistan; Türkiye; Ukraine; United Kingdom of Great Britain and Northern Ireland; Uzbekistan ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Chile; Colombia; Costa Rica; Cuba; Dominican Republic; Ecuador; El Salvador; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Suriname; Trinidad and Tobago; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Algeria; Bahrain; Djibouti; Egypt; Iran (Islamic Republic of); Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Qatar; Saudi Arabia; State of Palestine; Syrian Arab Republic; Tunisia; United Arab Emirates; Yemen ;\",\"Canada; United States of America ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cameroon; Central African Republic; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; Senegal; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; United Republic of Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"[Kosovo]; [North Cyprus]; [Somaliland Region]; [Taiwan Province of China] ;\"],[16,48,26,21,2,8,42,4]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Region<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Region\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\nThe World Bank regional classification results to **8 regions containing 167 countries**. \n\nNote the last group with names not available in the m49 classification scheme. These four regions do not belong to any regions automatically but could classified manually: \n\n- Kosovo and North Cyprus: Europe & Central Asia\n- Somaliland Region: Sub-Saharan Africa\n- Taiwan Province of China: East Asia & Pacific\n::::\n:::::\n\n\n### Combine `whr_m49` with World Bank Group Codes\n\nThe second sheet to combine is data from `wb-class-compositions.rds`. This is more complex as it contains 2085 entries divided in 48 groups. The entries are multiple country codes and country names as each country belong to several groups.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-combine-whr-m49-wb-groups}\n: Combine `whr_m49` with the World Bank groups\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhr_m49_wb_regions <-  base::readRDS(\n  \"data/whr-cantril/rds/whr_m49_wb_regions.rds\")\n\nwb_class_compositions_reduced <-  base::readRDS(\n  \"data/country-class/wb/rds/wb-class-compositions.rds\") |> \n  dplyr::select(-4)\n\n## left join: WHR-M49 as priority ########\n  whr_m49_wb <- dplyr::left_join(\n    x = whr_m49_wb_regions,\n    y = wb_class_compositions_reduced,\n    by = dplyr::join_by(iso3 == WB_Country_Code),\n        relationship = \"many-to-many\")\n\n## show whr_m49_wb #########\n(\n    dt_whr_m49_wb <- class_scheme2(\n            df = whr_m49_wb,\n            sel1 = rlang::quo(`Country_M49`),\n            sel2 = rlang::quo(`WB_Group_Name`)\n            )\n)\n\n## save whr_m49_wb as .rds file ################\nmy_save_data_file(\n  \"whr-cantril/rds\", \n  whr_m49_wb, \n  \"whr_m49_wb.rds\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 48 × 3\n#> # Rowwise:  WB_Group_Name\n#>    WB_Group_Name                               Country                         N\n#>    <chr>                                       <chr>                       <int>\n#>  1 Africa Eastern and Southern                 Angola; Angola; Angola; An…   247\n#>  2 Africa Western and Central                  Benin; Benin; Benin; Benin…   233\n#>  3 Arab World                                  Algeria; Algeria; Algeria;…   234\n#>  4 Caribbean small states                      Belize; Belize; Belize; Be…     9\n#>  5 Central Europe and the Baltics              Bulgaria; Bulgaria; Bulgar…   143\n#>  6 Early-demographic dividend                  Algeria; Algeria; Algeria;…   612\n#>  7 East Asia & Pacific                         Australia; Australia; Aust…   207\n#>  8 East Asia & Pacific (IDA & IBRD)            Cambodia; Cambodia; Cambod…   129\n#>  9 East Asia & Pacific (excluding high income) Cambodia; Cambodia; Cambod…   129\n#> 10 Euro area                                   Austria; Austria; Austria;…   260\n#> # ℹ 38 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\nTo receive a more concise data frame which a better overview of the available WB group codes I have to limit the WHR data to a specific year. Then I have only one country name and I can use the `one-to-many`-relationship (Country to WB_Group_Names).\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-combine-whr-country-with-wb-groups}\n: Showing the 2024 WHR data with their World Bank groups\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhr_m49_wb_2024 <- whr_m49_wb_regions |> \n  dplyr::filter(Year == 2024)\n\n## join whr_m49_wb with WB group codes #########\nwhr_m49_wb_groups_2024 <- dplyr::left_join(\n    x = whr_m49_wb_2024,\n    y = wb_class_compositions_reduced,\n    by = dplyr::join_by(iso3 == WB_Country_Code),\n        relationship = \"one-to-many\") |> \n    dplyr::mutate(`WB_Group` = \n                    paste0(WB_Group_Name, \" [\", WB_Group_Code, \"]\")\n                  )\n      \n\n## show whr_m49_wb_2024_groups #########\n(\n    dt_whr_m49_wb_groups_2024 <- class_scheme(\n            df = whr_m49_wb_groups_2024,\n            sel1 = rlang::quo(`Country_M49`),\n            sel2 = rlang::quo(`WB_Group`)\n            )\n)\n\n\n## save whr_m49_wb_groups_2024 as .rds file ################\nmy_save_data_file(\n  \"whr-cantril/rds\", \n  whr_m49_wb_groups_2024, \n  \"whr_m49_wb_groups_2024.rds\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-eb6e35b07626f5429968\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-eb6e35b07626f5429968\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\"],[\"Africa Eastern and Southern [AFE]\",\"Africa Western and Central [AFW]\",\"Arab World [ARB]\",\"Caribbean small states [CSS]\",\"Central Europe and the Baltics [CEB]\",\"Early-demographic dividend [EAR]\",\"East Asia &amp; Pacific (IDA &amp; IBRD) [TEA]\",\"East Asia &amp; Pacific (excluding high income) [EAP]\",\"East Asia &amp; Pacific [EAS]\",\"Euro area [EMU]\",\"Europe &amp; Central Asia (IDA &amp; IBRD) [TEC]\",\"Europe &amp; Central Asia (excluding high income) [ECA]\",\"Europe &amp; Central Asia [ECS]\",\"European Union [EUU]\",\"Fragile and conflict affected situations [FCS]\",\"Heavily indebted poor countries (HIPC) [HPC]\",\"High income [HIC]\",\"IBRD only [IBD]\",\"IDA &amp; IBRD total [IBT]\",\"IDA blend [IDB]\",\"IDA only [IDX]\",\"IDA total [IDA]\",\"Late-demographic dividend [LTE]\",\"Latin America &amp; Caribbean (IDA &amp; IBRD) [TLA]\",\"Latin America &amp; Caribbean (excluding high income) [LAC]\",\"Latin America &amp; Caribbean [LCN]\",\"Least developed countries: UN classification [LDC]\",\"Low &amp; middle income [LMY]\",\"Low income [LIC]\",\"Lower middle income [LMC]\",\"Middle East &amp; North Africa (IDA &amp; IBRD) [TMN]\",\"Middle East &amp; North Africa (excluding high income) [MNA]\",\"Middle East &amp; North Africa [MEA]\",\"Middle income [MIC]\",\"NA [NA]\",\"North America [NAC]\",\"OECD members [OED]\",\"Other small states [OSS]\",\"Post-demographic dividend [PST]\",\"Pre-demographic dividend [PRE]\",\"Small states (SST) [SST]\",\"South Asia (IDA &amp; IBRD) [TSA]\",\"South Asia [SAS]\",\"Sub-Saharan Africa (IDA &amp; IBRD) [TSS]\",\"Sub-Saharan Africa (excluding high income) [SSA]\",\"Sub-Saharan Africa [SSF]\",\"Upper middle income [UMC]\",\"World [WLD]\"],[\"Botswana; Comoros; Democratic Republic of the Congo; Eswatini; Ethiopia; Kenya; Lesotho; Madagascar; Malawi; Mauritius; Mozambique; Namibia; Somalia; South Africa; United Republic of Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Benin; Burkina Faso; Cameroon; Chad; Congo; Côte d’Ivoire; Gabon; Gambia; Ghana; Guinea; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Algeria; Bahrain; Comoros; Egypt; Iraq; Jordan; Kuwait; Lebanon; Libya; Mauritania; Morocco; Oman; Saudi Arabia; Somalia; State of Palestine; Tunisia; United Arab Emirates; Yemen ;\",\"Belize ;\",\"Bulgaria; Croatia; Czechia; Estonia; Hungary; Latvia; Lithuania; Poland; Romania; Slovakia; Slovenia ;\",\"Algeria; Argentina; Bahrain; Bangladesh; Belize; Bolivia (Plurinational State of); Botswana; Cambodia; Dominican Republic; Ecuador; Egypt; El Salvador; Eswatini; Ethiopia; Gabon; Ghana; Guatemala; Honduras; India; Indonesia; Iran (Islamic Republic of); Israel; Jordan; Lao People's Democratic Republic; Lesotho; Libya; Mexico; Myanmar; Namibia; Nepal; Nicaragua; Pakistan; Panama; Paraguay; Peru; Philippines; Saudi Arabia; South Africa; State of Palestine; Tajikistan; Türkiye; Uzbekistan; Venezuela (Bolivarian Republic of); Yemen; Zimbabwe ;\",\"Cambodia; China; Indonesia; Lao People's Democratic Republic; Malaysia; Mongolia; Myanmar; Philippines; Thailand; Viet Nam ;\",\"Cambodia; China; Indonesia; Lao People's Democratic Republic; Malaysia; Mongolia; Myanmar; Philippines; Thailand; Viet Nam ;\",\"Australia; Cambodia; China; China, Hong Kong Special Administrative Region; Indonesia; Japan; Lao People's Democratic Republic; Malaysia; Mongolia; Myanmar; New Zealand; Philippines; Republic of Korea; Singapore; Thailand; Viet Nam ;\",\"Austria; Belgium; Croatia; Cyprus; Estonia; Finland; France; Germany; Greece; Ireland; Italy; Latvia; Lithuania; Luxembourg; Malta; Netherlands; Portugal; Slovakia; Slovenia; Spain ;\",\"Albania; Armenia; Azerbaijan; Bosnia and Herzegovina; Bulgaria; Croatia; Georgia; Kazakhstan; Kyrgyzstan; Montenegro; North Macedonia; Poland; Republic of Moldova; Romania; Russian Federation; Serbia; Tajikistan; Türkiye; Ukraine; Uzbekistan ;\",\"Albania; Armenia; Azerbaijan; Bosnia and Herzegovina; Georgia; Kazakhstan; Kyrgyzstan; Montenegro; North Macedonia; Republic of Moldova; Serbia; Tajikistan; Türkiye; Ukraine; Uzbekistan ;\",\"Albania; Armenia; Austria; Azerbaijan; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Georgia; Germany; Greece; Hungary; Iceland; Ireland; Italy; Kazakhstan; Kyrgyzstan; Latvia; Lithuania; Luxembourg; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Republic of Moldova; Romania; Russian Federation; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Ukraine; United Kingdom of Great Britain and Northern Ireland; Uzbekistan ;\",\"Austria; Belgium; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; Hungary; Ireland; Italy; Latvia; Lithuania; Luxembourg; Malta; Netherlands; Poland; Portugal; Romania; Slovakia; Slovenia; Spain; Sweden ;\",\"Afghanistan; Burkina Faso; Cameroon; Chad; Comoros; Congo; Democratic Republic of the Congo; Ethiopia; Iraq; Lebanon; Libya; Mali; Mozambique; Myanmar; Niger; Nigeria; Somalia; State of Palestine; Ukraine; Venezuela (Bolivarian Republic of); Yemen; Zimbabwe ;\",\"Afghanistan; Benin; Bolivia (Plurinational State of); Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Ethiopia; Gambia; Ghana; Guinea; Honduras; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Nicaragua; Niger; Senegal; Sierra Leone; Somalia; United Republic of Tanzania; Togo; Uganda; Zambia ;\",\"Australia; Austria; Bahrain; Belgium; Bulgaria; Canada; Chile; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; China, Hong Kong Special Administrative Region; Hungary; Iceland; Ireland; Israel; Italy; Japan; Kuwait; Latvia; Lithuania; Luxembourg; Malta; Netherlands; New Zealand; Norway; Oman; Panama; Poland; Portugal; Republic of Korea; Romania; Russian Federation; Saudi Arabia; Singapore; Slovakia; Slovenia; Spain; Sweden; Switzerland; Trinidad and Tobago; United Arab Emirates; United Kingdom of Great Britain and Northern Ireland; United States of America; Uruguay ;\",\"Albania; Algeria; Argentina; Armenia; Azerbaijan; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Chile; China; Colombia; Costa Rica; Croatia; Dominican Republic; Ecuador; Egypt; El Salvador; Gabon; Georgia; Guatemala; India; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Jordan; Kazakhstan; Lebanon; Libya; Malaysia; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Namibia; North Macedonia; Panama; Paraguay; Peru; Philippines; Poland; Republic of Moldova; Romania; Russian Federation; Serbia; South Africa; Thailand; Trinidad and Tobago; Tunisia; Türkiye; Ukraine; Uruguay; Venezuela (Bolivarian Republic of); Viet Nam ;\",\"Afghanistan; Albania; Algeria; Argentina; Armenia; Azerbaijan; Bangladesh; Belize; Benin; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Burkina Faso; Cambodia; Cameroon; Chad; Chile; China; Colombia; Comoros; Congo; Costa Rica; Croatia; Côte d’Ivoire; Democratic Republic of the Congo; Dominican Republic; Ecuador; Egypt; El Salvador; Eswatini; Ethiopia; Gabon; Gambia; Georgia; Ghana; Guatemala; Guinea; Honduras; India; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Lesotho; Liberia; Libya; Madagascar; Malawi; Malaysia; Mali; Mauritania; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nepal; Nicaragua; Niger; Nigeria; North Macedonia; Pakistan; Panama; Paraguay; Peru; Philippines; Poland; Republic of Moldova; Romania; Russian Federation; Senegal; Serbia; Sierra Leone; Somalia; South Africa; Sri Lanka; Tajikistan; United Republic of Tanzania; Thailand; Togo; Trinidad and Tobago; Tunisia; Türkiye; Uganda; Ukraine; Uruguay; Uzbekistan; Venezuela (Bolivarian Republic of); Viet Nam; Yemen; Zambia; Zimbabwe ;\",\"Belize; Cameroon; Congo; Eswatini; Kenya; Nigeria; Pakistan; Uzbekistan; Zimbabwe ;\",\"Afghanistan; Bangladesh; Benin; Burkina Faso; Cambodia; Chad; Comoros; Côte d’Ivoire; Democratic Republic of the Congo; Ethiopia; Gambia; Ghana; Guinea; Honduras; Kyrgyzstan; Lao People's Democratic Republic; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Myanmar; Nepal; Nicaragua; Niger; Senegal; Sierra Leone; Somalia; Sri Lanka; Tajikistan; United Republic of Tanzania; Togo; Uganda; Yemen; Zambia ;\",\"Afghanistan; Bangladesh; Belize; Benin; Burkina Faso; Cambodia; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gambia; Ghana; Guinea; Honduras; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Myanmar; Nepal; Nicaragua; Niger; Nigeria; Pakistan; Senegal; Sierra Leone; Somalia; Sri Lanka; Tajikistan; United Republic of Tanzania; Togo; Uganda; Uzbekistan; Yemen; Zambia; Zimbabwe ;\",\"Albania; Armenia; Azerbaijan; Brazil; Chile; China; Colombia; Costa Rica; Cyprus; Estonia; Georgia; Iceland; Ireland; Jamaica; Kazakhstan; Kuwait; Kyrgyzstan; Latvia; Lebanon; Malaysia; Mauritius; Mongolia; Montenegro; Morocco; North Macedonia; Oman; Poland; Republic of Moldova; Romania; Russian Federation; Serbia; Slovakia; Sri Lanka; Thailand; Trinidad and Tobago; Tunisia; United Arab Emirates; Uruguay; Viet Nam ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Chile; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Guatemala; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Trinidad and Tobago; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Guatemala; Honduras; Jamaica; Mexico; Nicaragua; Paraguay; Peru ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Chile; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Guatemala; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Trinidad and Tobago; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Afghanistan; Bangladesh; Benin; Burkina Faso; Cambodia; Chad; Comoros; Democratic Republic of the Congo; Ethiopia; Gambia; Guinea; Lao People's Democratic Republic; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Myanmar; Nepal; Niger; Senegal; Sierra Leone; Somalia; United Republic of Tanzania; Togo; Uganda; Yemen; Zambia ;\",\"Afghanistan; Albania; Algeria; Argentina; Armenia; Azerbaijan; Bangladesh; Belize; Benin; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Burkina Faso; Cambodia; Cameroon; Chad; China; Colombia; Comoros; Congo; Costa Rica; Côte d’Ivoire; Democratic Republic of the Congo; Dominican Republic; Ecuador; Egypt; El Salvador; Eswatini; Ethiopia; Gabon; Gambia; Georgia; Ghana; Guatemala; Guinea; Honduras; India; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Lesotho; Liberia; Libya; Madagascar; Malawi; Malaysia; Mali; Mauritania; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nepal; Nicaragua; Niger; Nigeria; North Macedonia; Pakistan; Paraguay; Peru; Philippines; Republic of Moldova; Senegal; Serbia; Sierra Leone; Somalia; South Africa; Sri Lanka; State of Palestine; Tajikistan; United Republic of Tanzania; Thailand; Togo; Tunisia; Türkiye; Uganda; Ukraine; Uzbekistan; Viet Nam; Yemen; Zambia; Zimbabwe ;\",\"Afghanistan; Burkina Faso; Chad; Democratic Republic of the Congo; Ethiopia; Gambia; Liberia; Madagascar; Malawi; Mali; Mozambique; Niger; Sierra Leone; Somalia; Togo; Uganda; Yemen ;\",\"Bangladesh; Benin; Bolivia (Plurinational State of); Cambodia; Cameroon; Comoros; Congo; Côte d’Ivoire; Egypt; Eswatini; Ghana; Guinea; Honduras; India; Jordan; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Lesotho; Mauritania; Morocco; Myanmar; Nepal; Nicaragua; Nigeria; Pakistan; Philippines; Senegal; Sri Lanka; State of Palestine; Tajikistan; United Republic of Tanzania; Tunisia; Uzbekistan; Viet Nam; Zambia; Zimbabwe ;\",\"Algeria; Egypt; Iran (Islamic Republic of); Iraq; Jordan; Lebanon; Libya; Morocco; Tunisia; Yemen ;\",\"Algeria; Egypt; Iran (Islamic Republic of); Iraq; Jordan; Lebanon; Libya; Morocco; State of Palestine; Tunisia; Yemen ;\",\"Algeria; Bahrain; Egypt; Iran (Islamic Republic of); Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Saudi Arabia; State of Palestine; Tunisia; United Arab Emirates; Yemen ;\",\"Albania; Algeria; Argentina; Armenia; Azerbaijan; Bangladesh; Belize; Benin; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Cambodia; Cameroon; China; Colombia; Comoros; Congo; Costa Rica; Côte d’Ivoire; Dominican Republic; Ecuador; Egypt; El Salvador; Eswatini; Gabon; Georgia; Ghana; Guatemala; Guinea; Honduras; India; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Lesotho; Libya; Malaysia; Mauritania; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Myanmar; Namibia; Nepal; Nicaragua; Nigeria; North Macedonia; Pakistan; Paraguay; Peru; Philippines; Republic of Moldova; Senegal; Serbia; South Africa; Sri Lanka; State of Palestine; Tajikistan; United Republic of Tanzania; Thailand; Tunisia; Türkiye; Ukraine; Uzbekistan; Viet Nam; Zambia; Zimbabwe ;\",\"[Kosovo]; [Taiwan Province of China] ;\",\"Canada; United States of America ;\",\"Australia; Austria; Belgium; Canada; Chile; Colombia; Costa Rica; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; Hungary; Iceland; Ireland; Israel; Italy; Japan; Latvia; Lithuania; Luxembourg; Mexico; Netherlands; New Zealand; Norway; Poland; Portugal; Republic of Korea; Slovakia; Slovenia; Spain; Sweden; Switzerland; Türkiye; United Kingdom of Great Britain and Northern Ireland; United States of America ;\",\"Bahrain; Comoros; Cyprus; Estonia; Eswatini; Iceland; Malta; Mauritius; Montenegro ;\",\"Australia; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Canada; Croatia; Czechia; Denmark; Finland; France; Germany; Greece; China, Hong Kong Special Administrative Region; Hungary; Italy; Japan; Lithuania; Luxembourg; Malta; Netherlands; New Zealand; Norway; Portugal; Republic of Korea; Singapore; Slovenia; Spain; Sweden; Switzerland; Ukraine; United Kingdom of Great Britain and Northern Ireland; United States of America ;\",\"Afghanistan; Benin; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Gambia; Guinea; Iraq; Kenya; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Niger; Nigeria; Senegal; Sierra Leone; Somalia; United Republic of Tanzania; Togo; Uganda; Zambia ;\",\"Bahrain; Belize; Comoros; Cyprus; Estonia; Eswatini; Iceland; Malta; Mauritius; Montenegro ;\",\"Afghanistan; Bangladesh; India; Nepal; Pakistan; Sri Lanka ;\",\"Afghanistan; Bangladesh; India; Nepal; Pakistan; Sri Lanka ;\",\"Benin; Botswana; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Africa; United Republic of Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Benin; Botswana; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Africa; United Republic of Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Benin; Botswana; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Africa; United Republic of Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Albania; Algeria; Argentina; Armenia; Azerbaijan; Belize; Bosnia and Herzegovina; Botswana; Brazil; China; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Gabon; Georgia; Guatemala; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Kazakhstan; Libya; Malaysia; Mauritius; Mexico; Mongolia; Montenegro; Namibia; North Macedonia; Paraguay; Peru; Republic of Moldova; Serbia; South Africa; Thailand; Türkiye; Ukraine ;\",\"Afghanistan; Albania; Algeria; Argentina; Armenia; Australia; Austria; Azerbaijan; Bahrain; Bangladesh; Belgium; Belize; Benin; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Burkina Faso; Cambodia; Cameroon; Canada; Chad; Chile; China; Colombia; Comoros; Congo; Costa Rica; Croatia; Cyprus; Czechia; Côte d’Ivoire; Democratic Republic of the Congo; Denmark; Dominican Republic; Ecuador; Egypt; El Salvador; Estonia; Eswatini; Ethiopia; Finland; France; Gabon; Gambia; Georgia; Germany; Ghana; Greece; Guatemala; Guinea; Honduras; China, Hong Kong Special Administrative Region; Hungary; Iceland; India; Indonesia; Iran (Islamic Republic of); Iraq; Ireland; Israel; Italy; Jamaica; Japan; Jordan; Kazakhstan; Kenya; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Latvia; Lebanon; Lesotho; Liberia; Libya; Lithuania; Luxembourg; Madagascar; Malawi; Malaysia; Mali; Malta; Mauritania; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nepal; Netherlands; New Zealand; Nicaragua; Niger; Nigeria; North Macedonia; Norway; Oman; Pakistan; Panama; Paraguay; Peru; Philippines; Poland; Portugal; Republic of Korea; Republic of Moldova; Romania; Russian Federation; Saudi Arabia; Senegal; Serbia; Sierra Leone; Singapore; Slovakia; Slovenia; Somalia; South Africa; Spain; Sri Lanka; State of Palestine; Sweden; Switzerland; Tajikistan; United Republic of Tanzania; Thailand; Togo; Trinidad and Tobago; Tunisia; Türkiye; Uganda; Ukraine; United Arab Emirates; United Kingdom of Great Britain and Northern Ireland; United States of America; Uruguay; Uzbekistan; Venezuela (Bolivarian Republic of); Viet Nam; Yemen; Zambia; Zimbabwe ;\"],[18,18,18,1,11,45,10,10,16,20,20,15,46,27,22,30,50,57,103,9,37,46,39,21,16,21,30,94,17,38,10,11,18,77,2,2,38,9,33,28,10,6,6,36,36,36,39,145]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>WB_Group<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"WB_Group\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n### Create final dataset {#sec-02-final-dataset}\n\nTo facilitate later work I will crate `whr_final.rds` as the final dataset with the following changes from `whr_m49_wb.rds`:\n\n(1) rename columns:\n    a) using lower letters, \n    b) replace spaces with underscores\n    c) add number of groups after `code` and `region` markers\n(2) create a new column `group48` that combines World Bank group codes and names\n(3) change `NA` values (created as \"NA [NA]\" in step 2) to `World [WLD]`\n(4) relocate `iso3` as first column of the dataset\n(5) factorize all character columns\n    \n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-whr-final}\n: Rename & reorder column to final (region / grouped) dataset\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhr_m49_wb <-  base::readRDS(\n  \"data/whr-cantril/rds/whr_m49_wb.rds\")\n\n# create final whr table #########\nwhr_final <- whr_m49_wb |> \n  dplyr::rename_with(~ tolower(gsub(\" \", \"_\", .x))) |> \n  dplyr::rename(\n    region5 = region_n,\n    code5 = region_c,\n    region7 = region,\n    region17 = subr_n,\n    code17 = subr_c,\n    region23 = midr_n2,\n    code23 = midr_c2,\n    group8 = midr_n,\n    code8 = midr_c\n  ) |> \n  dplyr::mutate(group48 = \n                paste0(wb_group_name, \" [\", wb_group_code, \"]\")\n                ) |> \n  dplyr::mutate(group48 =\n                  dplyr::case_match(\n                    group48, \n                    \"NA [NA]\" ~ \"World [WLD]\",\n                    .default = group48)\n                ) |> \n  dplyr::relocate(iso3) |> \n  dplyr::mutate(dplyr::across(\n    .cols = dplyr::where(is.character), .fns = base::factor)\n    )\n\n\n\n## save whr_final as .rds file ################\nmy_save_data_file(\n  \"whr-cantril/rds\", \n  whr_final, \n  \"whr_final.rds\")\n\nskimr::skim(whr_final)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |          |\n|:------------------------|:---------|\n|Name                     |whr_final |\n|Number of rows           |19379     |\n|Number of columns        |34        |\n|_______________________  |          |\n|Column type frequency:   |          |\n|factor                   |22        |\n|numeric                  |12        |\n|________________________ |          |\n|Group variables          |None      |\n\n\n**Variable type: factor**\n\n|skim_variable    | n_missing| complete_rate|ordered | n_unique|top_counts                                 |\n|:----------------|---------:|-------------:|:-------|--------:|:------------------------------------------|\n|iso3             |        39|          1.00|FALSE   |      163|COM: 198, MRT: 195, BEN: 182, BFA: 182     |\n|country_whr      |         0|          1.00|FALSE   |      169|Com: 198, Mau: 195, Ben: 182, Bur: 182     |\n|country_m49      |         0|          1.00|FALSE   |      167|Com: 198, Mau: 195, Ben: 182, Bur: 182     |\n|code5            |        39|          1.00|FALSE   |        5|002: 7190, 142: 5140, 150: 4000, 019: 2880 |\n|region5          |        39|          1.00|FALSE   |        5|Afr: 7190, Asi: 5140, Eur: 4000, Ame: 2880 |\n|code17           |        39|          1.00|FALSE   |       14|202: 6384, 419: 2750, 145: 1835, 039: 1378 |\n|region17         |        39|          1.00|FALSE   |       14|Sub: 6384, Lat: 2750, Wes: 1835, Sou: 1378 |\n|code8            |     10245|          0.47|FALSE   |        7|011: 2379, 014: 2354, 005: 1272, 013: 1014 |\n|group8           |     10245|          0.47|FALSE   |        7|Wes: 2379, Eas: 2354, Sou: 1272, Cen: 1014 |\n|m49              |        39|          1.00|FALSE   |      163|174: 198, 478: 195, 120: 182, 148: 182     |\n|iso2             |        39|          1.00|FALSE   |      163|KM: 198, MR: 195, BF: 182, BJ: 182         |\n|ldc              |        39|          1.00|FALSE   |        2|0: 13616, 1: 5724                          |\n|lldc             |        39|          1.00|FALSE   |        2|0: 14862, 1: 4478                          |\n|sids             |        39|          1.00|FALSE   |        2|0: 18318, 1: 1022                          |\n|region23         |        39|          1.00|FALSE   |       19|Wes: 2379, Eas: 2354, Wes: 1835, Sou: 1378 |\n|code23           |        39|          1.00|FALSE   |       19|011: 2379, 014: 2354, 145: 1835, 039: 1378 |\n|region7          |        39|          1.00|FALSE   |        7|Sub: 6429, Eur: 5182, Lat: 2750, Mid: 2203 |\n|income_group     |       130|          0.99|FALSE   |        4|Low: 6152, Upp: 5467, Hig: 4313, Low: 3317 |\n|lending_category |      3531|          0.82|FALSE   |        3|IBR: 7677, IDA: 6824, Ble: 1347            |\n|wb_group_code    |        39|          1.00|FALSE   |       47|WLD: 1930, IBT: 1385, LMY: 1272, MIC: 1025 |\n|wb_group_name    |        39|          1.00|FALSE   |       47|Wor: 1930, IDA: 1385, Low: 1272, Mid: 1025 |\n|group48          |         0|          1.00|FALSE   |       47|Wor: 1969, IDA: 1385, Low: 1272, Mid: 1025 |\n\n\n**Variable type: numeric**\n\n|skim_variable                              | n_missing| complete_rate|    mean|    sd|      p0|     p25|     p50|     p75|    p100|hist  |\n|:------------------------------------------|---------:|-------------:|-------:|-----:|-------:|-------:|-------:|-------:|-------:|:-----|\n|year                                       |         0|          1.00| 2017.71|  3.96| 2011.00| 2015.00| 2018.00| 2021.00| 2024.00|▅▇▆▇▇ |\n|rank                                       |         0|          1.00|   86.60| 42.59|    1.00|   52.00|   91.00|  123.00|  158.00|▅▆▇▇▇ |\n|ladder_score                               |         0|          1.00|    5.20|  1.09|    1.36|    4.39|    5.14|    5.98|    7.86|▁▂▇▆▂ |\n|upperwhisker                               |     10776|          0.44|    5.40|  1.08|    1.43|    4.63|    5.39|    6.21|    7.90|▁▂▇▇▂ |\n|lowerwhisker                               |     10776|          0.44|    5.16|  1.12|    1.30|    4.34|    5.12|    5.98|    7.78|▁▂▇▇▂ |\n|explained_by:_log_gdp_per_capita           |     10803|          0.44|    1.12|  0.45|    0.00|    0.78|    1.11|    1.45|    2.21|▂▆▇▆▂ |\n|explained_by:_social_support               |     10803|          0.44|    1.02|  0.36|    0.00|    0.77|    1.03|    1.31|    1.84|▁▅▇▇▂ |\n|explained_by:_healthy_life_expectancy      |     10821|          0.44|    0.50|  0.22|    0.00|    0.33|    0.50|    0.65|    1.14|▂▇▇▅▁ |\n|explained_by:_freedom_to_make_life_choices |     10814|          0.44|    0.54|  0.18|    0.00|    0.42|    0.55|    0.66|    1.02|▁▃▇▆▂ |\n|explained_by:_generosity                   |     10803|          0.44|    0.15|  0.09|    0.00|    0.09|    0.14|    0.20|    0.57|▆▇▂▁▁ |\n|explained_by:_perceptions_of_corruption    |     10808|          0.44|    0.13|  0.10|    0.00|    0.06|    0.10|    0.16|    0.59|▇▅▁▁▁ |\n|dystopia_+_residual                        |     10837|          0.44|    1.83|  0.65|   -0.11|    1.44|    1.84|    2.25|    3.48|▁▃▇▆▁ |\n\n\n:::\n:::\n\n\n\n\n\n***\n\nThere are many variables with missing values:\n\n- **39**: This corresponds to those <a class='glossary' title='The World Happiness Reports are a partnership of Gallup, the Oxford Wellbeing Research Centre, the UN Sustainable Development Solutions Network, and the WHR’s Editorial Board. The report is produced under the editorial control of the WHR Editorial Board. The Reports reflects a worldwide demand for more attention to happiness and well-being as criteria for government policy. It reviews the state of happiness in the world today and shows how the science of happiness explains personal and national variations in happiness. (https://worldhappiness.report/about/)'>WHR</a> regions, that are not available in the official <a class='glossary' title='The United Nations publication “Standard Country or Area Codes for Statistical Use” was originally published as Series M, No. 49 and is now commonly referred to as the M49 standard. M49 is a country/areas classification system prepared by the Statistics Division of the United Nations Secretariat primarily for use in its publications and databases.'>M49</a> classification system: Kosovo, North Cyprus, Somaliland Region and Taiwan Province of China.\n- **130**: There are several region like \"World\" or \"Latin America & Caribbean\" where `income_group` is not defined.\n- **3531**: Many countries not eligible for a specific World Bank `lending_category`.\n- **10245**: `region8` resp. `code8` does only provide a partial set of all countries in the world.\n- **10776\t- 10837**: These missing values represent missing data in the WHR reports.\n::::\n:::::\n\n\n## Summary {#sec-02-summary}\n\nThe `whr_final.rds` file contains all WHR data and is the result of combining the WHR data with the M49 and WB classification systems.\n\nThere are two different approaches to use this dataset: \n\n1. **To compare countries of a specific year** \n  - filter by `Year` and by one of the 48 different classification criteria of `group48` or \n  - filter by `Year` and (one value of) one of the four regional groups of countries you and by `group48 == \"World [WLD]\"`.\n2. **To compare the development of countries**\n  - filter by one value of the 48 different classification criteria of `group48` \n  - filter by (one value of) one of the four regional groupings (`region5`, `region7`, `region17`, or `region23`) and by `group48 == \"World [WLD]\"`.\n  \n\nThere are four complete regional groups covering all countries of the world and two groups where not all `group8` or multiple countries `group48` are covered. To get a reference for future use I will display all countries of these six classification criteria. I will not use an R code collection because I want to have a direct link with each of these different classifications.\n\n| Column name | Old name      | Origin / Note                                                           |\n|-------------|---------------|-------------------------------------------------------------------------|\n| region5 @sec-02-region5     | region_n      | M49 / continents                                                        |\n| region7  @sec-02-region7   | Region        | WB / pre-defined standard                                               |\n| region17 @sec-02-region17   | subr_n        | M49 / North-West-South-East                                             |\n| region23 @sec-02-region23   | midr_n2       | M49 / detailed continent parts                                          |\n| group8  @sec-02-group8    | midr_n        | M49 / Africa, South-America, Caribbean, Channel Islands + 140 undefined |\n| group48  @sec-02-group48   | WB_Group_Name | WB / compositions all                                                   |\n\n: Different classification criteria {#tbl-02-class-criteria} {.striped .hover}\n\n### Regions\n\n#### region5 {#sec-02-region5}\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-region5}\n: Show countries for `region5`\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n\n::: {#tbl-show-region5 .cell tbl-cap='WHR countries grouped by five continents'}\n\n```{.r .cell-code}\ndf <- base::readRDS(\"data/whr-cantril/rds/whr_final.rds\") |> \n  dplyr::filter(year == 2024 & group48 == \"World [WLD]\")\n\n(\n  dt_region5 <- class_scheme(\n              df,\n              sel1 = rlang::quo(`country_m49`),\n              sel2 = rlang::quo(`region5`)\n              ) \n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-5d7d4a56b604eb89130b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5d7d4a56b604eb89130b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[\"Africa\",\"Americas\",\"Asia\",\"Europe\",\"Oceania\",null],[\"Algeria; Benin; Botswana; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Egypt; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Libya; Madagascar; Malawi; Mali; Mauritania; Mauritius; Morocco; Mozambique; Namibia; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Africa; United Republic of Tanzania; Togo; Tunisia; Uganda; Zambia; Zimbabwe ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Canada; Chile; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Guatemala; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Trinidad and Tobago; United States of America; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Afghanistan; Armenia; Azerbaijan; Bahrain; Bangladesh; Cambodia; China; Cyprus; Georgia; China, Hong Kong Special Administrative Region; India; Indonesia; Iran (Islamic Republic of); Iraq; Israel; Japan; Jordan; Kazakhstan; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Malaysia; Mongolia; Myanmar; Nepal; Oman; Pakistan; Philippines; Republic of Korea; Saudi Arabia; Singapore; Sri Lanka; State of Palestine; Tajikistan; Thailand; Türkiye; United Arab Emirates; Uzbekistan; Viet Nam; Yemen ;\",\"Albania; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; Hungary; Iceland; Ireland; Italy; Latvia; Lithuania; Luxembourg; Malta; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Republic of Moldova; Romania; Russian Federation; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; Ukraine; United Kingdom of Great Britain and Northern Ireland ;\",\"Australia; New Zealand ;\",\"[Kosovo]; [Taiwan Province of China] ;\"],[41,23,41,38,2,2]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region5<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region5\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n***\n\n`regional5` classification results to **6 regions containing 147 countries** (including another group with 2 regions that not part of the official M49 classification.)\n\n\n::::\n:::::\n\n\n#### region7 {#sec-02-region7}\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-region7}\n: Show countries for `region7`\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- base::readRDS(\"data/whr-cantril/rds/whr_final.rds\") |> \n  dplyr::filter(year == 2024 & group48 == \"World [WLD]\")\n\n(\n  dt_region7 <- class_scheme(\n              df,\n              sel1 = rlang::quo(`country_m49`),\n              sel2 = rlang::quo(`region7`)\n              )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-6aef8f2edf680c3eaf1b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6aef8f2edf680c3eaf1b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],[\"East Asia &amp; Pacific\",\"Europe &amp; Central Asia\",\"Latin America &amp; Caribbean\",\"Middle East &amp; North Africa\",\"North America\",\"South Asia\",\"Sub-Saharan Africa\",null],[\"Australia; Cambodia; China; China, Hong Kong Special Administrative Region; Indonesia; Japan; Lao People's Democratic Republic; Malaysia; Mongolia; Myanmar; New Zealand; Philippines; Republic of Korea; Singapore; Thailand; Viet Nam ;\",\"Albania; Armenia; Austria; Azerbaijan; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Georgia; Germany; Greece; Hungary; Iceland; Ireland; Italy; Kazakhstan; Kyrgyzstan; Latvia; Lithuania; Luxembourg; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Republic of Moldova; Romania; Russian Federation; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Ukraine; United Kingdom of Great Britain and Northern Ireland; Uzbekistan ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Chile; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Guatemala; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Trinidad and Tobago; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Algeria; Bahrain; Egypt; Iran (Islamic Republic of); Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Saudi Arabia; State of Palestine; Tunisia; United Arab Emirates; Yemen ;\",\"Canada; United States of America ;\",\"Afghanistan; Bangladesh; India; Nepal; Pakistan; Sri Lanka ;\",\"Benin; Botswana; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Africa; United Republic of Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"[Kosovo]; [Taiwan Province of China] ;\"],[16,46,21,18,2,6,36,2]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region7<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region7\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n`regional7` classification results to **8 regions containing 147 countries** (including another group with 2 regions that not part of the official M49 classification.)\n\n\n::::\n:::::\n\n#### region17 {#sec-02-region17}\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-region17}\n: Show countries for `region17`\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- base::readRDS(\"data/whr-cantril/rds/whr_final.rds\") |> \n  dplyr::filter(year == 2024 & group48 == \"World [WLD]\")\n\n(\n  dt_region17 <- class_scheme(\n              df,\n              sel1 = rlang::quo(`country_m49`),\n              sel2 = rlang::quo(`region17`)\n              )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-546cb92e3c1648d7b323\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-546cb92e3c1648d7b323\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\"],[\"Australia and New Zealand\",\"Central Asia\",\"Eastern Asia\",\"Eastern Europe\",\"Latin America and the Caribbean\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"South-eastern Asia\",\"Southern Asia\",\"Southern Europe\",\"Sub-Saharan Africa\",\"Western Asia\",\"Western Europe\",null],[\"Australia; New Zealand ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Uzbekistan ;\",\"China; China, Hong Kong Special Administrative Region; Japan; Mongolia; Republic of Korea ;\",\"Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Chile; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Guatemala; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Trinidad and Tobago; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Algeria; Egypt; Libya; Morocco; Tunisia ;\",\"Canada; United States of America ;\",\"Denmark; Estonia; Finland; Iceland; Ireland; Latvia; Lithuania; Norway; Sweden; United Kingdom of Great Britain and Northern Ireland ;\",\"Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Viet Nam ;\",\"Afghanistan; Bangladesh; India; Iran (Islamic Republic of); Nepal; Pakistan; Sri Lanka ;\",\"Albania; Bosnia and Herzegovina; Croatia; Greece; Italy; Malta; Montenegro; North Macedonia; Portugal; Serbia; Slovenia; Spain ;\",\"Benin; Botswana; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Africa; United Republic of Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Saudi Arabia; State of Palestine; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Luxembourg; Netherlands; Switzerland ;\",\"[Kosovo]; [Taiwan Province of China] ;\"],[2,4,5,9,21,5,2,10,9,7,12,36,16,7,2]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region17<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region17\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n`regional17` classification results to **15 regions containing 147 countries** (including another group with 2 regions that not part of the official M49 classification.)\n\nThere are three region missing from the M49 classification: Melanesia, Micronesia, and Polynesia.\n\n\n::::\n:::::\n\n#### region23 {#sec-02-region23}\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-region5}\n: Show countries for `region23`\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {#tbl-show-region23 .cell tbl-cap='WHR countries grouped by 23 regions'}\n\n```{.r .cell-code}\ndf <- base::readRDS(\"data/whr-cantril/rds/whr_final.rds\") |> \n  dplyr::filter(year == 2024 & group48 == \"World [WLD]\")\n\n(\n  dt_region23 <- class_scheme(\n              df,\n              sel1 = rlang::quo(`country_m49`),\n              sel2 = rlang::quo(`region23`)\n              )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-ff8cfc38f19a02bce0f5\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ff8cfc38f19a02bce0f5\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],[\"Australia and New Zealand\",\"Caribbean\",\"Central America\",\"Central Asia\",\"Eastern Africa\",\"Eastern Asia\",\"Eastern Europe\",\"Middle Africa\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"South America\",\"South-eastern Asia\",\"Southern Africa\",\"Southern Asia\",\"Southern Europe\",\"Western Africa\",\"Western Asia\",\"Western Europe\",null],[\"Australia; New Zealand ;\",\"Dominican Republic; Jamaica; Trinidad and Tobago ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Uzbekistan ;\",\"Comoros; Ethiopia; Kenya; Madagascar; Malawi; Mauritius; Mozambique; Somalia; United Republic of Tanzania; Uganda; Zambia; Zimbabwe ;\",\"China; China, Hong Kong Special Administrative Region; Japan; Mongolia; Republic of Korea ;\",\"Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Cameroon; Chad; Congo; Democratic Republic of the Congo; Gabon ;\",\"Algeria; Egypt; Libya; Morocco; Tunisia ;\",\"Canada; United States of America ;\",\"Denmark; Estonia; Finland; Iceland; Ireland; Latvia; Lithuania; Norway; Sweden; United Kingdom of Great Britain and Northern Ireland ;\",\"Argentina; Bolivia (Plurinational State of); Brazil; Chile; Colombia; Ecuador; Paraguay; Peru; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Viet Nam ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Afghanistan; Bangladesh; India; Iran (Islamic Republic of); Nepal; Pakistan; Sri Lanka ;\",\"Albania; Bosnia and Herzegovina; Croatia; Greece; Italy; Malta; Montenegro; North Macedonia; Portugal; Serbia; Slovenia; Spain ;\",\"Benin; Burkina Faso; Côte d’Ivoire; Gambia; Ghana; Guinea; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Saudi Arabia; State of Palestine; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Luxembourg; Netherlands; Switzerland ;\",\"[Kosovo]; [Taiwan Province of China] ;\"],[2,3,8,4,12,5,9,5,5,2,10,10,9,5,7,12,14,16,7,2]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region23<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region23\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n`regional23` classification results to **20 regions containing 147 countries** (including another group with 2 regions that not part of the official M49 classification.)\n\nThere are four region missing from the M49 classification: Channel Island, Melanesia, Micronesia, Polynesia.\n\n\n::::\n:::::\n\n### Groups\n\n#### group8 {#sec-02-group8}\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-group8}\n: Show countries for `group8`\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- base::readRDS(\"data/whr-cantril/rds/whr_final.rds\") |> \n  dplyr::filter(year == 2024 & group48 == \"World [WLD]\")\n\n(\n  dt_group8 <- class_scheme(\n              df,\n              sel1 = rlang::quo(`country_m49`),\n              sel2 = rlang::quo(`group8`)\n              )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-2b0dc2404af866821678\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2b0dc2404af866821678\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],[\"Caribbean\",\"Central America\",\"Eastern Africa\",\"Middle Africa\",\"South America\",\"Southern Africa\",\"Western Africa\",null],[\"Dominican Republic; Jamaica; Trinidad and Tobago ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Comoros; Ethiopia; Kenya; Madagascar; Malawi; Mauritius; Mozambique; Somalia; United Republic of Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Cameroon; Chad; Congo; Democratic Republic of the Congo; Gabon ;\",\"Argentina; Bolivia (Plurinational State of); Brazil; Chile; Colombia; Ecuador; Paraguay; Peru; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Benin; Burkina Faso; Côte d’Ivoire; Gambia; Ghana; Guinea; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Afghanistan; Albania; Algeria; Armenia; Australia; Austria; Azerbaijan; Bahrain; Bangladesh; Belgium; Bosnia and Herzegovina; Bulgaria; Cambodia; Canada; China; Croatia; Cyprus; Czechia; Denmark; Egypt; Estonia; Finland; France; Georgia; Germany; Greece; China, Hong Kong Special Administrative Region; Hungary; Iceland; India; Indonesia; Iran (Islamic Republic of); Iraq; Ireland; Israel; Italy; Japan; Jordan; Kazakhstan; [Kosovo]; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Latvia; Lebanon; Libya; Lithuania; Luxembourg; Malaysia; Malta; Mongolia; Montenegro; Morocco; Myanmar; Nepal; Netherlands; New Zealand; North Macedonia; Norway; Oman; Pakistan; Philippines; Poland; Portugal; Republic of Korea; Republic of Moldova; Romania; Russian Federation; Saudi Arabia; Serbia; Singapore; Slovakia; Slovenia; Spain; Sri Lanka; State of Palestine; Sweden; Switzerland; [Taiwan Province of China]; Tajikistan; Thailand; Tunisia; Türkiye; Ukraine; United Arab Emirates; United Kingdom of Great Britain and Northern Ireland; United States of America; Uzbekistan; Viet Nam; Yemen ;\"],[3,8,12,5,10,5,14,90]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>group8<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"group8\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n`regional8` classification results to **8 regions containing 147 countries**. It includes a (unspecified) group with with 90 countries including those regions used by the WHR data that are not official countries by the M49 classification.\n::::\n:::::\n\n#### group48 {#sec-02-group48}\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-02-group48}\n: Show countries for `group48`\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- base::readRDS(\"data/whr-cantril/rds/whr_final.rds\") |> \n  dplyr::filter(year == 2024)\n\n(\n  dt_group48 <- class_scheme(\n              df,\n              sel1 = rlang::quo(`country_m49`),\n              sel2 = rlang::quo(`group48`)\n              )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-7e87c4d59b0ac0f9c1bf\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7e87c4d59b0ac0f9c1bf\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\"],[\"Africa Eastern and Southern [AFE]\",\"Africa Western and Central [AFW]\",\"Arab World [ARB]\",\"Caribbean small states [CSS]\",\"Central Europe and the Baltics [CEB]\",\"Early-demographic dividend [EAR]\",\"East Asia &amp; Pacific (excluding high income) [EAP]\",\"East Asia &amp; Pacific (IDA &amp; IBRD) [TEA]\",\"East Asia &amp; Pacific [EAS]\",\"Euro area [EMU]\",\"Europe &amp; Central Asia (excluding high income) [ECA]\",\"Europe &amp; Central Asia (IDA &amp; IBRD) [TEC]\",\"Europe &amp; Central Asia [ECS]\",\"European Union [EUU]\",\"Fragile and conflict affected situations [FCS]\",\"Heavily indebted poor countries (HIPC) [HPC]\",\"High income [HIC]\",\"IBRD only [IBD]\",\"IDA &amp; IBRD total [IBT]\",\"IDA blend [IDB]\",\"IDA only [IDX]\",\"IDA total [IDA]\",\"Late-demographic dividend [LTE]\",\"Latin America &amp; Caribbean (excluding high income) [LAC]\",\"Latin America &amp; Caribbean (IDA &amp; IBRD) [TLA]\",\"Latin America &amp; Caribbean [LCN]\",\"Least developed countries: UN classification [LDC]\",\"Low &amp; middle income [LMY]\",\"Low income [LIC]\",\"Lower middle income [LMC]\",\"Middle East &amp; North Africa (excluding high income) [MNA]\",\"Middle East &amp; North Africa (IDA &amp; IBRD) [TMN]\",\"Middle East &amp; North Africa [MEA]\",\"Middle income [MIC]\",\"North America [NAC]\",\"OECD members [OED]\",\"Other small states [OSS]\",\"Post-demographic dividend [PST]\",\"Pre-demographic dividend [PRE]\",\"Small states (SST) [SST]\",\"South Asia (IDA &amp; IBRD) [TSA]\",\"South Asia [SAS]\",\"Sub-Saharan Africa (excluding high income) [SSA]\",\"Sub-Saharan Africa (IDA &amp; IBRD) [TSS]\",\"Sub-Saharan Africa [SSF]\",\"Upper middle income [UMC]\",\"World [WLD]\"],[\"Botswana; Comoros; Democratic Republic of the Congo; Eswatini; Ethiopia; Kenya; Lesotho; Madagascar; Malawi; Mauritius; Mozambique; Namibia; Somalia; South Africa; United Republic of Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Benin; Burkina Faso; Cameroon; Chad; Congo; Côte d’Ivoire; Gabon; Gambia; Ghana; Guinea; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Algeria; Bahrain; Comoros; Egypt; Iraq; Jordan; Kuwait; Lebanon; Libya; Mauritania; Morocco; Oman; Saudi Arabia; Somalia; State of Palestine; Tunisia; United Arab Emirates; Yemen ;\",\"Belize ;\",\"Bulgaria; Croatia; Czechia; Estonia; Hungary; Latvia; Lithuania; Poland; Romania; Slovakia; Slovenia ;\",\"Algeria; Argentina; Bahrain; Bangladesh; Belize; Bolivia (Plurinational State of); Botswana; Cambodia; Dominican Republic; Ecuador; Egypt; El Salvador; Eswatini; Ethiopia; Gabon; Ghana; Guatemala; Honduras; India; Indonesia; Iran (Islamic Republic of); Israel; Jordan; Lao People's Democratic Republic; Lesotho; Libya; Mexico; Myanmar; Namibia; Nepal; Nicaragua; Pakistan; Panama; Paraguay; Peru; Philippines; Saudi Arabia; South Africa; State of Palestine; Tajikistan; Türkiye; Uzbekistan; Venezuela (Bolivarian Republic of); Yemen; Zimbabwe ;\",\"Cambodia; China; Indonesia; Lao People's Democratic Republic; Malaysia; Mongolia; Myanmar; Philippines; Thailand; Viet Nam ;\",\"Cambodia; China; Indonesia; Lao People's Democratic Republic; Malaysia; Mongolia; Myanmar; Philippines; Thailand; Viet Nam ;\",\"Australia; Cambodia; China; China, Hong Kong Special Administrative Region; Indonesia; Japan; Lao People's Democratic Republic; Malaysia; Mongolia; Myanmar; New Zealand; Philippines; Republic of Korea; Singapore; Thailand; Viet Nam ;\",\"Austria; Belgium; Croatia; Cyprus; Estonia; Finland; France; Germany; Greece; Ireland; Italy; Latvia; Lithuania; Luxembourg; Malta; Netherlands; Portugal; Slovakia; Slovenia; Spain ;\",\"Albania; Armenia; Azerbaijan; Bosnia and Herzegovina; Georgia; Kazakhstan; Kyrgyzstan; Montenegro; North Macedonia; Republic of Moldova; Serbia; Tajikistan; Türkiye; Ukraine; Uzbekistan ;\",\"Albania; Armenia; Azerbaijan; Bosnia and Herzegovina; Bulgaria; Croatia; Georgia; Kazakhstan; Kyrgyzstan; Montenegro; North Macedonia; Poland; Republic of Moldova; Romania; Russian Federation; Serbia; Tajikistan; Türkiye; Ukraine; Uzbekistan ;\",\"Albania; Armenia; Austria; Azerbaijan; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Georgia; Germany; Greece; Hungary; Iceland; Ireland; Italy; Kazakhstan; Kyrgyzstan; Latvia; Lithuania; Luxembourg; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Republic of Moldova; Romania; Russian Federation; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Ukraine; United Kingdom of Great Britain and Northern Ireland; Uzbekistan ;\",\"Austria; Belgium; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; Hungary; Ireland; Italy; Latvia; Lithuania; Luxembourg; Malta; Netherlands; Poland; Portugal; Romania; Slovakia; Slovenia; Spain; Sweden ;\",\"Afghanistan; Burkina Faso; Cameroon; Chad; Comoros; Congo; Democratic Republic of the Congo; Ethiopia; Iraq; Lebanon; Libya; Mali; Mozambique; Myanmar; Niger; Nigeria; Somalia; State of Palestine; Ukraine; Venezuela (Bolivarian Republic of); Yemen; Zimbabwe ;\",\"Afghanistan; Benin; Bolivia (Plurinational State of); Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Ethiopia; Gambia; Ghana; Guinea; Honduras; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Nicaragua; Niger; Senegal; Sierra Leone; Somalia; United Republic of Tanzania; Togo; Uganda; Zambia ;\",\"Australia; Austria; Bahrain; Belgium; Bulgaria; Canada; Chile; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; China, Hong Kong Special Administrative Region; Hungary; Iceland; Ireland; Israel; Italy; Japan; Kuwait; Latvia; Lithuania; Luxembourg; Malta; Netherlands; New Zealand; Norway; Oman; Panama; Poland; Portugal; Republic of Korea; Romania; Russian Federation; Saudi Arabia; Singapore; Slovakia; Slovenia; Spain; Sweden; Switzerland; Trinidad and Tobago; United Arab Emirates; United Kingdom of Great Britain and Northern Ireland; United States of America; Uruguay ;\",\"Albania; Algeria; Argentina; Armenia; Azerbaijan; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Chile; China; Colombia; Costa Rica; Croatia; Dominican Republic; Ecuador; Egypt; El Salvador; Gabon; Georgia; Guatemala; India; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Jordan; Kazakhstan; Lebanon; Libya; Malaysia; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Namibia; North Macedonia; Panama; Paraguay; Peru; Philippines; Poland; Republic of Moldova; Romania; Russian Federation; Serbia; South Africa; Thailand; Trinidad and Tobago; Tunisia; Türkiye; Ukraine; Uruguay; Venezuela (Bolivarian Republic of); Viet Nam ;\",\"Afghanistan; Albania; Algeria; Argentina; Armenia; Azerbaijan; Bangladesh; Belize; Benin; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Burkina Faso; Cambodia; Cameroon; Chad; Chile; China; Colombia; Comoros; Congo; Costa Rica; Croatia; Côte d’Ivoire; Democratic Republic of the Congo; Dominican Republic; Ecuador; Egypt; El Salvador; Eswatini; Ethiopia; Gabon; Gambia; Georgia; Ghana; Guatemala; Guinea; Honduras; India; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Lesotho; Liberia; Libya; Madagascar; Malawi; Malaysia; Mali; Mauritania; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nepal; Nicaragua; Niger; Nigeria; North Macedonia; Pakistan; Panama; Paraguay; Peru; Philippines; Poland; Republic of Moldova; Romania; Russian Federation; Senegal; Serbia; Sierra Leone; Somalia; South Africa; Sri Lanka; Tajikistan; United Republic of Tanzania; Thailand; Togo; Trinidad and Tobago; Tunisia; Türkiye; Uganda; Ukraine; Uruguay; Uzbekistan; Venezuela (Bolivarian Republic of); Viet Nam; Yemen; Zambia; Zimbabwe ;\",\"Belize; Cameroon; Congo; Eswatini; Kenya; Nigeria; Pakistan; Uzbekistan; Zimbabwe ;\",\"Afghanistan; Bangladesh; Benin; Burkina Faso; Cambodia; Chad; Comoros; Côte d’Ivoire; Democratic Republic of the Congo; Ethiopia; Gambia; Ghana; Guinea; Honduras; Kyrgyzstan; Lao People's Democratic Republic; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Myanmar; Nepal; Nicaragua; Niger; Senegal; Sierra Leone; Somalia; Sri Lanka; Tajikistan; United Republic of Tanzania; Togo; Uganda; Yemen; Zambia ;\",\"Afghanistan; Bangladesh; Belize; Benin; Burkina Faso; Cambodia; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gambia; Ghana; Guinea; Honduras; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Myanmar; Nepal; Nicaragua; Niger; Nigeria; Pakistan; Senegal; Sierra Leone; Somalia; Sri Lanka; Tajikistan; United Republic of Tanzania; Togo; Uganda; Uzbekistan; Yemen; Zambia; Zimbabwe ;\",\"Albania; Armenia; Azerbaijan; Brazil; Chile; China; Colombia; Costa Rica; Cyprus; Estonia; Georgia; Iceland; Ireland; Jamaica; Kazakhstan; Kuwait; Kyrgyzstan; Latvia; Lebanon; Malaysia; Mauritius; Mongolia; Montenegro; Morocco; North Macedonia; Oman; Poland; Republic of Moldova; Romania; Russian Federation; Serbia; Slovakia; Sri Lanka; Thailand; Trinidad and Tobago; Tunisia; United Arab Emirates; Uruguay; Viet Nam ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Guatemala; Honduras; Jamaica; Mexico; Nicaragua; Paraguay; Peru ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Chile; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Guatemala; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Trinidad and Tobago; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Argentina; Belize; Bolivia (Plurinational State of); Brazil; Chile; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Guatemala; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Trinidad and Tobago; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Afghanistan; Bangladesh; Benin; Burkina Faso; Cambodia; Chad; Comoros; Democratic Republic of the Congo; Ethiopia; Gambia; Guinea; Lao People's Democratic Republic; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Myanmar; Nepal; Niger; Senegal; Sierra Leone; Somalia; United Republic of Tanzania; Togo; Uganda; Yemen; Zambia ;\",\"Afghanistan; Albania; Algeria; Argentina; Armenia; Azerbaijan; Bangladesh; Belize; Benin; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Burkina Faso; Cambodia; Cameroon; Chad; China; Colombia; Comoros; Congo; Costa Rica; Côte d’Ivoire; Democratic Republic of the Congo; Dominican Republic; Ecuador; Egypt; El Salvador; Eswatini; Ethiopia; Gabon; Gambia; Georgia; Ghana; Guatemala; Guinea; Honduras; India; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Lesotho; Liberia; Libya; Madagascar; Malawi; Malaysia; Mali; Mauritania; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nepal; Nicaragua; Niger; Nigeria; North Macedonia; Pakistan; Paraguay; Peru; Philippines; Republic of Moldova; Senegal; Serbia; Sierra Leone; Somalia; South Africa; Sri Lanka; State of Palestine; Tajikistan; United Republic of Tanzania; Thailand; Togo; Tunisia; Türkiye; Uganda; Ukraine; Uzbekistan; Viet Nam; Yemen; Zambia; Zimbabwe ;\",\"Afghanistan; Burkina Faso; Chad; Democratic Republic of the Congo; Ethiopia; Gambia; Liberia; Madagascar; Malawi; Mali; Mozambique; Niger; Sierra Leone; Somalia; Togo; Uganda; Yemen ;\",\"Bangladesh; Benin; Bolivia (Plurinational State of); Cambodia; Cameroon; Comoros; Congo; Côte d’Ivoire; Egypt; Eswatini; Ghana; Guinea; Honduras; India; Jordan; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Lesotho; Mauritania; Morocco; Myanmar; Nepal; Nicaragua; Nigeria; Pakistan; Philippines; Senegal; Sri Lanka; State of Palestine; Tajikistan; United Republic of Tanzania; Tunisia; Uzbekistan; Viet Nam; Zambia; Zimbabwe ;\",\"Algeria; Egypt; Iran (Islamic Republic of); Iraq; Jordan; Lebanon; Libya; Morocco; State of Palestine; Tunisia; Yemen ;\",\"Algeria; Egypt; Iran (Islamic Republic of); Iraq; Jordan; Lebanon; Libya; Morocco; Tunisia; Yemen ;\",\"Algeria; Bahrain; Egypt; Iran (Islamic Republic of); Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Saudi Arabia; State of Palestine; Tunisia; United Arab Emirates; Yemen ;\",\"Albania; Algeria; Argentina; Armenia; Azerbaijan; Bangladesh; Belize; Benin; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Cambodia; Cameroon; China; Colombia; Comoros; Congo; Costa Rica; Côte d’Ivoire; Dominican Republic; Ecuador; Egypt; El Salvador; Eswatini; Gabon; Georgia; Ghana; Guatemala; Guinea; Honduras; India; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Lesotho; Libya; Malaysia; Mauritania; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Myanmar; Namibia; Nepal; Nicaragua; Nigeria; North Macedonia; Pakistan; Paraguay; Peru; Philippines; Republic of Moldova; Senegal; Serbia; South Africa; Sri Lanka; State of Palestine; Tajikistan; United Republic of Tanzania; Thailand; Tunisia; Türkiye; Ukraine; Uzbekistan; Viet Nam; Zambia; Zimbabwe ;\",\"Canada; United States of America ;\",\"Australia; Austria; Belgium; Canada; Chile; Colombia; Costa Rica; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; Hungary; Iceland; Ireland; Israel; Italy; Japan; Latvia; Lithuania; Luxembourg; Mexico; Netherlands; New Zealand; Norway; Poland; Portugal; Republic of Korea; Slovakia; Slovenia; Spain; Sweden; Switzerland; Türkiye; United Kingdom of Great Britain and Northern Ireland; United States of America ;\",\"Bahrain; Comoros; Cyprus; Estonia; Eswatini; Iceland; Malta; Mauritius; Montenegro ;\",\"Australia; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Canada; Croatia; Czechia; Denmark; Finland; France; Germany; Greece; China, Hong Kong Special Administrative Region; Hungary; Italy; Japan; Lithuania; Luxembourg; Malta; Netherlands; New Zealand; Norway; Portugal; Republic of Korea; Singapore; Slovenia; Spain; Sweden; Switzerland; Ukraine; United Kingdom of Great Britain and Northern Ireland; United States of America ;\",\"Afghanistan; Benin; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Gambia; Guinea; Iraq; Kenya; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Niger; Nigeria; Senegal; Sierra Leone; Somalia; United Republic of Tanzania; Togo; Uganda; Zambia ;\",\"Bahrain; Belize; Comoros; Cyprus; Estonia; Eswatini; Iceland; Malta; Mauritius; Montenegro ;\",\"Afghanistan; Bangladesh; India; Nepal; Pakistan; Sri Lanka ;\",\"Afghanistan; Bangladesh; India; Nepal; Pakistan; Sri Lanka ;\",\"Benin; Botswana; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Africa; United Republic of Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Benin; Botswana; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Africa; United Republic of Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Benin; Botswana; Burkina Faso; Cameroon; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Eswatini; Ethiopia; Gabon; Gambia; Ghana; Guinea; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Africa; United Republic of Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Albania; Algeria; Argentina; Armenia; Azerbaijan; Belize; Bosnia and Herzegovina; Botswana; Brazil; China; Colombia; Costa Rica; Dominican Republic; Ecuador; El Salvador; Gabon; Georgia; Guatemala; Indonesia; Iran (Islamic Republic of); Iraq; Jamaica; Kazakhstan; Libya; Malaysia; Mauritius; Mexico; Mongolia; Montenegro; Namibia; North Macedonia; Paraguay; Peru; Republic of Moldova; Serbia; South Africa; Thailand; Türkiye; Ukraine ;\",\"Afghanistan; Albania; Algeria; Argentina; Armenia; Australia; Austria; Azerbaijan; Bahrain; Bangladesh; Belgium; Belize; Benin; Bolivia (Plurinational State of); Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Burkina Faso; Cambodia; Cameroon; Canada; Chad; Chile; China; Colombia; Comoros; Congo; Costa Rica; Croatia; Cyprus; Czechia; Côte d’Ivoire; Democratic Republic of the Congo; Denmark; Dominican Republic; Ecuador; Egypt; El Salvador; Estonia; Eswatini; Ethiopia; Finland; France; Gabon; Gambia; Georgia; Germany; Ghana; Greece; Guatemala; Guinea; Honduras; China, Hong Kong Special Administrative Region; Hungary; Iceland; India; Indonesia; Iran (Islamic Republic of); Iraq; Ireland; Israel; Italy; Jamaica; Japan; Jordan; Kazakhstan; Kenya; [Kosovo]; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Latvia; Lebanon; Lesotho; Liberia; Libya; Lithuania; Luxembourg; Madagascar; Malawi; Malaysia; Mali; Malta; Mauritania; Mauritius; Mexico; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nepal; Netherlands; New Zealand; Nicaragua; Niger; Nigeria; North Macedonia; Norway; Oman; Pakistan; Panama; Paraguay; Peru; Philippines; Poland; Portugal; Republic of Korea; Republic of Moldova; Romania; Russian Federation; Saudi Arabia; Senegal; Serbia; Sierra Leone; Singapore; Slovakia; Slovenia; Somalia; South Africa; Spain; Sri Lanka; State of Palestine; Sweden; Switzerland; [Taiwan Province of China]; Tajikistan; United Republic of Tanzania; Thailand; Togo; Trinidad and Tobago; Tunisia; Türkiye; Uganda; Ukraine; United Arab Emirates; United Kingdom of Great Britain and Northern Ireland; United States of America; Uruguay; Uzbekistan; Venezuela (Bolivarian Republic of); Viet Nam; Yemen; Zambia; Zimbabwe ;\"],[18,18,18,1,11,45,10,10,16,20,15,20,46,27,22,30,50,57,103,9,37,46,39,16,21,21,30,94,17,38,11,10,18,77,2,38,9,33,28,10,6,6,36,36,36,39,147]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>group48<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-body-left\",\"targets\":2},{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"group48\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n`group48` classification results to **47 regions containing 1447 countries**. There is one group containing Kosovo and Somaliland with the code \"NA [NA]\" missing, because I have recoded all \"NA [NA]\" to \"World [WLD]\".\n::::\n:::::\n\n## Glossary\n\n(Some of the abbreviation have at their end an additional \"x\" that is not part of the abbreviation. I chose this work around to distinguish these abbreviations from the same text chunks in one of the glossary entries. This is a bug in the {**glossary**} package.)\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:left;\"> definition </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> CSV </td>\n   <td style=\"text-align:left;\"> Text files where the values are separated with commas (Comma Separated Values = CSV). These files have the file extension .csv </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GNIx </td>\n   <td style=\"text-align:left;\"> Gross National Income (GNI) is a measure of a country's income, which includes all the income earned by a country's residents, businesses, and earnings from foreign sources. It is defined as the total amount of money earned by a nation's people and businesses, no matter where it was earned. GNI is an alternative to GDP as a way to measure and track a nation’s wealth, as it calculates income instead of output. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IBRD </td>\n   <td style=\"text-align:left;\"> The International Bank for Reconstruction and Development (IBRD) is a global development cooperative owned by 189 member countries. As the largest development bank in the world, it supports the World Bank Group’s mission by providing loans, guarantees, risk management products, and advisory services to middle-income and creditworthy low-income countries, as well as by coordinating responses to regional and global challenges. (https://www.worldbank.org/en/who-we-are/ibrd) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IDAx </td>\n   <td style=\"text-align:left;\"> The International Development Association (IDA) is the part of the World Bank that helps the world’s low-income countries. IDA's grants and low-interest loans help countries invest in their futures, improve lives, and create safer, more prosperous communities around the world. (https://ida.worldbank.org/en/what-is-ida) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> LDCx </td>\n   <td style=\"text-align:left;\"> The term “Least Developed Countries” (LDCs) refers to developing countries listed by the United Nations that exhibit the lowest indicators of socioeconomic development. As of December 2024, the classification applies to 44 countries. See https://unctad.org/topic/least-developed-countries/list </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> LLDC </td>\n   <td style=\"text-align:left;\"> Landlocked Developing Countries (LLDCs) are developing nations that do not have direct access to the sea. These countries face significant economic and development challenges due to their geographical isolation and the need to rely on neighboring countries for access to international markets. Of the 32 LLDCs 16 are classified as LDCs (December 2024). See: https://www.un.org/ohrlls/content/about-landlocked-developing-countries </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> M49 </td>\n   <td style=\"text-align:left;\"> The United Nations publication \"Standard Country or Area Codes for Statistical Use\" was originally published as Series M, No. 49 and is now commonly referred to as the M49 standard. M49 is a country/areas classification system prepared by the Statistics Division of the United Nations Secretariat primarily for use in its publications and databases. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> OMNIKA </td>\n   <td style=\"text-align:left;\"> OMNIKA DataStore is an open-access data science resource for researchers, authors, and technologists. OMNIKA Foundation is an American 501(c)(3) nonprofit organization that operates a digital mythological library. Almost every culture has relevant mythology that explains where we came from, why things are the way they are, and a number of other things. OMNIKA's goal is to collect, organize, index, and quantify all of those data in one place and make them available for free. (https://omnika.org/info/about) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> RDS </td>\n   <td style=\"text-align:left;\"> The abbreviation “RDS” in file endings `.rds` refers to “R Data Serialized”. It is a format used by the R programming language to serialize and store R objects, such as data frames, lists, and functions, in a compact and portable binary format. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SIDS </td>\n   <td style=\"text-align:left;\"> Small Island Developing States (SIDS) are a group of developing countries that are small island nations and territories facing similar sustainable development challenges. These countries are particularly vulnerable to environmental and economic shocks due to their small size, limited resources, and remote locations. The aggregate population of all the SIDS is 65 million. See: https://www.un.org/ohrlls/content/about-small-island-developing-states </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> UNSD </td>\n   <td style=\"text-align:left;\"> The United Nations Statistics Division (UNSD) is committed to the advancement of the global statistical system. It compiles and disseminates global statistical information, develop standards and norms for statistical activities, and support countries' efforts to strengthen their national statistical systems. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WHR </td>\n   <td style=\"text-align:left;\"> The World Happiness Reports are a partnership of Gallup, the Oxford Wellbeing Research Centre, the UN Sustainable Development Solutions Network, and the WHR’s Editorial Board. The report is produced under the editorial control of the WHR Editorial Board. The Reports reflects a worldwide demand for more attention to happiness and well-being as criteria for government policy. It reviews the state of happiness in the world today and shows how the science of happiness explains personal and national variations in happiness. (https://worldhappiness.report/about/) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n\n------------------------------------------------------------------------\n\n## Session Info {.unnumbered}\n\n::::: my-r-code\n::: my-r-code-header\nSession Info\n:::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ─ Session info ───────────────────────────────────────────────────────────────\n#>  setting  value\n#>  version  R version 4.4.3 (2025-02-28)\n#>  os       macOS Sequoia 15.3.2\n#>  system   aarch64, darwin20\n#>  ui       X11\n#>  language (EN)\n#>  collate  en_US.UTF-8\n#>  ctype    en_US.UTF-8\n#>  tz       Europe/Vienna\n#>  date     2025-04-20\n#>  pandoc   3.2 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/aarch64/ (via rmarkdown)\n#>  quarto   1.6.42 @ /usr/local/bin/quarto\n#> \n#> ─ Packages ───────────────────────────────────────────────────────────────────\n#>  package     * version date (UTC) lib source\n#>  base64enc     0.1-3   2015-07-28 [1] CRAN (R 4.4.1)\n#>  bslib         0.9.0   2025-01-30 [1] CRAN (R 4.4.1)\n#>  cachem        1.1.0   2024-05-16 [1] CRAN (R 4.4.1)\n#>  cli           3.6.4   2025-02-13 [1] CRAN (R 4.4.1)\n#>  colorspace    2.1-1   2024-07-26 [1] CRAN (R 4.4.1)\n#>  commonmark    1.9.2   2024-10-04 [1] CRAN (R 4.4.1)\n#>  crayon        1.5.3   2024-06-20 [1] CRAN (R 4.4.1)\n#>  crosstalk     1.2.1   2023-11-23 [1] CRAN (R 4.4.0)\n#>  curl          6.2.1   2025-02-19 [1] CRAN (R 4.4.1)\n#>  digest        0.6.37  2024-08-19 [1] CRAN (R 4.4.1)\n#>  dplyr         1.1.4   2023-11-17 [1] CRAN (R 4.4.0)\n#>  DT            0.33    2024-04-04 [1] CRAN (R 4.4.0)\n#>  evaluate      1.0.3   2025-01-10 [1] CRAN (R 4.4.1)\n#>  fastmap       1.2.0   2024-05-15 [1] CRAN (R 4.4.1)\n#>  generics      0.1.3   2022-07-05 [1] CRAN (R 4.4.1)\n#>  ggplot2       3.5.1   2024-04-23 [1] CRAN (R 4.4.0)\n#>  glossary    * 1.0.0   2023-05-30 [1] CRAN (R 4.4.0)\n#>  glue          1.8.0   2024-09-30 [1] CRAN (R 4.4.1)\n#>  gtable        0.3.6   2024-10-25 [1] CRAN (R 4.4.1)\n#>  here          1.0.1   2020-12-13 [1] CRAN (R 4.4.1)\n#>  htmltools     0.5.8.1 2024-04-04 [1] CRAN (R 4.4.1)\n#>  htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.4.0)\n#>  jquerylib     0.1.4   2021-04-26 [1] CRAN (R 4.4.0)\n#>  jsonlite      1.9.1   2025-03-03 [1] CRAN (R 4.4.1)\n#>  kableExtra    1.4.0   2024-01-24 [1] CRAN (R 4.4.0)\n#>  knitr         1.49    2024-11-08 [1] CRAN (R 4.4.1)\n#>  lifecycle     1.0.4   2023-11-07 [1] CRAN (R 4.4.1)\n#>  magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.4.1)\n#>  markdown      1.13    2024-06-04 [1] CRAN (R 4.4.1)\n#>  munsell       0.5.1   2024-04-01 [1] CRAN (R 4.4.1)\n#>  pillar        1.10.1  2025-01-07 [1] CRAN (R 4.4.1)\n#>  pkgconfig     2.0.3   2019-09-22 [1] CRAN (R 4.4.1)\n#>  purrr         1.0.4   2025-02-05 [1] CRAN (R 4.4.1)\n#>  R6            2.6.1   2025-02-15 [1] CRAN (R 4.4.1)\n#>  repr          1.1.7   2024-03-22 [1] CRAN (R 4.4.0)\n#>  rlang         1.1.5   2025-01-17 [1] CRAN (R 4.4.1)\n#>  rmarkdown     2.29    2024-11-04 [1] CRAN (R 4.4.1)\n#>  rprojroot     2.0.4   2023-11-05 [1] CRAN (R 4.4.1)\n#>  rstudioapi    0.17.1  2024-10-22 [1] CRAN (R 4.4.1)\n#>  rversions     2.1.2   2022-08-31 [1] CRAN (R 4.4.1)\n#>  sass          0.4.9   2024-03-15 [1] CRAN (R 4.4.0)\n#>  scales        1.3.0   2023-11-28 [1] CRAN (R 4.4.0)\n#>  sessioninfo   1.2.3   2025-02-05 [1] CRAN (R 4.4.1)\n#>  skimr         2.1.5   2022-12-23 [1] CRAN (R 4.4.0)\n#>  stringi       1.8.4   2024-05-06 [1] CRAN (R 4.4.1)\n#>  stringr       1.5.1   2023-11-14 [1] CRAN (R 4.4.0)\n#>  svglite       2.1.3   2023-12-08 [1] CRAN (R 4.4.0)\n#>  systemfonts   1.2.1   2025-01-20 [1] CRAN (R 4.4.1)\n#>  tibble        3.2.1   2023-03-20 [1] CRAN (R 4.4.0)\n#>  tidyr         1.3.1   2024-01-24 [1] CRAN (R 4.4.1)\n#>  tidyselect    1.2.1   2024-03-11 [1] CRAN (R 4.4.0)\n#>  utf8          1.2.4   2023-10-22 [1] CRAN (R 4.4.1)\n#>  vctrs         0.6.5   2023-12-01 [1] CRAN (R 4.4.0)\n#>  viridisLite   0.4.2   2023-05-02 [1] CRAN (R 4.4.1)\n#>  withr         3.0.2   2024-10-28 [1] CRAN (R 4.4.1)\n#>  xfun          0.51    2025-02-19 [1] CRAN (R 4.4.1)\n#>  xml2          1.3.7   2025-02-28 [1] CRAN (R 4.4.1)\n#>  yaml          2.3.10  2024-07-26 [1] CRAN (R 4.4.1)\n#> \n#>  [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n#>  * ── Packages attached to the search path.\n#> \n#> ──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n\n\n:::\n:::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}