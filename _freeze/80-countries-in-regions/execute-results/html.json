{
  "hash": "43545d5fa64526049c415cbe53644852",
  "result": {
    "engine": "knitr",
    "markdown": "# Regions and their Countries {#sec-countries-in-regions}\n\n\n\n\n\n\n\n\n\n## Objectives {.unnumbered}\n\n::::: my-objectives\n::: my-objectives-header\nCountry and Regions: Classifications for countries\n:::\n\n::: my-objectives-container\n1.  Inspecting different approaches to classify countries by\n    international organizations (World Bank and United Nations\n    Statistics Division)\n2.  Understanding the country classification usedby my data sources\n    (<a class='glossary' title='The ‘World Inequality Database’ (WID) aims to provide open and convenient access to the most extensive available database on the historical evolution of the world distribution of income and wealth, both within countries and between countries. WID.WORLD'>WID</a> and <a class='glossary' title='The World Happiness Reports are a partnership of Gallup, the Oxford Wellbeing Research Centre, the UN Sustainable Development Solutions Network, and the WHR’s Editorial Board. The report is produced under the editorial control of the WHR Editorial Board. The Reports reflects a worldwide demand for more attention to happiness and well-being as criteria for government policy. It reviews the state of happiness in the world today and shows how the science of happiness explains personal and national variations in happiness. (https://worldhappiness.report/about/)'>WHR</a>.\n3.  Deciding which classification system I am going to use.\n4.  Modifying the country classification of WID and WHR where necessary\n    so that the country classification conforms to the internationally\n    recognized and approved systems.\n\nI aim to compare different aspects of Austria with those of other\ncountries. I want, for instance, to know how well Austria is doing\ncompared to other European countries, the other member states of the\nEuropean Union, or other OECD countries. It is, therefore, vital to have\ndifferent categorization systems.\n:::\n:::::\n\n## Country groupings in WHR and WID\n\nThere are already different classification systems in place:\nInternational organizations (e.g., [World\nBank](https://datahelpdesk.worldbank.org/knowledgebase/articles/906519),\n[United Nations](https://unstats.un.org/unsd/methodology/m49/)) have\ndeveloped them with several grouping variants.\n\nOn the other hand the WID database also uses different categorizations\nscheme and some of the WHR years have also incorporated regional\ngroupings (2013, 2015, 2020, and 2021). For an interpretation of my\nanalysis in relation to theirs it is important to know if we are using\nthe same classifications or if not, where the differences are.\n\nAs I am listing several classification variants it pays the effort to\ndevelop a function for the repetitive task.\n\n### Function `class_scheme()`\n\n::::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-show-class-scheme}\n: Function `class_scheme()` for showing classification scheme\n:::\n::::\n\n:::: my-r-code-container\n::: {#lst-chaplisting-ID}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nclass_scheme <- function(df, sel1, sel2) {\n    ## df = dataframe to show\n    ## sel1 = name of the first column (country names) to select\n    ## sel2 = name of the column with the regional indicator\n  df |> \n        dplyr::select(!!sel1, !!sel2) |> \n        dplyr::nest_by(!!sel2) |> \n        dplyr::mutate(data = as.vector(data)) |>\n        dplyr::mutate(data = stringr::str_c(data, collapse = \"; \")) |>\n        dplyr::mutate(data = paste(data, \";\")) |> \n        dplyr::mutate(N = lengths(gregexpr(\";\", data))) |> \n        dplyr::rename(Country = data) |> \n        dplyr::arrange(!!sel2) |> \n        DT::datatable(class = 'cell-border compact stripe', \n            options = list(\n              pageLength = 25,\n              lengthMenu = c(5, 10, 15, 20, 25, 50)\n              )\n        )\n}\n\ndf_whr <-  base::readRDS(\"data/whr/raw/whr_raw_2021.rds\")\ndf_wid <-  base::readRDS(\"data/chap80/country_codes.rds\")\ndf_wid <-  df_wid |> \n  dplyr::mutate(dplyr::across(tidyselect::where(\n    base::is.factor), base::as.character))\n```\n:::\n\n\n\n\nFunction `class_scheme()` for showing results of a classification system\n:::\n\nUsing {**dplyr**} programming code in functions needs some special\nconsideration. I have learned the details from \"Bang Bang – How to\nprogram with dplyr\" [@berroth-2019].\n::::\n:::::::\n\n### Grouping Schemata\n\nAs our function is now in place, we can display the different grouping\nschemes.\n\n::: {.my-code-collection}\n:::: {.my-code-collection-header}\n::::: {.my-code-collection-icon}\n:::::\n::: {#exm-country-classifications}\n: Grouping schemata of WHR and WID datasets\n:::\n\n::::\n\n:::::: my-code-collection-container\n::: panel-tabset\n\n###### WHR\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-whr-class}\n: Classification of the WHR data\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    whr_class <- class_scheme(\n            df = df_whr,\n            sel1 = rlang::quo(`Country name`),\n            sel2 = rlang::quo(`Regional indicator`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-86bec0e9e2bc0728d485\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-86bec0e9e2bc0728d485\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Central and Eastern Europe\",\"Commonwealth of Independent States\",\"East Asia\",\"Latin America and Caribbean\",\"Middle East and North Africa\",\"North America and ANZ\",\"South Asia\",\"Southeast Asia\",\"Sub-Saharan Africa\",\"Western Europe\"],[\"Czech Republic; Slovenia; Kosovo; Slovakia; Lithuania; Estonia; Poland; Romania; Serbia; Latvia; Hungary; Croatia; Bosnia and Herzegovina; Montenegro; Bulgaria; Albania; North Macedonia ;\",\"Uzbekistan; Kazakhstan; Moldova; Kyrgyzstan; Belarus; Russia; Tajikistan; Armenia; Azerbaijan; Turkmenistan; Georgia; Ukraine ;\",\"Taiwan Province of China; Japan; South Korea; Mongolia; Hong Kong S.A.R. of China; China ;\",\"Costa Rica; Guatemala; Uruguay; Brazil; Mexico; Jamaica; Panama; Chile; El Salvador; Colombia; Nicaragua; Argentina; Honduras; Peru; Ecuador; Bolivia; Paraguay; Dominican Republic; Venezuela; Haiti ;\",\"Israel; Bahrain; United Arab Emirates; Saudi Arabia; Kuwait; Libya; Turkey; Morocco; Algeria; Iraq; Iran; Tunisia; Lebanon; Palestinian Territories; Jordan; Egypt; Yemen ;\",\"New Zealand; Australia; Canada; United States ;\",\"Nepal; Maldives; Bangladesh; Pakistan; Sri Lanka; India; Afghanistan ;\",\"Singapore; Thailand; Philippines; Vietnam; Malaysia; Indonesia; Laos; Cambodia; Myanmar ;\",\"Mauritius; Congo (Brazzaville); Ivory Coast; Cameroon; Senegal; Ghana; Niger; Gambia; Benin; Guinea; South Africa; Gabon; Burkina Faso; Mozambique; Nigeria; Mali; Uganda; Liberia; Kenya; Namibia; Chad; Swaziland; Comoros; Ethiopia; Mauritania; Madagascar; Togo; Zambia; Sierra Leone; Burundi; Tanzania; Malawi; Lesotho; Botswana; Rwanda; Zimbabwe ;\",\"Finland; Denmark; Switzerland; Iceland; Netherlands; Norway; Sweden; Luxembourg; Austria; Germany; Ireland; United Kingdom; Belgium; France; Malta; Spain; Italy; Cyprus; Portugal; Greece; North Cyprus ;\"],[17,12,6,20,17,4,7,9,36,21]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Regional indicator<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Regional indicator\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\nThe datasets for 2013, 2015, 2020 and 2021 use all the same\nclassification scheme with **149 countries in\n10 regions**.\n\n149 are by far not all countries of the world. Their number is about 195 with some insecurities about Holy See (Vatican), the State of Palestine, Taiwan and Kosovo. (Compare: [How Many Countries Are There In The World?](https://www.worldatlas.com/geography/how-many-countries-are-there-in-the-world.html)) The reason for this lower number is simple: For only those 149 countries are subjective well-being data in one of the study years available.\n:::\n::::::\n\n###### WID1\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-wid1-class}\n: Classifications of the WID data with column \"region1\"\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    wid1_class <- class_scheme(\n            df = df_wid,\n            sel1 = rlang::quo(shortname),\n            sel2 = rlang::quo(region1)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e24249002a1d4234baae\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e24249002a1d4234baae\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[\"Africa\",\"Americas\",\"Asia\",\"Europe\",\"Oceania\"],[\"Angola; Burkina Faso; Burundi; Benin; Botswana; DR Congo; Central African Republic; Congo; Cote d'Ivoire; Cameroon; Cabo Verde; Djibouti; Algeria; Egypt; Eritrea; Ethiopia; Gabon; Ghana; Gambia; Guinea; Equatorial Guinea; Guinea-Bissau; Kenya; Comoros; Liberia; Lesotho; Libya; Morocco; Madagascar; Mali; Mauritania; Mauritius; Malawi; Mozambique; Namibia; Niger; Nigeria; Rwanda; Seychelles; Sudan; Sierra Leone; Senegal; Somalia; South Sudan; Sao Tome and Principe; Swaziland; Chad; Togo; Tunisia; Tanzania; Uganda; South Africa; Zambia; Zimbabwe ;\",\"Antigua and Barbuda; Anguilla; Argentina; Aruba; Barbados; Bermuda; Bolivia; Bonaire, Sint Eustatius and Saba; Brazil; Bahamas; Belize; Canada; Chile; Colombia; Costa Rica; Cuba; Curacao; Dominica; Dominican Republic; Ecuador; Grenada; Greenland; Guatemala; Guyana; Honduras; Haiti; Jamaica; Saint Kitts and Nevis; Cayman Islands; Saint Lucia; Montserrat; Mexico; Nicaragua; Panama; Peru; Puerto Rico; Paraguay; Suriname; El Salvador; Sint Maarten (Dutch part); Turks and Caicos Islands; Trinidad and Tobago; USA; Uruguay; Saint Vincent and the Grenadines; Venezuela; Virgin Islands, British ;\",\"United Arab Emirates; Afghanistan; Armenia; Azerbaijan; Bangladesh; Bahrain; Brunei Darussalam; Bhutan; Belarus; China; Georgia; Hong Kong; Indonesia; Israel; India; Iraq; Iran; Jordan; Japan; Kyrgyzstan; Cambodia; North Korea; Korea; Kuwait; Kazakhstan; Lao PDR; Lebanon; Sri Lanka; Myanmar; Mongolia; Macao; Maldives; Malaysia; Nepal; Oman; Philippines; Pakistan; Palestine; Qatar; Russian Federation; Saudi Arabia; Singapore; Syrian Arab Republic; Thailand; Tajikistan; Timor-Leste; Turkmenistan; Turkey; Taiwan; Ukraine; Uzbekistan; Viet Nam; Yemen ;\",\"Andorra; Albania; Austria; Bosnia and Herzegovina; Belgium; Bulgaria; Switzerland; Cyprus; Czech Republic; Germany; Denmark; Estonia; Spain; Finland; France; United Kingdom; Guernsey; Gibraltar; Greece; Croatia; Hungary; Ireland; Isle of Man; Iceland; Italy; Jersey; Kosovo; Liechtenstein; Lithuania; Luxembourg; Latvia; Monaco; Moldova; Montenegro; North Macedonia; Malta; Netherlands; Norway; Poland; Portugal; Romania; Serbia; Sweden; Slovenia; Slovakia; San Marino ;\",\"Australia; Fiji; Micronesia; Kiribati; Marshall Islands; New Caledonia; Nauru; New Zealand; French Polynesia; Papua New Guinea; Palau; Solomon Islands; Tonga; Tuvalu; Vanuatu; Samoa ;\"],[54,47,53,46,16]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region1<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region1\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n`region1` is a classification scheme with **216\ncountries in 5 regions**.\n\n216 is more than the 195 countries mentioned in [How Many Countries Are There In The World?](https://www.worldatlas.com/geography/how-many-countries-are-there-in-the-world.html). I believe the reason for this larger amount of \"countries\" is that it includes also 29 economies with populations of more than 30,000 as explained in the World Bank classification with 218 countries mentioned in @sec-80-wb-summary. There is still a small difference of two countries (218 - 216 = 2).\n\n:::\n::::::\n\n\n\n###### WID2\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-wid2-class}\n: Classifications of the WID data with column \"region2\"\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    wid2_class <- class_scheme(\n            df = df_wid,\n            sel1 = rlang::quo(shortname),\n            sel2 = rlang::quo(region2)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-adcc6b2b8b526ea65c1a\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-adcc6b2b8b526ea65c1a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\"],[\"Australia and New Zealand\",\"Caribbean\",\"Central America\",\"Central Asia\",\"East Africa\",\"East Asia\",\"Eastern Europe\",\"Middle Africa\",\"North Africa\",\"North America\",\"Oceania (excl. Australia and New Zealand)\",\"South Africa\",\"South America\",\"South Asia\",\"South-East Asia\",\"West Africa\",\"West Asia\",\"Western Europe\"],[\"Australia; New Zealand ;\",\"Antigua and Barbuda; Anguilla; Aruba; Barbados; Bonaire, Sint Eustatius and Saba; Bahamas; Cuba; Curacao; Dominica; Dominican Republic; Grenada; Haiti; Jamaica; Saint Kitts and Nevis; Cayman Islands; Saint Lucia; Montserrat; Puerto Rico; Sint Maarten (Dutch part); Turks and Caicos Islands; Trinidad and Tobago; Saint Vincent and the Grenadines; Virgin Islands, British ;\",\"Belize; Costa Rica; Guatemala; Honduras; Mexico; Nicaragua; Panama; El Salvador ;\",\"Kyrgyzstan; Kazakhstan; Tajikistan; Turkmenistan; Uzbekistan ;\",\"Burundi; Djibouti; Eritrea; Ethiopia; Kenya; Comoros; Madagascar; Mauritius; Malawi; Mozambique; Rwanda; Seychelles; Somalia; Tanzania; Uganda; Zambia; Zimbabwe ;\",\"China; Hong Kong; Japan; North Korea; Korea; Mongolia; Macao; Taiwan ;\",\"Albania; Bosnia and Herzegovina; Bulgaria; Cyprus; Czech Republic; Estonia; Croatia; Hungary; Kosovo; Lithuania; Latvia; Moldova; Montenegro; North Macedonia; Poland; Romania; Serbia; Slovenia; Slovakia ;\",\"Angola; DR Congo; Central African Republic; Congo; Cameroon; Gabon; Equatorial Guinea; Sao Tome and Principe; Chad ;\",\"Algeria; Egypt; Libya; Morocco; Sudan; South Sudan; Tunisia ;\",\"Bermuda; Canada; Greenland; USA ;\",\"Fiji; Micronesia; Kiribati; Marshall Islands; New Caledonia; Nauru; French Polynesia; Papua New Guinea; Palau; Solomon Islands; Tonga; Tuvalu; Vanuatu; Samoa ;\",\"Botswana; Lesotho; Namibia; Swaziland; South Africa ;\",\"Argentina; Bolivia; Brazil; Chile; Colombia; Ecuador; Guyana; Peru; Paraguay; Suriname; Uruguay; Venezuela ;\",\"Afghanistan; Bangladesh; Bhutan; India; Iran; Sri Lanka; Maldives; Nepal; Pakistan ;\",\"Brunei Darussalam; Indonesia; Cambodia; Lao PDR; Myanmar; Malaysia; Philippines; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Burkina Faso; Benin; Cote d'Ivoire; Cabo Verde; Ghana; Gambia; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Sierra Leone; Senegal; Togo ;\",\"United Arab Emirates; Armenia; Azerbaijan; Bahrain; Belarus; Georgia; Israel; Iraq; Jordan; Kuwait; Lebanon; Oman; Palestine; Qatar; Russian Federation; Saudi Arabia; Syrian Arab Republic; Turkey; Ukraine; Yemen ;\",\"Andorra; Austria; Belgium; Switzerland; Germany; Denmark; Spain; Finland; France; United Kingdom; Guernsey; Gibraltar; Greece; Ireland; Isle of Man; Iceland; Italy; Jersey; Liechtenstein; Luxembourg; Monaco; Malta; Netherlands; Norway; Portugal; Sweden; San Marino ;\"],[2,23,8,5,17,8,19,9,7,4,14,5,12,9,11,16,20,27]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region2<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region2\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n`region2` is a classification scheme with **216\ncountries in 18 regions**.\n:::\n::::::\n\n###### WID3\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-wid3-class}\n: Classifications of the WID data with column \"region3\"\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    wid3_class <- class_scheme(\n            df = df_wid,\n            sel1 = rlang::quo(shortname),\n            sel2 = rlang::quo(region3)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-057938edd1d8c8b3d61a\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-057938edd1d8c8b3d61a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\"],[\"European Union\",null],[\"Austria; Belgium; Bulgaria; Cyprus; Czech Republic; Germany; Denmark; Estonia; Spain; Finland; France; United Kingdom; Gibraltar; Greece; Croatia; Hungary; Ireland; Isle of Man; Italy; Jersey; Lithuania; Luxembourg; Latvia; Montserrat; Malta; Netherlands; Poland; Portugal; Romania; Sweden; Slovenia; Slovakia ;\",\"Andorra; United Arab Emirates; Afghanistan; Antigua and Barbuda; Anguilla; Albania; Armenia; Angola; Argentina; Australia; Aruba; Azerbaijan; Bosnia and Herzegovina; Barbados; Bangladesh; Burkina Faso; Bahrain; Burundi; Benin; Bermuda; Brunei Darussalam; Bolivia; Bonaire, Sint Eustatius and Saba; Brazil; Bahamas; Bhutan; Botswana; Belarus; Belize; Canada; DR Congo; Central African Republic; Congo; Switzerland; Cote d'Ivoire; Chile; Cameroon; China; Colombia; Costa Rica; Cuba; Cabo Verde; Curacao; Djibouti; Dominica; Dominican Republic; Algeria; Ecuador; Egypt; Eritrea; Ethiopia; Fiji; Micronesia; Gabon; Grenada; Georgia; Guernsey; Ghana; Greenland; Gambia; Guinea; Equatorial Guinea; Guatemala; Guinea-Bissau; Guyana; Hong Kong; Honduras; Haiti; Indonesia; Israel; India; Iraq; Iran; Iceland; Jamaica; Jordan; Japan; Kenya; Kyrgyzstan; Cambodia; Kiribati; Comoros; Saint Kitts and Nevis; North Korea; Korea; Kosovo; Kuwait; Cayman Islands; Kazakhstan; Lao PDR; Lebanon; Saint Lucia; Liechtenstein; Sri Lanka; Liberia; Lesotho; Libya; Morocco; Monaco; Moldova; Montenegro; Madagascar; Marshall Islands; North Macedonia; Mali; Myanmar; Mongolia; Macao; Mauritania; Mauritius; Maldives; Malawi; Mexico; Malaysia; Mozambique; Namibia; New Caledonia; Niger; Nigeria; Nicaragua; Norway; Nepal; Nauru; New Zealand; Oman; Panama; Peru; French Polynesia; Papua New Guinea; Philippines; Pakistan; Puerto Rico; Palestine; Palau; Paraguay; Qatar; Serbia; Russian Federation; Rwanda; Saudi Arabia; Solomon Islands; Seychelles; Sudan; Singapore; Sierra Leone; San Marino; Senegal; Somalia; Suriname; South Sudan; Sao Tome and Principe; El Salvador; Sint Maarten (Dutch part); Syrian Arab Republic; Swaziland; Turks and Caicos Islands; Chad; Togo; Thailand; Tajikistan; Timor-Leste; Turkmenistan; Tunisia; Tonga; Turkey; Trinidad and Tobago; Tuvalu; Taiwan; Tanzania; Ukraine; Uganda; USA; Uruguay; Uzbekistan; Saint Vincent and the Grenadines; Venezuela; Virgin Islands, British; Viet Nam; Vanuatu; Samoa; Yemen; South Africa; Zambia; Zimbabwe ;\"],[32,184]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region3<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region3\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n`region3` is a classification scheme with **216\ncountries in 2 regions**.\n:::\n::::::\n\n###### WID4\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-wid4-class}\n: Classifications of the WID data with column \"region4\"\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    wid4_class <- class_scheme(\n            df = df_wid,\n            sel1 = rlang::quo(shortname),\n            sel2 = rlang::quo(region4)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-0468213d5da906a61f97\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0468213d5da906a61f97\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Other East Asia\",\"Other Eastern Europe\",\"Other Latin America\",\"Other MENA\",\"Other North America &amp; Oceania\",\"Other Russia &amp; Central Asia\",\"Other South &amp; South-East Asia\",\"Other Sub-Saharan Africa\",\"Other Western Europe\",null],[\"Hong Kong; North Korea; Korea; Mongolia; Macao; Taiwan ;\",\"Albania; Bosnia and Herzegovina; Bulgaria; Cyprus; Czech Republic; Estonia; Croatia; Hungary; Lithuania; Latvia; Moldova; Montenegro; North Macedonia; Poland; Romania; Serbia; Slovenia; Slovakia ;\",\"Antigua and Barbuda; Anguilla; Aruba; Barbados; Bolivia; Bonaire, Sint Eustatius and Saba; Bahamas; Belize; Costa Rica; Cuba; Curacao; Dominica; Dominican Republic; Ecuador; Grenada; Guatemala; Guyana; Honduras; Haiti; Jamaica; Saint Kitts and Nevis; Cayman Islands; Saint Lucia; Montserrat; Nicaragua; Panama; Peru; Puerto Rico; Paraguay; Suriname; El Salvador; Sint Maarten (Dutch part); Turks and Caicos Islands; Trinidad and Tobago; Uruguay; Saint Vincent and the Grenadines; Venezuela; Virgin Islands, British ;\",\"United Arab Emirates; Bahrain; Israel; Iraq; Iran; Jordan; Kuwait; Lebanon; Libya; Morocco; Oman; Palestine; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; Yemen ;\",\"Bermuda; Fiji; Micronesia; Greenland; Kiribati; Marshall Islands; New Caledonia; Nauru; French Polynesia; Papua New Guinea; Palau; Solomon Islands; Tonga; Tuvalu; Vanuatu; Samoa ;\",\"Armenia; Azerbaijan; Belarus; Georgia; Kyrgyzstan; Kazakhstan; Tajikistan; Turkmenistan; Ukraine; Uzbekistan ;\",\"Afghanistan; Bangladesh; Brunei Darussalam; Bhutan; Cambodia; Lao PDR; Sri Lanka; Myanmar; Maldives; Malaysia; Nepal; Philippines; Pakistan; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Angola; Burkina Faso; Burundi; Benin; Botswana; DR Congo; Central African Republic; Congo; Cote d'Ivoire; Cameroon; Cabo Verde; Djibouti; Eritrea; Ethiopia; Gabon; Ghana; Gambia; Guinea; Equatorial Guinea; Guinea-Bissau; Kenya; Comoros; Liberia; Lesotho; Madagascar; Mali; Mauritania; Mauritius; Malawi; Mozambique; Namibia; Niger; Nigeria; Rwanda; Seychelles; Sudan; Sierra Leone; Senegal; Somalia; South Sudan; Sao Tome and Principe; Swaziland; Chad; Togo; Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Andorra; Austria; Belgium; Switzerland; Denmark; Finland; Guernsey; Gibraltar; Greece; Ireland; Isle of Man; Iceland; Jersey; Kosovo; Liechtenstein; Luxembourg; Monaco; Malta; Netherlands; Norway; Portugal; San Marino ;\",\"Argentina; Australia; Brazil; Canada; Chile; China; Colombia; Germany; Algeria; Egypt; Spain; France; United Kingdom; Indonesia; India; Italy; Japan; Mexico; New Zealand; Russian Federation; Sweden; Turkey; USA; South Africa ;\"],[6,18,38,17,16,10,17,48,22,24]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region4<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region4\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n`region4` is a classification scheme with **216\ncountries in 10 regions**.\n:::\n::::::\n\n###### WID5\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-wid5-class}\n: Classifications of the WID data with column \"region5\"\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    wid5_class <- class_scheme(\n            df = df_wid,\n            sel1 = rlang::quo(shortname),\n            sel2 = rlang::quo(region5)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-10e28e25b262e5a369e4\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-10e28e25b262e5a369e4\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],[\"East Asia\",\"Europe\",\"Latin America\",\"MENA\",\"North America &amp; Oceania\",\"Russia &amp; Central Asia\",\"South &amp; South-East Asia\",\"Sub-Saharan Africa\"],[\"China; Hong Kong; Japan; North Korea; Korea; Mongolia; Macao; Taiwan ;\",\"Andorra; Albania; Austria; Bosnia and Herzegovina; Belgium; Bulgaria; Switzerland; Cyprus; Czech Republic; Germany; Denmark; Estonia; Spain; Finland; France; United Kingdom; Guernsey; Gibraltar; Greece; Croatia; Hungary; Ireland; Isle of Man; Iceland; Italy; Jersey; Kosovo; Liechtenstein; Lithuania; Luxembourg; Latvia; Monaco; Moldova; Montenegro; North Macedonia; Malta; Netherlands; Norway; Poland; Portugal; Romania; Serbia; Sweden; Slovenia; Slovakia; San Marino ;\",\"Antigua and Barbuda; Anguilla; Argentina; Aruba; Barbados; Bolivia; Bonaire, Sint Eustatius and Saba; Brazil; Bahamas; Belize; Chile; Colombia; Costa Rica; Cuba; Curacao; Dominica; Dominican Republic; Ecuador; Grenada; Guatemala; Guyana; Honduras; Haiti; Jamaica; Saint Kitts and Nevis; Cayman Islands; Saint Lucia; Montserrat; Mexico; Nicaragua; Panama; Peru; Puerto Rico; Paraguay; Suriname; El Salvador; Sint Maarten (Dutch part); Turks and Caicos Islands; Trinidad and Tobago; Uruguay; Saint Vincent and the Grenadines; Venezuela; Virgin Islands, British ;\",\"United Arab Emirates; Bahrain; Algeria; Egypt; Israel; Iraq; Iran; Jordan; Kuwait; Lebanon; Libya; Morocco; Oman; Palestine; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; Turkey; Yemen ;\",\"Australia; Bermuda; Canada; Fiji; Micronesia; Greenland; Kiribati; Marshall Islands; New Caledonia; Nauru; New Zealand; French Polynesia; Palau; Solomon Islands; Tonga; Tuvalu; USA; Vanuatu; Samoa ;\",\"Armenia; Azerbaijan; Belarus; Georgia; Kyrgyzstan; Kazakhstan; Russian Federation; Tajikistan; Turkmenistan; Ukraine; Uzbekistan ;\",\"Afghanistan; Bangladesh; Brunei Darussalam; Bhutan; Indonesia; India; Cambodia; Lao PDR; Sri Lanka; Myanmar; Maldives; Malaysia; Nepal; Papua New Guinea; Philippines; Pakistan; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Angola; Burkina Faso; Burundi; Benin; Botswana; DR Congo; Central African Republic; Congo; Cote d'Ivoire; Cameroon; Cabo Verde; Djibouti; Eritrea; Ethiopia; Gabon; Ghana; Gambia; Guinea; Equatorial Guinea; Guinea-Bissau; Kenya; Comoros; Liberia; Lesotho; Madagascar; Mali; Mauritania; Mauritius; Malawi; Mozambique; Namibia; Niger; Nigeria; Rwanda; Seychelles; Sudan; Sierra Leone; Senegal; Somalia; South Sudan; Sao Tome and Principe; Swaziland; Chad; Togo; Tanzania; Uganda; South Africa; Zambia; Zimbabwe ;\"],[8,46,43,20,19,11,20,49]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region5<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region5\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n`region5` is a classification scheme with **216\ncountries in 8 regions**.\n\n:::\n::::::\n\n###### WID6\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-wid6-class}\n: Classifications of the WID data with column \"region6\"\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## replace NAs of region4 with values of region5\ndf_wid6 <- df_wid |> \n  dplyr::mutate(region6 = \n         base::ifelse(is.na(region4), region5, region4)\n         )\n\n(\n    wid_class6 <- class_scheme(\n            df = df_wid6,\n            sel1 = rlang::quo(shortname),\n            sel2 = rlang::quo(region6)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-54d337aa7d24fbc1196c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-54d337aa7d24fbc1196c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\"],[\"East Asia\",\"Europe\",\"Latin America\",\"MENA\",\"North America &amp; Oceania\",\"Other East Asia\",\"Other Eastern Europe\",\"Other Latin America\",\"Other MENA\",\"Other North America &amp; Oceania\",\"Other Russia &amp; Central Asia\",\"Other South &amp; South-East Asia\",\"Other Sub-Saharan Africa\",\"Other Western Europe\",\"Russia &amp; Central Asia\",\"South &amp; South-East Asia\",\"Sub-Saharan Africa\"],[\"China; Japan ;\",\"Germany; Spain; France; United Kingdom; Italy; Sweden ;\",\"Argentina; Brazil; Chile; Colombia; Mexico ;\",\"Algeria; Egypt; Turkey ;\",\"Australia; Canada; New Zealand; USA ;\",\"Hong Kong; North Korea; Korea; Mongolia; Macao; Taiwan ;\",\"Albania; Bosnia and Herzegovina; Bulgaria; Cyprus; Czech Republic; Estonia; Croatia; Hungary; Lithuania; Latvia; Moldova; Montenegro; North Macedonia; Poland; Romania; Serbia; Slovenia; Slovakia ;\",\"Antigua and Barbuda; Anguilla; Aruba; Barbados; Bolivia; Bonaire, Sint Eustatius and Saba; Bahamas; Belize; Costa Rica; Cuba; Curacao; Dominica; Dominican Republic; Ecuador; Grenada; Guatemala; Guyana; Honduras; Haiti; Jamaica; Saint Kitts and Nevis; Cayman Islands; Saint Lucia; Montserrat; Nicaragua; Panama; Peru; Puerto Rico; Paraguay; Suriname; El Salvador; Sint Maarten (Dutch part); Turks and Caicos Islands; Trinidad and Tobago; Uruguay; Saint Vincent and the Grenadines; Venezuela; Virgin Islands, British ;\",\"United Arab Emirates; Bahrain; Israel; Iraq; Iran; Jordan; Kuwait; Lebanon; Libya; Morocco; Oman; Palestine; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; Yemen ;\",\"Bermuda; Fiji; Micronesia; Greenland; Kiribati; Marshall Islands; New Caledonia; Nauru; French Polynesia; Papua New Guinea; Palau; Solomon Islands; Tonga; Tuvalu; Vanuatu; Samoa ;\",\"Armenia; Azerbaijan; Belarus; Georgia; Kyrgyzstan; Kazakhstan; Tajikistan; Turkmenistan; Ukraine; Uzbekistan ;\",\"Afghanistan; Bangladesh; Brunei Darussalam; Bhutan; Cambodia; Lao PDR; Sri Lanka; Myanmar; Maldives; Malaysia; Nepal; Philippines; Pakistan; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Angola; Burkina Faso; Burundi; Benin; Botswana; DR Congo; Central African Republic; Congo; Cote d'Ivoire; Cameroon; Cabo Verde; Djibouti; Eritrea; Ethiopia; Gabon; Ghana; Gambia; Guinea; Equatorial Guinea; Guinea-Bissau; Kenya; Comoros; Liberia; Lesotho; Madagascar; Mali; Mauritania; Mauritius; Malawi; Mozambique; Namibia; Niger; Nigeria; Rwanda; Seychelles; Sudan; Sierra Leone; Senegal; Somalia; South Sudan; Sao Tome and Principe; Swaziland; Chad; Togo; Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Andorra; Austria; Belgium; Switzerland; Denmark; Finland; Guernsey; Gibraltar; Greece; Ireland; Isle of Man; Iceland; Jersey; Kosovo; Liechtenstein; Luxembourg; Monaco; Malta; Netherlands; Norway; Portugal; San Marino ;\",\"Russian Federation ;\",\"Indonesia; India ;\",\"South Africa ;\"],[2,6,5,3,4,6,18,38,17,16,10,17,48,22,1,2,1]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region6<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region6\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n`region6` is a classification scheme with **216\ncountries in 17 regions**.\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n\n\n\n### Summary\n\nXY = STILL TO WRITE!\n\n\n\n\n## Official classifications\n\nIn a first step I want to find out  where these classifications systems come from and compare\nthem to the country groupings in the WID and WHR data. I will look into the two official classifications schemes of World Bank and United Nations and apply the following procedure:\n\n:::::{.my-procedure}\n:::{.my-procedure-header}\n:::::: {#prp-country-class}\n: Understand structure and content of the official classifications schemata\n::::::\n:::\n::::{.my-procedure-container}\n1. Create a directory for storing the different country classification files (see @sec-80-create-data-dirs).\n2. Download classification files and store them for faster access as R objects with <a class='glossary' title='The abbreviation “RDS” in file endings .rds refers to “R Data Serialized”. It is a format used by the R programming language to serialize and store R objects, such as data frames, lists, and functions, in a compact and portable binary format.'>rds</a> format  (see @sec-80-wb-download and @sec-80-unsd-download).\n3. Inspect the data classification files of World Bank (@sec-80-inspect-wb) and of the United Nations (@sec-80-inspect-unsd) in detail.\n::::\n:::::\n\n### Create data directories {#sec-80-create-data-dirs}\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-create-class-dirs}\n: Create folders for country classification files\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\npb_create_folder(base::paste0(here::here(), \"/data/\"))\npb_create_folder(base::paste0(here::here(), \"/data/country-class\"))\n```\n:::\n\n\n\n\n<center>(*For this R code chunk is no output available*)</center>\n\n\n::::\n:::::\n\n### Download classification files {#sec-80-download-class-files}\n\n#### World Bank {#sec-80-wb-download}\n\nThe World Bank Classification can be downloaded from [How does the World Bank classify countries?](https://datahelpdesk.worldbank.org/knowledgebase/articles/378834-how-does-the-world-bank-classify-countries). At the bottom of the page you can see the line \"Download an Excel file of historical classifications by income.\", providing a link with word \"Download\". The downloaded file `CLASS.xlsx` does *not* contain a historical classification by income but the general classification system of the last available year (2023).  \n\nYes, there is another Excel file `OGHIST.xslx` with the historical cutoffs\nfor incomes and lending categories, dating from 1987 to 2023. But the download link for this file is located at another web page: [World Bank Country and Lending Groups](https://datahelpdesk.worldbank.org/knowledgebase/articles/906519). On this page you will also find the updates for the cutoffs for countries <a class='glossary' title='Gross National Income (GNI) is a measure of a country’s income, which includes all the income earned by a country’s residents, businesses, and earnings from foreign sources. It is defined as the total amount of money earned by a nation’s people and businesses, no matter where it was earned. GNI is an alternative to GDP as a way to measure and track a nation’s wealth, as it calculates income instead of output.'>GNI</a> income per capita which is important for the lending eligibility of countries. [World Bank country classifications by income level for\n2024-2025](https://blogs.worldbank.org/en/opendata/world-bank-country-classifications-by-income-level-for-2024-2025) has the current updated values and changes over the last year.\n\nThe file `CLASS.xlsx` am interested here consists of three sheets:\n\n1. \"List of Economoies\"\n2. \"compositions\" and\n3. \"Notes\"\n\nI am going to download the first two Excel sheets.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ID-text}\n: Numbered R Code Title\n::::::\n:::\n::::{.my-r-code-container}\n\n<center>**Run this code chunk manually if the file still needs to be downloaded.**</center>\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n## download wb-class file ##############\ndownloader::download(\n    url = \"https://datacatalogfiles.worldbank.org/ddh-published/0037712/DR0090755/CLASS.xlsx\",\n    destfile = base::paste0(here::here(), \n            \"/data/country-class/wb-class.xlsx\")\n)\n\n## create R object ############\nwb_class_economies <- \n  readxl::read_xlsx(\n    base::paste0(here::here(), \n    \"/data/country-class/wb-class.xlsx\"),\n           sheet = \"List of economies\") \n\n\nwb_class_compositions <- \n  readxl::read_xlsx(\n    base::paste0(here::here(), \n    \"/data/country-class/wb-class.xlsx\"),\n           sheet = \"compositions\")\n\n## save as .rds files ###############\npb_save_data_file(\n  \"country-class\", \n  wb_class_economies, \n  \"wb_class_economies.rds\"\n)\n\n\npb_save_data_file(\n  \"country-class\", \n  wb_class_compositions, \n  \"wb_class_compositions.rds\"\n)\n```\n:::\n\n\n\n\n<center>(*For this R code chunk is no output available*)</center>\n\n\n::::\n:::::\n\n\n#### UNSD-M49 {#sec-80-unsd-download}\n\nAnother more detailed classification system expressively developed for\nstatistical purposes is developed by the United Nations Statistics\nDivision <a class='glossary' title='The United Nations Statistics Division (UNSD) is committed to the advancement of the global statistical system. It compiles and disseminates global statistical information, develop standards and norms for statistical activities, and support countries’ efforts to strengthen their national statistical systems.'>UNSD</a> using the <a class='glossary' title='The United Nations publication “Standard Country or Area Codes for Statistical Use” was originally published as Series M, No. 49 and is now commonly referred to as the M49 standard. M49 is a country/areas classification system prepared by the Statistics Division of the United Nations Secretariat primarily for use in its publications and databases.'>M49</a> methodology.\n\nThe result is called [Standard country or area codes for statistical use\n(M49)](https://unstats.un.org/unsd/methodology/m49/) and can be\ndownloaded manually in different languages and formats (Copy into the\nclipboard, Excel or CSV) from the [Overview\npage](https://unstats.un.org/unsd/methodology/m49/overview/). On this page is\nno URL for an R script available, because triggering one of the buttons\ncopies or downloads the data with the help of Javascript. So I had to download the file manually or to find another location where I could download it programmatically. I stored it as `unsd-class.csv` under the \"data/country-class\" folder. \n\nI found with the OMNIKA DataStore an [external source for the UNSD-M49 country classification](https://github.com/omnika-datastore/unsd-m49-standard-area-codes). The OMNIKA DataStore is an open-access data science resource for researchers, authors, and technologists. OMNIKA Foundation is a 501c3 nonprofit whose mission is to digitize, organize, and make freely available important contents. For security reason I checked the two files with `base::all.equal()` to determine if those two files are identical. Yes, they are!\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ID-text}\n: Numbered R Code Title\n::::::\n:::\n::::{.my-r-code-container}\n\n<center>**Run this code chunk manually if the file still needs to be downloaded.**</center>\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n## download unsd-m49 file ############\nurl <- \"https://github.com/omnika-datastore/unsd-m49-standard-area-codes/raw/refs/heads/main/2022-09-24__CSV_UNSD_M49.csv\"\n\ndownloader::download(\n    url = url,\n    destfile = base::paste0(here::here(), \n            \"/data/country-class/unsd-class.csv\")\n)\n\n\n## create R object ###############\nunsd_class <- \n  readr::read_delim(\n    file = base::paste0(here::here(), \n    \"/data/country-class/unsd-class.csv\"),\n    delim = \";\"\n  )\n\n\n## save as .rds file ################\npb_save_data_file(\n  \"country-class\", \n  unsd_class, \n  \"unsd_class.rds\")\n```\n:::\n\n\n\n\n<center>(*For this R code chunk is no output available*)</center>\n\n::::\n:::::\n\n\n\n\n\n### Inspect classification files {#sec-80-inspect-class-files}\n\nTo get an detailed understanding of the data structures I will provide the following outputs:\n\n1. A summary statistics with `skimr::skim()` followed by inspection of the first data with `dplyr::glimpse()`.\n2. Several detailed outputs of the classifications categories (regions) and their elements (countries) in different code chunks (tabs).\n\n#### World Bank {#sec-80-inspect-wb}\n\n::: {.my-code-collection}\n:::: {.my-code-collection-header}\n::::: {.my-code-collection-icon}\n:::::\n:::::: {#exm-inspect-wb-class-files}\n: Inspect the structure of the World Bank classification\n::::::\n\n::::\n\n::::{.my-code-collection-container}\n\n::: {.panel-tabset}\n\n###### WB `economies`\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-inspect-wb-sheet1}\n: Inspect sheet `List of Economies` of the World Bank classification file\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb_class_economies <- base::readRDS(\"data/country-class/wb_class_economies.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(wb_class_economies)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(wb_class_economies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                   |\n|:------------------------|:------------------|\n|Name                     |wb_class_economies |\n|Number of rows           |267                |\n|Number of columns        |5                  |\n|_______________________  |                   |\n|Column type frequency:   |                   |\n|character                |5                  |\n|________________________ |                   |\n|Group variables          |None               |\n\n\n**Variable type: character**\n\n|skim_variable    | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:----------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Economy          |         1|          1.00|   4|  50|     0|      266|          0|\n|Code             |         1|          1.00|   3|   3|     0|      266|          0|\n|Region           |        49|          0.82|  10|  26|     0|        7|          0|\n|Income group     |        50|          0.81|  10|  19|     0|        4|          0|\n|Lending category |       122|          0.54|   3|   5|     0|        3|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 267\n#> Columns: 5\n#> $ Economy            <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"American Samo…\n#> $ Code               <chr> \"AFG\", \"ALB\", \"DZA\", \"ASM\", \"AND\", \"AGO\", \"ATG\", \"A…\n#> $ Region             <chr> \"South Asia\", \"Europe & Central Asia\", \"Middle East…\n#> $ `Income group`     <chr> \"Low income\", \"Upper middle income\", \"Upper middle …\n#> $ `Lending category` <chr> \"IDA\", \"IBRD\", \"IBRD\", NA, NA, \"IBRD\", \"IBRD\", \"IBR…\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n\n###### WB `compositions`\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-inspect-wb-sheet2}\n: Inspect sheet `compositions` of the World Bank classification file\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb_class_compositions <- base::readRDS(\"data/country-class/wb_class_compositions.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(wb_class_compositions)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(wb_class_compositions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                      |\n|:------------------------|:---------------------|\n|Name                     |wb_class_compositions |\n|Number of rows           |2084                  |\n|Number of columns        |4                     |\n|_______________________  |                      |\n|Column type frequency:   |                      |\n|character                |4                     |\n|________________________ |                      |\n|Group variables          |None                  |\n\n\n**Variable type: character**\n\n|skim_variable   | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|WB_Group_Code   |         0|             1|   3|   3|     0|       48|          0|\n|WB_Group_Name   |         0|             1|   5|  50|     0|       48|          0|\n|WB_Country_Code |         0|             1|   3|   3|     0|      218|          0|\n|WB_Country_Name |         0|             1|   4|  30|     0|      218|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 2,084\n#> Columns: 4\n#> $ WB_Group_Code   <chr> \"AFE\", \"AFE\", \"AFE\", \"AFE\", \"AFE\", \"AFE\", \"AFE\", \"AFE\"…\n#> $ WB_Group_Name   <chr> \"Africa Eastern and Southern\", \"Africa Eastern and Sou…\n#> $ WB_Country_Code <chr> \"AGO\", \"BWA\", \"BDI\", \"COM\", \"COD\", \"ERI\", \"SWZ\", \"ETH\"…\n#> $ WB_Country_Name <chr> \"Angola\", \"Botswana\", \"Burundi\", \"Comoros\", \"Congo, De…\n```\n\n\n:::\n:::\n\n\n\n\n\n\n::::\n:::::\n\n###### WB standard\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-wb-class-standard}\n: Pre-defined standard categorization\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_wb_standard <-  base::readRDS(\"data/country-class/wb_class_economies.rds\") |> \n    dplyr::slice(1:218)\n\n\n\n(\n    wb_class_standard <- class_scheme(\n            df = df_wb_standard,\n            sel1 = rlang::quo(`Economy`),\n            sel2 = rlang::quo(`Region`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-bf21fc3098ea7460b6e5\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-bf21fc3098ea7460b6e5\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"],[\"East Asia &amp; Pacific\",\"Europe &amp; Central Asia\",\"Latin America &amp; Caribbean\",\"Middle East &amp; North Africa\",\"North America\",\"South Asia\",\"Sub-Saharan Africa\"],[\"American Samoa; Australia; Brunei Darussalam; Cambodia; China; Fiji; French Polynesia; Guam; Hong Kong SAR, China; Indonesia; Japan; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Lao PDR; Macao SAR, China; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; New Caledonia; New Zealand; Northern Mariana Islands; Palau; Papua New Guinea; Philippines; Samoa; Singapore; Solomon Islands; Taiwan, China; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Albania; Andorra; Armenia; Austria; Azerbaijan; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Channel Islands; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Georgia; Germany; Gibraltar; Greece; Greenland; Hungary; Iceland; Ireland; Isle of Man; Italy; Kazakhstan; Kosovo; Kyrgyz Republic; Latvia; Liechtenstein; Lithuania; Luxembourg; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Romania; Russian Federation; San Marino; Serbia; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Turkmenistan; Ukraine; United Kingdom; Uzbekistan ;\",\"Antigua and Barbuda; Argentina; Aruba; Bahamas, The; Barbados; Belize; Bolivia; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Sint Maarten (Dutch part); St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Turks and Caicos Islands; Uruguay; Venezuela, RB; Virgin Islands (U.S.) ;\",\"Algeria; Bahrain; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Bermuda; Canada; United States ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\"],[38,58,42,21,3,8,48]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Region<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Region\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n***\n\n`Region` is a coarse classification scheme with only **7 regions formed by 218 countries**.\n\n::::\n:::::\n\n###### WB All\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-wb-class-all}\n: All provided groups, regional, economical and political\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_wb_all <-  base::readRDS(\"data/country-class/wb_class_compositions.rds\")\n\n\n(\n    wb_class_all <- class_scheme(\n            df = df_wb_all,\n            sel1 = rlang::quo(`WB_Country_Name`),\n            sel2 = rlang::quo(`WB_Group_Name`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-dca180a36cc6161dfc62\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-dca180a36cc6161dfc62\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\"],[\"Africa Eastern and Southern\",\"Africa Western and Central\",\"Arab World\",\"Caribbean small states\",\"Central Europe and the Baltics\",\"Early-demographic dividend\",\"East Asia &amp; Pacific\",\"East Asia &amp; Pacific (IDA &amp; IBRD)\",\"East Asia &amp; Pacific (excluding high income)\",\"Euro area\",\"Europe &amp; Central Asia\",\"Europe &amp; Central Asia (IDA &amp; IBRD)\",\"Europe &amp; Central Asia (excluding high income)\",\"European Union\",\"Fragile and conflict affected situations\",\"Heavily indebted poor countries (HIPC)\",\"High income\",\"IBRD only\",\"IDA &amp; IBRD total\",\"IDA blend\",\"IDA only\",\"IDA total\",\"Late-demographic dividend\",\"Latin America &amp; Caribbean\",\"Latin America &amp; Caribbean (IDA &amp; IBRD)\",\"Latin America &amp; Caribbean (excluding high income)\",\"Least developed countries: UN classification\",\"Low &amp; middle income\",\"Low income\",\"Lower middle income\",\"Middle East &amp; North Africa\",\"Middle East &amp; North Africa (IDA &amp; IBRD)\",\"Middle East &amp; North Africa (excluding high income)\",\"Middle income\",\"North America\",\"OECD members\",\"Other small states\",\"Pacific island small states\",\"Post-demographic dividend\",\"Pre-demographic dividend\",\"Small states (SST)\",\"South Asia\",\"South Asia (IDA &amp; IBRD)\",\"Sub-Saharan Africa\",\"Sub-Saharan Africa (IDA &amp; IBRD)\",\"Sub-Saharan Africa (excluding high income)\",\"Upper middle income\",\"World\"],[\"Angola; Botswana; Burundi; Comoros; Congo, Dem. Rep.; Eritrea; Eswatini; Ethiopia; Kenya; Lesotho; Madagascar; Malawi; Mauritius; Mozambique; Namibia; Rwanda; São Tomé and Príncipe; Seychelles; Somalia; South Africa; South Sudan; Sudan; Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Benin; Burkina Faso; Cabo Verde; Cameroon; Central African Republic; Chad; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Algeria; Bahrain; Comoros; Djibouti; Egypt, Arab Rep.; Iraq; Jordan; Kuwait; Lebanon; Libya; Mauritania; Morocco; Oman; Qatar; Saudi Arabia; Somalia; Sudan; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Antigua and Barbuda; Bahamas, The; Barbados; Belize; Dominica; Grenada; Guyana; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname ;\",\"Bulgaria; Croatia; Czechia; Estonia; Hungary; Latvia; Lithuania; Poland; Romania; Slovak Republic; Slovenia ;\",\"Algeria; Argentina; Bahrain; Bangladesh; Belize; Bhutan; Bolivia; Botswana; Cabo Verde; Cambodia; Djibouti; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Eswatini; Ethiopia; Gabon; Ghana; Grenada; Guatemala; Haiti; Honduras; India; Indonesia; Iran, Islamic Rep.; Israel; Jordan; Kiribati; Lao PDR; Lesotho; Libya; Maldives; Mexico; Micronesia, Fed. Sts.; Myanmar; Namibia; Nepal; Nicaragua; Pakistan; Panama; Papua New Guinea; Paraguay; Peru; Philippines; Rwanda; Samoa; Saudi Arabia; Solomon Islands; South Africa; Suriname; Syrian Arab Republic; Tajikistan; Tonga; Türkiye; Turkmenistan; Uzbekistan; Vanuatu; Venezuela, RB; West Bank and Gaza; Yemen, Rep.; Zimbabwe ;\",\"American Samoa; Australia; Brunei Darussalam; Cambodia; China; Fiji; French Polynesia; Guam; Hong Kong SAR, China; Indonesia; Japan; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Lao PDR; Macao SAR, China; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; New Caledonia; New Zealand; Northern Mariana Islands; Palau; Papua New Guinea; Philippines; Samoa; Singapore; Solomon Islands; Taiwan, China; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Cambodia; China; Fiji; Indonesia; Kiribati; Lao PDR; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; Palau; Papua New Guinea; Philippines; Samoa; Solomon Islands; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Cambodia; China; Fiji; Indonesia; Kiribati; Korea, Dem. People's Rep.; Lao PDR; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Papua New Guinea; Philippines; Samoa; Solomon Islands; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Austria; Belgium; Croatia; Cyprus; Estonia; Finland; France; Germany; Greece; Ireland; Italy; Latvia; Lithuania; Luxembourg; Malta; Netherlands; Portugal; Slovak Republic; Slovenia; Spain ;\",\"Albania; Andorra; Armenia; Austria; Azerbaijan; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Channel Islands; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Georgia; Germany; Gibraltar; Greece; Greenland; Hungary; Iceland; Ireland; Isle of Man; Italy; Kazakhstan; Kosovo; Kyrgyz Republic; Latvia; Liechtenstein; Lithuania; Luxembourg; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Romania; Russian Federation; San Marino; Serbia; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Turkmenistan; Ukraine; United Kingdom; Uzbekistan ;\",\"Albania; Armenia; Azerbaijan; Belarus; Bosnia and Herzegovina; Bulgaria; Croatia; Georgia; Kazakhstan; Kosovo; Kyrgyz Republic; Moldova; Montenegro; North Macedonia; Poland; Romania; Russian Federation; Serbia; Tajikistan; Türkiye; Turkmenistan; Ukraine; Uzbekistan ;\",\"Albania; Armenia; Azerbaijan; Belarus; Bosnia and Herzegovina; Georgia; Kazakhstan; Kosovo; Kyrgyz Republic; Moldova; Montenegro; North Macedonia; Serbia; Tajikistan; Türkiye; Turkmenistan; Ukraine; Uzbekistan ;\",\"Austria; Belgium; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; Hungary; Ireland; Italy; Latvia; Lithuania; Luxembourg; Malta; Netherlands; Poland; Portugal; Romania; Slovak Republic; Slovenia; Spain; Sweden ;\",\"Afghanistan; Burkina Faso; Burundi; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Eritrea; Ethiopia; Guinea-Bissau; Haiti; Iraq; Kiribati; Kosovo; Lebanon; Libya; Mali; Marshall Islands; Micronesia, Fed. Sts.; Mozambique; Myanmar; Niger; Nigeria; Papua New Guinea; São Tomé and Príncipe; Solomon Islands; Somalia; South Sudan; Sudan; Syrian Arab Republic; Timor-Leste; Tuvalu; Ukraine; Venezuela, RB; West Bank and Gaza; Yemen, Rep.; Zimbabwe ;\",\"Afghanistan; Benin; Bolivia; Burkina Faso; Burundi; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Eritrea; Ethiopia; Gambia, The; Ghana; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Nicaragua; Niger; Rwanda; São Tomé and Príncipe; Senegal; Sierra Leone; Somalia; Sudan; Tanzania; Togo; Uganda; Zambia ;\",\"American Samoa; Andorra; Antigua and Barbuda; Aruba; Australia; Austria; Bahamas, The; Bahrain; Barbados; Belgium; Bermuda; British Virgin Islands; Brunei Darussalam; Bulgaria; Canada; Cayman Islands; Channel Islands; Chile; Croatia; Curaçao; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; French Polynesia; Germany; Gibraltar; Greece; Greenland; Guam; Guyana; Hong Kong SAR, China; Hungary; Iceland; Ireland; Isle of Man; Israel; Italy; Japan; Korea, Rep.; Kuwait; Latvia; Liechtenstein; Lithuania; Luxembourg; Macao SAR, China; Malta; Monaco; Nauru; Netherlands; New Caledonia; New Zealand; Northern Mariana Islands; Norway; Oman; Palau; Panama; Poland; Portugal; Puerto Rico; Qatar; Romania; Russian Federation; San Marino; Saudi Arabia; Seychelles; Singapore; Sint Maarten (Dutch part); Slovak Republic; Slovenia; Spain; St. Kitts and Nevis; St. Martin (French part); Sweden; Switzerland; Taiwan, China; Trinidad and Tobago; Turks and Caicos Islands; United Arab Emirates; United Kingdom; United States; Uruguay; Virgin Islands (U.S.) ;\",\"Albania; Algeria; Angola; Antigua and Barbuda; Argentina; Armenia; Azerbaijan; Barbados; Belarus; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Chile; China; Colombia; Costa Rica; Croatia; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Gabon; Georgia; Guatemala; India; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Jordan; Kazakhstan; Lebanon; Libya; Malaysia; Mauritius; Mexico; Moldova; Mongolia; Montenegro; Morocco; Namibia; Nauru; North Macedonia; Palau; Panama; Paraguay; Peru; Philippines; Poland; Romania; Russian Federation; Serbia; Seychelles; South Africa; St. Kitts and Nevis; Suriname; Thailand; Trinidad and Tobago; Tunisia; Türkiye; Turkmenistan; Ukraine; Uruguay; Venezuela, RB; Vietnam ;\",\"Afghanistan; Albania; Algeria; Angola; Antigua and Barbuda; Argentina; Armenia; Azerbaijan; Bangladesh; Barbados; Belarus; Belize; Benin; Bhutan; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; Bulgaria; Burkina Faso; Burundi; Cabo Verde; Cambodia; Cameroon; Central African Republic; Chad; Chile; China; Colombia; Comoros; Congo, Dem. Rep.; Congo, Rep.; Costa Rica; Côte d’Ivoire; Croatia; Djibouti; Dominica; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Fiji; Gabon; Gambia, The; Georgia; Ghana; Grenada; Guatemala; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; India; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kiribati; Kosovo; Kyrgyz Republic; Lao PDR; Lebanon; Lesotho; Liberia; Libya; Madagascar; Malawi; Malaysia; Maldives; Mali; Marshall Islands; Mauritania; Mauritius; Mexico; Micronesia, Fed. Sts.; Moldova; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nauru; Nepal; Nicaragua; Niger; Nigeria; North Macedonia; Pakistan; Palau; Panama; Papua New Guinea; Paraguay; Peru; Philippines; Poland; Romania; Russian Federation; Rwanda; Samoa; São Tomé and Príncipe; Senegal; Serbia; Seychelles; Sierra Leone; Solomon Islands; Somalia; South Africa; South Sudan; Sri Lanka; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Sudan; Suriname; Syrian Arab Republic; Tajikistan; Tanzania; Thailand; Timor-Leste; Togo; Tonga; Trinidad and Tobago; Tunisia; Türkiye; Turkmenistan; Tuvalu; Uganda; Ukraine; Uruguay; Uzbekistan; Vanuatu; Venezuela, RB; Vietnam; Yemen, Rep.; Zambia; Zimbabwe ;\",\"Belize; Cabo Verde; Cameroon; Congo, Rep.; Dominica; Eswatini; Fiji; Grenada; Kenya; Nigeria; Pakistan; Papua New Guinea; St. Lucia; St. Vincent and the Grenadines; Timor-Leste; Uzbekistan; Zimbabwe ;\",\"Afghanistan; Bangladesh; Benin; Bhutan; Burkina Faso; Burundi; Cambodia; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Côte d’Ivoire; Djibouti; Eritrea; Ethiopia; Gambia, The; Ghana; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; Kiribati; Kosovo; Kyrgyz Republic; Lao PDR; Lesotho; Liberia; Madagascar; Malawi; Maldives; Mali; Marshall Islands; Mauritania; Micronesia, Fed. Sts.; Mozambique; Myanmar; Nepal; Nicaragua; Niger; Rwanda; Samoa; São Tomé and Príncipe; Senegal; Sierra Leone; Solomon Islands; Somalia; South Sudan; Sri Lanka; Sudan; Syrian Arab Republic; Tajikistan; Tanzania; Togo; Tonga; Tuvalu; Uganda; Vanuatu; Yemen, Rep.; Zambia ;\",\"Afghanistan; Bangladesh; Belize; Benin; Bhutan; Burkina Faso; Burundi; Cabo Verde; Cambodia; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Djibouti; Dominica; Eritrea; Eswatini; Ethiopia; Fiji; Gambia, The; Ghana; Grenada; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; Kenya; Kiribati; Kosovo; Kyrgyz Republic; Lao PDR; Lesotho; Liberia; Madagascar; Malawi; Maldives; Mali; Marshall Islands; Mauritania; Micronesia, Fed. Sts.; Mozambique; Myanmar; Nepal; Nicaragua; Niger; Nigeria; Pakistan; Papua New Guinea; Rwanda; Samoa; São Tomé and Príncipe; Senegal; Sierra Leone; Solomon Islands; Somalia; South Sudan; Sri Lanka; St. Lucia; St. Vincent and the Grenadines; Sudan; Syrian Arab Republic; Tajikistan; Tanzania; Timor-Leste; Togo; Tonga; Tuvalu; Uganda; Uzbekistan; Vanuatu; Yemen, Rep.; Zambia; Zimbabwe ;\",\"Albania; Armenia; Aruba; Azerbaijan; Bahamas, The; Brazil; Brunei Darussalam; Chile; China; Colombia; Costa Rica; Cyprus; Estonia; Fiji; French Polynesia; Georgia; Guam; Guyana; Iceland; Ireland; Jamaica; Kazakhstan; Korea, Dem. People's Rep.; Kuwait; Kyrgyz Republic; Latvia; Lebanon; Malaysia; Mauritius; Moldova; Mongolia; Montenegro; Morocco; New Caledonia; North Macedonia; Oman; Poland; Puerto Rico; Qatar; Romania; Russian Federation; Serbia; Seychelles; Slovak Republic; Sri Lanka; St. Lucia; St. Vincent and the Grenadines; Thailand; Trinidad and Tobago; Tunisia; United Arab Emirates; Uruguay; Vietnam; Virgin Islands (U.S.) ;\",\"Antigua and Barbuda; Argentina; Aruba; Bahamas, The; Barbados; Belize; Bolivia; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Sint Maarten (Dutch part); St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Turks and Caicos Islands; Uruguay; Venezuela, RB; Virgin Islands (U.S.) ;\",\"Antigua and Barbuda; Argentina; Barbados; Belize; Bolivia; Brazil; Chile; Colombia; Costa Rica; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Uruguay; Venezuela, RB ;\",\"Argentina; Belize; Bolivia; Brazil; Colombia; Costa Rica; Cuba; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Paraguay; Peru; St. Lucia; St. Vincent and the Grenadines; Suriname ;\",\"Afghanistan; Angola; Bangladesh; Benin; Burkina Faso; Burundi; Cambodia; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Djibouti; Eritrea; Ethiopia; Gambia, The; Guinea; Guinea-Bissau; Haiti; Kiribati; Lao PDR; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Myanmar; Nepal; Niger; Rwanda; São Tomé and Príncipe; Senegal; Sierra Leone; Solomon Islands; Somalia; South Sudan; Sudan; Tanzania; Timor-Leste; Togo; Tuvalu; Uganda; Yemen, Rep.; Zambia ;\",\"Afghanistan; Albania; Algeria; Angola; Argentina; Armenia; Azerbaijan; Bangladesh; Belarus; Belize; Benin; Bhutan; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; Burkina Faso; Burundi; Cabo Verde; Cambodia; Cameroon; Central African Republic; Chad; China; Colombia; Comoros; Congo, Dem. Rep.; Congo, Rep.; Costa Rica; Côte d’Ivoire; Cuba; Djibouti; Dominica; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Fiji; Gabon; Gambia, The; Georgia; Ghana; Grenada; Guatemala; Guinea; Guinea-Bissau; Haiti; Honduras; India; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kiribati; Korea, Dem. People's Rep.; Kosovo; Kyrgyz Republic; Lao PDR; Lebanon; Lesotho; Liberia; Libya; Madagascar; Malawi; Malaysia; Maldives; Mali; Marshall Islands; Mauritania; Mauritius; Mexico; Micronesia, Fed. Sts.; Moldova; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nepal; Nicaragua; Niger; Nigeria; North Macedonia; Pakistan; Papua New Guinea; Paraguay; Peru; Philippines; Rwanda; Samoa; São Tomé and Príncipe; Senegal; Serbia; Sierra Leone; Solomon Islands; Somalia; South Africa; South Sudan; Sri Lanka; St. Lucia; St. Vincent and the Grenadines; Sudan; Suriname; Syrian Arab Republic; Tajikistan; Tanzania; Thailand; Timor-Leste; Togo; Tonga; Tunisia; Türkiye; Turkmenistan; Tuvalu; Uganda; Ukraine; Uzbekistan; Vanuatu; Vietnam; West Bank and Gaza; Yemen, Rep.; Zambia; Zimbabwe ;\",\"Afghanistan; Burkina Faso; Burundi; Central African Republic; Chad; Congo, Dem. Rep.; Eritrea; Ethiopia; Gambia, The; Guinea-Bissau; Korea, Dem. People's Rep.; Liberia; Madagascar; Malawi; Mali; Mozambique; Niger; Rwanda; Sierra Leone; Somalia; South Sudan; Sudan; Syrian Arab Republic; Togo; Uganda; Yemen, Rep. ;\",\"Angola; Bangladesh; Benin; Bhutan; Bolivia; Cabo Verde; Cambodia; Cameroon; Comoros; Congo, Rep.; Côte d’Ivoire; Djibouti; Egypt, Arab Rep.; Eswatini; Ghana; Guinea; Haiti; Honduras; India; Jordan; Kenya; Kiribati; Kyrgyz Republic; Lao PDR; Lebanon; Lesotho; Mauritania; Micronesia, Fed. Sts.; Morocco; Myanmar; Nepal; Nicaragua; Nigeria; Pakistan; Papua New Guinea; Philippines; Samoa; São Tomé and Príncipe; Senegal; Solomon Islands; Sri Lanka; Tajikistan; Tanzania; Timor-Leste; Tunisia; Uzbekistan; Vanuatu; Vietnam; West Bank and Gaza; Zambia; Zimbabwe ;\",\"Algeria; Bahrain; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Algeria; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Jordan; Lebanon; Libya; Morocco; Syrian Arab Republic; Tunisia; Yemen, Rep. ;\",\"Algeria; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Jordan; Lebanon; Libya; Morocco; Syrian Arab Republic; Tunisia; West Bank and Gaza; Yemen, Rep. ;\",\"Albania; Algeria; Angola; Argentina; Armenia; Azerbaijan; Bangladesh; Belarus; Belize; Benin; Bhutan; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; Cabo Verde; Cambodia; Cameroon; China; Colombia; Comoros; Congo, Rep.; Costa Rica; Côte d’Ivoire; Cuba; Djibouti; Dominica; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Eswatini; Fiji; Gabon; Georgia; Ghana; Grenada; Guatemala; Guinea; Haiti; Honduras; India; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Jordan; Kazakhstan; Kenya; Kiribati; Kosovo; Kyrgyz Republic; Lao PDR; Lebanon; Lesotho; Libya; Malaysia; Maldives; Marshall Islands; Mauritania; Mauritius; Mexico; Micronesia, Fed. Sts.; Moldova; Mongolia; Montenegro; Morocco; Myanmar; Namibia; Nepal; Nicaragua; Nigeria; North Macedonia; Pakistan; Papua New Guinea; Paraguay; Peru; Philippines; Samoa; São Tomé and Príncipe; Senegal; Serbia; Solomon Islands; South Africa; Sri Lanka; St. Lucia; St. Vincent and the Grenadines; Suriname; Tajikistan; Tanzania; Thailand; Timor-Leste; Tonga; Tunisia; Türkiye; Turkmenistan; Tuvalu; Ukraine; Uzbekistan; Vanuatu; Vietnam; West Bank and Gaza; Zambia; Zimbabwe ;\",\"Bermuda; Canada; United States ;\",\"Australia; Austria; Belgium; Canada; Chile; Colombia; Costa Rica; Czechia; Denmark; Estonia; Finland; France; Germany; Greece; Hungary; Iceland; Ireland; Israel; Italy; Japan; Korea, Rep.; Latvia; Lithuania; Luxembourg; Mexico; Netherlands; New Zealand; Norway; Poland; Portugal; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Türkiye; United Kingdom; United States ;\",\"Bahrain; Bhutan; Brunei Darussalam; Cabo Verde; Comoros; Cyprus; Djibouti; Estonia; Eswatini; Iceland; Maldives; Malta; Mauritius; Montenegro; San Marino; São Tomé and Príncipe; Seychelles; Timor-Leste ;\",\"Fiji; Kiribati; Marshall Islands; Micronesia, Fed. Sts.; Nauru; Palau; Samoa; Solomon Islands; Tonga; Tuvalu; Vanuatu ;\",\"Antigua and Barbuda; Australia; Austria; Barbados; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Canada; Croatia; Cuba; Czechia; Denmark; Finland; France; Germany; Greece; Hong Kong SAR, China; Hungary; Italy; Japan; Korea, Rep.; Lithuania; Luxembourg; Macao SAR, China; Malta; Netherlands; New Zealand; Norway; Portugal; Singapore; Slovenia; Spain; Sweden; Switzerland; Ukraine; United Kingdom; United States ;\",\"Afghanistan; Angola; Benin; Burkina Faso; Burundi; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Gambia, The; Guinea; Guinea-Bissau; Iraq; Kenya; Liberia; Madagascar; Malawi; Mali; Mauritania; Mozambique; Niger; Nigeria; Senegal; Sierra Leone; Somalia; South Sudan; Sudan; Tanzania; Timor-Leste; Togo; Uganda; Zambia ;\",\"Antigua and Barbuda; Bahamas, The; Bahrain; Barbados; Belize; Bhutan; Brunei Darussalam; Cabo Verde; Comoros; Cyprus; Djibouti; Dominica; Estonia; Eswatini; Fiji; Grenada; Guyana; Iceland; Kiribati; Maldives; Malta; Marshall Islands; Mauritius; Micronesia, Fed. Sts.; Montenegro; Nauru; Palau; Samoa; San Marino; São Tomé and Príncipe; Seychelles; Solomon Islands; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname; Timor-Leste; Tonga; Tuvalu; Vanuatu ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\",\"Albania; Algeria; Argentina; Armenia; Azerbaijan; Belarus; Belize; Bosnia and Herzegovina; Botswana; Brazil; China; Colombia; Costa Rica; Cuba; Dominica; Dominican Republic; Ecuador; El Salvador; Equatorial Guinea; Fiji; Gabon; Georgia; Grenada; Guatemala; Indonesia; Iran, Islamic Rep.; Iraq; Jamaica; Kazakhstan; Kosovo; Libya; Malaysia; Maldives; Marshall Islands; Mauritius; Mexico; Moldova; Mongolia; Montenegro; Namibia; North Macedonia; Paraguay; Peru; Serbia; South Africa; St. Lucia; St. Vincent and the Grenadines; Suriname; Thailand; Tonga; Türkiye; Turkmenistan; Tuvalu; Ukraine ;\",\"Afghanistan; Albania; Algeria; American Samoa; Andorra; Angola; Antigua and Barbuda; Argentina; Armenia; Aruba; Australia; Austria; Azerbaijan; Bahamas, The; Bahrain; Bangladesh; Barbados; Belarus; Belgium; Belize; Benin; Bermuda; Bhutan; Bolivia; Bosnia and Herzegovina; Botswana; Brazil; British Virgin Islands; Brunei Darussalam; Bulgaria; Burkina Faso; Burundi; Cabo Verde; Cambodia; Cameroon; Canada; Cayman Islands; Central African Republic; Chad; Channel Islands; Chile; China; Colombia; Comoros; Congo, Dem. Rep.; Congo, Rep.; Costa Rica; Côte d’Ivoire; Croatia; Cuba; Curaçao; Cyprus; Czechia; Denmark; Djibouti; Dominica; Dominican Republic; Ecuador; Egypt, Arab Rep.; El Salvador; Equatorial Guinea; Eritrea; Estonia; Eswatini; Ethiopia; Faroe Islands; Fiji; Finland; France; French Polynesia; Gabon; Gambia, The; Georgia; Germany; Ghana; Gibraltar; Greece; Greenland; Grenada; Guam; Guatemala; Guinea; Guinea-Bissau; Guyana; Haiti; Honduras; Hong Kong SAR, China; Hungary; Iceland; India; Indonesia; Iran, Islamic Rep.; Iraq; Ireland; Isle of Man; Israel; Italy; Jamaica; Japan; Jordan; Kazakhstan; Kenya; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Kosovo; Kuwait; Kyrgyz Republic; Lao PDR; Latvia; Lebanon; Lesotho; Liberia; Libya; Liechtenstein; Lithuania; Luxembourg; Macao SAR, China; Madagascar; Malawi; Malaysia; Maldives; Mali; Malta; Marshall Islands; Mauritania; Mauritius; Mexico; Micronesia, Fed. Sts.; Moldova; Monaco; Mongolia; Montenegro; Morocco; Mozambique; Myanmar; Namibia; Nauru; Nepal; Netherlands; New Caledonia; New Zealand; Nicaragua; Niger; Nigeria; North Macedonia; Northern Mariana Islands; Norway; Oman; Pakistan; Palau; Panama; Papua New Guinea; Paraguay; Peru; Philippines; Poland; Portugal; Puerto Rico; Qatar; Romania; Russian Federation; Rwanda; Samoa; San Marino; São Tomé and Príncipe; Saudi Arabia; Senegal; Serbia; Seychelles; Sierra Leone; Singapore; Sint Maarten (Dutch part); Slovak Republic; Slovenia; Solomon Islands; Somalia; South Africa; South Sudan; Spain; Sri Lanka; St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Sudan; Suriname; Sweden; Switzerland; Syrian Arab Republic; Taiwan, China; Tajikistan; Tanzania; Thailand; Timor-Leste; Togo; Tonga; Trinidad and Tobago; Tunisia; Türkiye; Turkmenistan; Turks and Caicos Islands; Tuvalu; Uganda; Ukraine; United Arab Emirates; United Kingdom; United States; Uruguay; Uzbekistan; Vanuatu; Venezuela, RB; Vietnam; Virgin Islands (U.S.); West Bank and Gaza; Yemen, Rep.; Zambia; Zimbabwe ;\"],[26,22,22,11,11,62,38,23,22,20,58,23,18,27,39,39,86,68,145,17,60,77,54,42,31,23,45,131,26,51,21,12,13,105,3,38,18,11,38,37,40,8,8,48,48,47,54,218]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>WB_Group_Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"WB_Group_Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n***\n\n`WB_Group_Name` in the \"compositions\" file contains all available groups. They are not restricted to regional groups because they are formed by economical and political criteria as well. There is no 1:1 match, because almost all countries belong to two or more groups. There are **48 groups with a total of 2084 elements**.\n\n::::\n:::::\n\n###### Region1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-wb-class-regional}\n: Groups formed by regional criteria (without the redundant `World` region)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_reg <- c(\"AFE\", \"AFW\", \"ARB\", \"CSS\", \"CEB\",\n             \"EAS\", \"ECS\", \"LCN\", \"MEA\", \"NAC\",\n             \"OSS\", \"PSS\", \"SST\", \"SAS\", \"SSF\")\n\ndf_wb_reg <-  base::readRDS(\"data/country-class/wb_class_compositions.rds\") |> \n  dplyr::filter(WB_Group_Code %in% str_reg)\n\n(\n    wb_class_reg <- class_scheme(\n            df = df_wb_reg,\n            sel1 = rlang::quo(`WB_Country_Name`),\n            sel2 = rlang::quo(`WB_Group_Name`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-53c96dc3385bd90d3bd8\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-53c96dc3385bd90d3bd8\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\"],[\"Africa Eastern and Southern\",\"Africa Western and Central\",\"Arab World\",\"Caribbean small states\",\"Central Europe and the Baltics\",\"East Asia &amp; Pacific\",\"Europe &amp; Central Asia\",\"Latin America &amp; Caribbean\",\"Middle East &amp; North Africa\",\"North America\",\"Other small states\",\"Pacific island small states\",\"Small states (SST)\",\"South Asia\",\"Sub-Saharan Africa\"],[\"Angola; Botswana; Burundi; Comoros; Congo, Dem. Rep.; Eritrea; Eswatini; Ethiopia; Kenya; Lesotho; Madagascar; Malawi; Mauritius; Mozambique; Namibia; Rwanda; São Tomé and Príncipe; Seychelles; Somalia; South Africa; South Sudan; Sudan; Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Benin; Burkina Faso; Cabo Verde; Cameroon; Central African Republic; Chad; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Algeria; Bahrain; Comoros; Djibouti; Egypt, Arab Rep.; Iraq; Jordan; Kuwait; Lebanon; Libya; Mauritania; Morocco; Oman; Qatar; Saudi Arabia; Somalia; Sudan; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Antigua and Barbuda; Bahamas, The; Barbados; Belize; Dominica; Grenada; Guyana; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname ;\",\"Bulgaria; Croatia; Czechia; Estonia; Hungary; Latvia; Lithuania; Poland; Romania; Slovak Republic; Slovenia ;\",\"American Samoa; Australia; Brunei Darussalam; Cambodia; China; Fiji; French Polynesia; Guam; Hong Kong SAR, China; Indonesia; Japan; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Lao PDR; Macao SAR, China; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; New Caledonia; New Zealand; Northern Mariana Islands; Palau; Papua New Guinea; Philippines; Samoa; Singapore; Solomon Islands; Taiwan, China; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Albania; Andorra; Armenia; Austria; Azerbaijan; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Channel Islands; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Georgia; Germany; Gibraltar; Greece; Greenland; Hungary; Iceland; Ireland; Isle of Man; Italy; Kazakhstan; Kosovo; Kyrgyz Republic; Latvia; Liechtenstein; Lithuania; Luxembourg; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Romania; Russian Federation; San Marino; Serbia; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Turkmenistan; Ukraine; United Kingdom; Uzbekistan ;\",\"Antigua and Barbuda; Argentina; Aruba; Bahamas, The; Barbados; Belize; Bolivia; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Sint Maarten (Dutch part); St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Turks and Caicos Islands; Uruguay; Venezuela, RB; Virgin Islands (U.S.) ;\",\"Algeria; Bahrain; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Bermuda; Canada; United States ;\",\"Bahrain; Bhutan; Brunei Darussalam; Cabo Verde; Comoros; Cyprus; Djibouti; Estonia; Eswatini; Iceland; Maldives; Malta; Mauritius; Montenegro; San Marino; São Tomé and Príncipe; Seychelles; Timor-Leste ;\",\"Fiji; Kiribati; Marshall Islands; Micronesia, Fed. Sts.; Nauru; Palau; Samoa; Solomon Islands; Tonga; Tuvalu; Vanuatu ;\",\"Antigua and Barbuda; Bahamas, The; Bahrain; Barbados; Belize; Bhutan; Brunei Darussalam; Cabo Verde; Comoros; Cyprus; Djibouti; Dominica; Estonia; Eswatini; Fiji; Grenada; Guyana; Iceland; Kiribati; Maldives; Malta; Marshall Islands; Mauritius; Micronesia, Fed. Sts.; Montenegro; Nauru; Palau; Samoa; San Marino; São Tomé and Príncipe; Seychelles; Solomon Islands; St. Kitts and Nevis; St. Lucia; St. Vincent and the Grenadines; Suriname; Timor-Leste; Tonga; Tuvalu; Vanuatu ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\"],[26,22,22,11,11,38,58,42,21,3,18,11,40,8,48]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>WB_Group_Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"WB_Group_Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n***\n\nBrowsing through the `composition` data I have defined 15 `WB_GROUP_CODE`s as regional codes. These regional classification criteria results per definition to **15 regions containing 379 countries**.\n\n::::\n:::::\n\n###### Region2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-wb-class-regional}\n: Groups formed by regional criteria (without the redundant `World` region)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_reg2 <- c(\"AFE\", \"AFW\", \"ARB\", \"CEB\",\n             \"EAS\", \"ECS\", \"LCN\", \"MEA\", \"NAC\",\n             \"SAS\", \"SSF\")\n\ndf_wb_reg2 <-  base::readRDS(\"data/country-class/wb_class_compositions.rds\") |> \n  dplyr::filter(WB_Group_Code %in% str_reg2)\n\n(\n    wb_class_reg2 <- class_scheme(\n            df = df_wb_reg2,\n            sel1 = rlang::quo(`WB_Country_Name`),\n            sel2 = rlang::quo(`WB_Group_Name`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1ae42357fba41ab9e6c7\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1ae42357fba41ab9e6c7\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\"],[\"Africa Eastern and Southern\",\"Africa Western and Central\",\"Arab World\",\"Central Europe and the Baltics\",\"East Asia &amp; Pacific\",\"Europe &amp; Central Asia\",\"Latin America &amp; Caribbean\",\"Middle East &amp; North Africa\",\"North America\",\"South Asia\",\"Sub-Saharan Africa\"],[\"Angola; Botswana; Burundi; Comoros; Congo, Dem. Rep.; Eritrea; Eswatini; Ethiopia; Kenya; Lesotho; Madagascar; Malawi; Mauritius; Mozambique; Namibia; Rwanda; São Tomé and Príncipe; Seychelles; Somalia; South Africa; South Sudan; Sudan; Tanzania; Uganda; Zambia; Zimbabwe ;\",\"Benin; Burkina Faso; Cabo Verde; Cameroon; Central African Republic; Chad; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Senegal; Sierra Leone; Togo ;\",\"Algeria; Bahrain; Comoros; Djibouti; Egypt, Arab Rep.; Iraq; Jordan; Kuwait; Lebanon; Libya; Mauritania; Morocco; Oman; Qatar; Saudi Arabia; Somalia; Sudan; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Bulgaria; Croatia; Czechia; Estonia; Hungary; Latvia; Lithuania; Poland; Romania; Slovak Republic; Slovenia ;\",\"American Samoa; Australia; Brunei Darussalam; Cambodia; China; Fiji; French Polynesia; Guam; Hong Kong SAR, China; Indonesia; Japan; Kiribati; Korea, Dem. People's Rep.; Korea, Rep.; Lao PDR; Macao SAR, China; Malaysia; Marshall Islands; Micronesia, Fed. Sts.; Mongolia; Myanmar; Nauru; New Caledonia; New Zealand; Northern Mariana Islands; Palau; Papua New Guinea; Philippines; Samoa; Singapore; Solomon Islands; Taiwan, China; Thailand; Timor-Leste; Tonga; Tuvalu; Vanuatu; Vietnam ;\",\"Albania; Andorra; Armenia; Austria; Azerbaijan; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Channel Islands; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Georgia; Germany; Gibraltar; Greece; Greenland; Hungary; Iceland; Ireland; Isle of Man; Italy; Kazakhstan; Kosovo; Kyrgyz Republic; Latvia; Liechtenstein; Lithuania; Luxembourg; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Romania; Russian Federation; San Marino; Serbia; Slovak Republic; Slovenia; Spain; Sweden; Switzerland; Tajikistan; Türkiye; Turkmenistan; Ukraine; United Kingdom; Uzbekistan ;\",\"Antigua and Barbuda; Argentina; Aruba; Bahamas, The; Barbados; Belize; Bolivia; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Grenada; Guatemala; Guyana; Haiti; Honduras; Jamaica; Mexico; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Sint Maarten (Dutch part); St. Kitts and Nevis; St. Lucia; St. Martin (French part); St. Vincent and the Grenadines; Suriname; Trinidad and Tobago; Turks and Caicos Islands; Uruguay; Venezuela, RB; Virgin Islands (U.S.) ;\",\"Algeria; Bahrain; Djibouti; Egypt, Arab Rep.; Iran, Islamic Rep.; Iraq; Israel; Jordan; Kuwait; Lebanon; Libya; Malta; Morocco; Oman; Qatar; Saudi Arabia; Syrian Arab Republic; Tunisia; United Arab Emirates; West Bank and Gaza; Yemen, Rep. ;\",\"Bermuda; Canada; United States ;\",\"Afghanistan; Bangladesh; Bhutan; India; Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Angola; Benin; Botswana; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo, Dem. Rep.; Congo, Rep.; Côte d’Ivoire; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; Gabon; Gambia, The; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mozambique; Namibia; Niger; Nigeria; Rwanda; São Tomé and Príncipe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Tanzania; Togo; Uganda; Zambia; Zimbabwe ;\"],[26,22,22,11,38,58,42,21,3,8,48]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>WB_Group_Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"WB_Group_Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n***\n\nBrowsing through the `composition` data I have declassified all small states for an alternative regional group. These regional classification criteria are smaller and results to **11 regions containing 299 countries**.\n\n::::\n:::::\n\n\n\n:::\n\n::::\n:::::\n\n##### Description of the four tabs\n\n1. **WB economies** displays the \"List of Economies\" and has five columns:\n    -   `Economy` with the country names (2-219) and regional names\n        (221-268)\n    -   `Code` with the ISO alpha3 codes for countries (2-219) and for\n        the regional names (221-268)\n    -   `Region` with seven different regional names:\n        -   East Asia and Pacific,\n        -   Europe and Central Asia,\n        -   Latin America & the Caribbean,\n        -   Middle East and North Africa,\n        -   North America\n        -   South Asia and\n        -   Sub-Saharan Africa\n    -   `Income group` with four groups: Low income, Lower middle\n        income, Higher middle income, and High income.\n    -   `Lending category` with three groups: `IBRD`, `Blend`, and\n        `IDA`.\n2.  **WB compositions** has four columns: `WB_Group_Code`, `WB_Group_Name`,\n    `WB_Country_Code`, `WB_Country_Name`. The 2084 rows are combinations\n    of the regional and income group with their ISO alpha 3 codes and\n    country names.\n3. **WB Standard** shows the World Bank seven standard regional groups with their countries. The 218 countries  involved in the taxonomy of the World Bank consists of all member countries of the World Bank (189) and other economies with populations of more than 30,000 (29).\n4. **WB All** includes the seven regions from the \"WB Standard\" tab but much more. But it is important to note that there is no alternative *regional* structure comprises systematically all countries of the world --- the overall category \"World\" obviously excluded. \n    - Five of the seven regional groups of \"WB Standard\" are also clustered without high income countries. \n    - There are six other regional subcategories: \"Arab World\", \"Caribbean small states\", \"Central Europe and Baltics\", \"Other small states\", \"Pacific island small states\", \"Small states\". \n    - Additionally there are some political groups like European Union, OECD and \n    - several economical classification like \"Euro area\", \n    - different combinations of the four income groups and \n    different combinations of the three lending statuses.\n    \n**More details**\n\nThe cut off limits for the income groups are: \n\n- low income, $1,145 or less; \n- lower middle income, $1,146  to $4,515; \n- upper middle income, $4,516 to $14,005; and \n- high income, more than $14,005. \n\nThe effective operational cutoff for <a class='glossary' title='The International Development Association (IDA) is the part of the World Bank that helps the world’s low-income countries. IDA’s grants and low-interest loans help countries invest in their futures, improve lives, and create safer, more prosperous communities around the world. (https://ida.worldbank.org/en/what-is-ida)'>IDA</a> eligibility is $1,335 or less. The three lending categories and their relation to each other are:\n\n> <a class='glossary' title='The International Development Association (IDA) is the part of the World Bank that helps the world’s low-income countries. IDA’s grants and low-interest loans help countries invest in their futures, improve lives, and create safer, more prosperous communities around the world. (https://ida.worldbank.org/en/what-is-ida)'>IDA</a> countries are those that lack the financial ability to borrow from <a class='glossary' title='The International Bank for Reconstruction and Development (IBRD) is a global development cooperative owned by 189 member countries. As the largest development bank in the world, it supports the World Bank Group’s mission by providing loans, guarantees, risk management products, and advisory services to middle-income and creditworthy low-income countries, as well as by coordinating responses to regional and global challenges. (https://www.worldbank.org/en/who-we-are/ibrd)'>IBRD</a>. IDA credits are deeply concessional—interest-free loans and grants for programs aimed at boosting economic growth and improving living conditions. IBRD loans are non-concessional. `Blend` countries are eligible for IDA credits because of their low per capita incomes but are also eligible for IBRD because they are financially creditworthy.\n\nThree additional remark relating to the `Notes` sheet: \n\n1. In the `Notes` I found the sentence: \"Geographic classifications in this table cover all income levels.\" But there is a difference of one missing data value more in the `Income group` column compared with the `Region` column (50:49). The reason is that `Venezuela RB` is lacking an income group because it has been temporarily unclassified since July 2021 pending release of revised national accounts statistics. Venezuela, RB was classified as an upper-middle income country until FY21, has been unclassified since then due to the unavailability of data. But it is now again classified as `Upper middle income` (See the World Bank [page about Venezuela, RB](https://archive.doingbusiness.org/en/data/exploreeconomies/venezuela)).\n\n2. The term country, used interchangeably with economy, does not imply political independence but refers to any territory for which authorities report separate social or economic statistics. \n\n3. What follows is a quote about some details of the income classifications for the 2023 file:\n\n> Set on 1 July 2022 remain in effect until 1 July 2023. Venezuela has been temporarily unclassified since July 2021 pending release of revised national accounts statistics. Argentina, which was temporarily unclassified in July 2016 pending release of revised national accounts statistics, was classified as upper middle income for FY17 as of 29 September 2016 based on alternative conversion factors. Also effective 29 September 2016, Syrian Arab Republic is reclassified from IBRD lending category to IDA-only. On 29 March 2017, new country codes were introduced to align World Bank 3-letter codes with ISO 3-letter codes: Andorra (AND), Dem. Rep. Congo (COD), Isle of Man (IMN), Kosovo (XKX), Romania (ROU), Timor-Leste (TLS), and West Bank and Gaza (PSE). It is to be noted that Venezuela, RB classified as an upper-middle income country until FY21, has been unclassified since then due to the unavailability of data.\n\n##### Summary {#sec-80-wb-summary}\n\nThe only missing data in the columns `Economy` and `Code` corresponds to the empty line #220 that separates the country codes from the regional codes. The missing data in the other columns stem from the different structure of the second part (starting with row #221) of the data, which consists only of the two columns 'Economy' and 'Code'. \n\nEssentially this means that we have in the `CLASS.xslx` file two different data sets: One for economies and the other one to explicate regional, economical and political grouping codes. In the Excel sheet `compositions` you will find an extended list of all available group names and their three letter codes combined with the country names and their three letter codes. These group names comprise different kinds of regional groups but also names and codes for different combination of country incomes and lending categories.\n\nAll these groups may be of interests for analysis of different trends. But the regional (sub)groups of the `compositions` sheet do not add up to the complete number of countries (218). This is in contrast to the different regional groups of the WID database because all their regional groups (region1 = 5, region2 = 18, region4 = 10, and region5 = 8 groups) includes all countries (in this case: 216).\n\nThe World Bank file `CLASS.xslx` classifies all World Bank member countries (189), and all other economies with populations of more than 30,000 (29) in a coarse grid of only seven regions. For operational and analytical purposes, these economies are divided among income groups according to their [gross national income (GNI) per capita](https://datahelpdesk.worldbank.org/knowledgebase/articles/378831-why-use-gni-per-capita-to-classify-economies-into) in 2023, calculated using the [World Bank Atlas method](https://datahelpdesk.worldbank.org/knowledgebase/articles/378832-what-is-the-world-bank-atlas-method). \n\n\n#### United Nations {#sec-80-inspect-unsd}\n\n\n\n::: {.my-code-collection}\n:::: {.my-code-collection-header}\n::::: {.my-code-collection-icon}\n:::::\n:::::: {#exm-inspect-unsd}\n: Inspect UNSD-M49 geoscheme classification\n::::::\n\n::::\n\n::::{.my-code-collection-container}\n\n::: {.panel-tabset}\n\n###### raw\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-inspect-unsd-m49}\n: Inspect UNSD M49 geoscheme classification\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunsd_class <- base::readRDS(\"data/country-class/unsd_class.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(unsd_class)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(unsd_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |unsd_class |\n|Number of rows           |249        |\n|Number of columns        |15         |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |15         |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable                           | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Global Code                             |         0|          1.00|   3|   3|     0|        1|          0|\n|Global Name                             |         0|          1.00|   5|   5|     0|        1|          0|\n|Region Code                             |         1|          1.00|   3|   3|     0|        5|          0|\n|Region Name                             |         1|          1.00|   4|   8|     0|        5|          0|\n|Sub-region Code                         |         1|          1.00|   3|   3|     0|       17|          0|\n|Sub-region Name                         |         1|          1.00|   9|  31|     0|       17|          0|\n|Intermediate Region Code                |       141|          0.43|   3|   3|     0|        8|          0|\n|Intermediate Region Name                |       141|          0.43|   9|  15|     0|        8|          0|\n|Country or Area                         |         0|          1.00|   4|  52|     0|      249|          0|\n|M49 Code                                |         0|          1.00|   3|   3|     0|      249|          0|\n|ISO-alpha2 Code                         |         2|          0.99|   2|   2|     0|      247|          0|\n|ISO-alpha3 Code                         |         1|          1.00|   3|   3|     0|      248|          0|\n|Least Developed Countries (LDC)         |       203|          0.18|   1|   1|     0|        1|          0|\n|Land Locked Developing Countries (LLDC) |       217|          0.13|   1|   1|     0|        1|          0|\n|Small Island Developing States (SIDS)   |       196|          0.21|   1|   1|     0|        1|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 249\n#> Columns: 15\n#> $ `Global Code`                             <chr> \"001\", \"001\", \"001\", \"001\", …\n#> $ `Global Name`                             <chr> \"World\", \"World\", \"World\", \"…\n#> $ `Region Code`                             <chr> \"002\", \"002\", \"002\", \"002\", …\n#> $ `Region Name`                             <chr> \"Africa\", \"Africa\", \"Africa\"…\n#> $ `Sub-region Code`                         <chr> \"015\", \"015\", \"015\", \"015\", …\n#> $ `Sub-region Name`                         <chr> \"Northern Africa\", \"Northern…\n#> $ `Intermediate Region Code`                <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Intermediate Region Name`                <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Country or Area`                         <chr> \"Algeria\", \"Egypt\", \"Libya\",…\n#> $ `M49 Code`                                <chr> \"012\", \"818\", \"434\", \"504\", …\n#> $ `ISO-alpha2 Code`                         <chr> \"DZ\", \"EG\", \"LY\", \"MA\", \"SD\"…\n#> $ `ISO-alpha3 Code`                         <chr> \"DZA\", \"EGY\", \"LBY\", \"MAR\", …\n#> $ `Least Developed Countries (LDC)`         <chr> NA, NA, NA, NA, \"x\", NA, NA,…\n#> $ `Land Locked Developing Countries (LLDC)` <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Small Island Developing States (SIDS)`   <chr> NA, NA, NA, NA, NA, NA, NA, …\n```\n\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n\n###### clean \n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-clean-unsc-m49}\n: Clean UNSD M49 geoscheme classification\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## column renaming vector ########\nm49_cols = c(\n  region_c = \"Region Code\", region_n = \"Region Name\",\n  subr_c = \"Sub-region Code\", subr_n = \"Sub-region Name\", \n  midr_c = \"Intermediate Region Code\", midr_n = \"Intermediate Region Name\",\n  country = \"Country or Area\", m49 = \"M49 Code\", \n  iso2 = \"ISO-alpha2 Code\", iso3 = \"ISO-alpha3 Code\",\n  ldc = \"Least Developed Countries (LDC)\", \n  lldc = \"Land Locked Developing Countries (LLDC)\", \n  sids = \"Small Island Developing States (SIDS)\"\n  )\n  \n## clean data ###############################\nunsd_class <- base::readRDS(\"data/country-class/unsd_class.rds\")\nunsd_class_clean <- unsd_class |> \n  dplyr::select(-(1:2)) |> \n  dplyr::rename(tidyselect::all_of(m49_cols)) |> \n  dplyr::filter(country != \"Antarctica\") |> \n  dplyr::mutate(iso2 = base::ifelse(country == \"Namibia\", \"NA\", iso2)) |> \n  dplyr::relocate(country, .before = region_c) |> \n  # .x = anonymous function; \"x\" = value in cols of unsd_class\n  dplyr::mutate(dplyr::across(\n    ldc:sids, ~ dplyr::if_else(.x == \"x\", \"1\", \"999\", \"0\") \n    )) |> \n  dplyr::arrange(country)\n\n## save new tibble ##########\npb_save_data_file(\n  \"country-class\",\n  unsd_class_clean,\n  \"unsd_class_clean.rds\"\n)\n\n\n## prepare skimmers ##########\nmy_skim <- skimr::skim_with(\n  character = skimr::sfl(\n    whitespace = NULL,\n    min = NULL,\n    max = NULL,\n    empty = NULL\n    )\n)\n\n\n## display results ##########\nunsd_class <- base::readRDS(\"data/country-class/unsd_class.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nmy_skim(unsd_class_clean) |> dplyr::select(-complete_rate)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(unsd_class_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                 |\n|:------------------------|:----------------|\n|Name                     |unsd_class_clean |\n|Number of rows           |248              |\n|Number of columns        |13               |\n|_______________________  |                 |\n|Column type frequency:   |                 |\n|character                |13               |\n|________________________ |                 |\n|Group variables          |None             |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| n_unique|\n|:-------------|---------:|--------:|\n|country       |         0|      248|\n|region_c      |         0|        5|\n|region_n      |         0|        5|\n|subr_c        |         0|       17|\n|subr_n        |         0|       17|\n|midr_c        |       140|        8|\n|midr_n        |       140|        8|\n|m49           |         0|      248|\n|iso2          |         1|      247|\n|iso3          |         1|      247|\n|ldc           |         0|        2|\n|lldc          |         0|        2|\n|sids          |         0|        2|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 248\n#> Columns: 13\n#> $ country  <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"American Samoa\", \"Andor…\n#> $ region_c <chr> \"142\", \"150\", \"002\", \"009\", \"150\", \"002\", \"019\", \"019\", \"019\"…\n#> $ region_n <chr> \"Asia\", \"Europe\", \"Africa\", \"Oceania\", \"Europe\", \"Africa\", \"A…\n#> $ subr_c   <chr> \"034\", \"039\", \"015\", \"061\", \"039\", \"202\", \"419\", \"419\", \"419\"…\n#> $ subr_n   <chr> \"Southern Asia\", \"Southern Europe\", \"Northern Africa\", \"Polyn…\n#> $ midr_c   <chr> NA, NA, NA, NA, NA, \"017\", \"029\", \"029\", \"005\", NA, \"029\", NA…\n#> $ midr_n   <chr> NA, NA, NA, NA, NA, \"Middle Africa\", \"Caribbean\", \"Caribbean\"…\n#> $ m49      <chr> \"004\", \"008\", \"012\", \"016\", \"020\", \"024\", \"660\", \"028\", \"032\"…\n#> $ iso2     <chr> \"AF\", \"AL\", \"DZ\", \"AS\", \"AD\", \"AO\", \"AI\", \"AG\", \"AR\", \"AM\", \"…\n#> $ iso3     <chr> \"AFG\", \"ALB\", \"DZA\", \"ASM\", \"AND\", \"AGO\", \"AIA\", \"ATG\", \"ARG\"…\n#> $ ldc      <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"…\n#> $ lldc     <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"…\n#> $ sids     <chr> \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"1\", \"1\", \"0\", \"0\", \"1\", \"0\", \"…\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n::::\n:::::\n\n###### Region\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ID-text}\n: Numbered R Code Title\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_unsd <-  base::readRDS(\"data/country-class/unsd_class_clean.rds\")\n\n(\n    unsd_class1 <- class_scheme(\n            df = df_unsd,\n            sel1 = rlang::quo(`country`),\n            sel2 = rlang::quo(`region_n`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-0d9ae3fe9ba79b134895\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0d9ae3fe9ba79b134895\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[\"Africa\",\"Americas\",\"Asia\",\"Europe\",\"Oceania\"],[\"Algeria; Angola; Benin; Botswana; British Indian Ocean Territory; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Djibouti; Egypt; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; French Southern Territories; Gabon; Gambia; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Libya; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mayotte; Morocco; Mozambique; Namibia; Niger; Nigeria; Rwanda; Réunion; Saint Helena; Sao Tome and Principe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Togo; Tunisia; Uganda; United Republic of Tanzania; Western Sahara; Zambia; Zimbabwe ;\",\"Anguilla; Antigua and Barbuda; Argentina; Aruba; Bahamas; Barbados; Belize; Bermuda; Bolivia (Plurinational State of); Bonaire, Sint Eustatius and Saba; Bouvet Island; Brazil; British Virgin Islands; Canada; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Falkland Islands (Malvinas); French Guiana; Greenland; Grenada; Guadeloupe; Guatemala; Guyana; Haiti; Honduras; Jamaica; Martinique; Mexico; Montserrat; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Pierre and Miquelon; Saint Vincent and the Grenadines; Sint Maarten (Dutch part); South Georgia and the South Sandwich Islands; Suriname; Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands; United States of America; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Afghanistan; Armenia; Azerbaijan; Bahrain; Bangladesh; Bhutan; Brunei Darussalam; Cambodia; China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Cyprus; Democratic People's Republic of Korea; Georgia; India; Indonesia; Iran (Islamic Republic of); Iraq; Israel; Japan; Jordan; Kazakhstan; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Malaysia; Maldives; Mongolia; Myanmar; Nepal; Oman; Pakistan; Philippines; Qatar; Republic of Korea; Saudi Arabia; Singapore; Sri Lanka; State of Palestine; Syrian Arab Republic; Tajikistan; Thailand; Timor-Leste; Turkmenistan; Türkiye; United Arab Emirates; Uzbekistan; Viet Nam; Yemen ;\",\"Albania; Andorra; Austria; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Guernsey; Holy See; Hungary; Iceland; Ireland; Isle of Man; Italy; Jersey; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Republic of Moldova; Romania; Russian Federation; San Marino; Sark; Serbia; Slovakia; Slovenia; Spain; Svalbard and Jan Mayen Islands; Sweden; Switzerland; Ukraine; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Australia; Christmas Island; Cocos (Keeling) Islands; Cook Islands; Fiji; French Polynesia; Guam; Heard Island and McDonald Islands; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; New Caledonia; New Zealand; Niue; Norfolk Island; Northern Mariana Islands; Palau; Papua New Guinea; Pitcairn; Samoa; Solomon Islands; Tokelau; Tonga; Tuvalu; United States Minor Outlying Islands; Vanuatu; Wallis and Futuna Islands ;\"],[60,57,50,52,29]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>region_n<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"region_n\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n###### Sub-region\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ID-text}\n: Numbered R Code Title\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_unsd <-  base::readRDS(\"data/country-class/unsd_class_clean.rds\")\n\n(\n    unsd_class2 <- class_scheme(\n            df = df_unsd,\n            sel1 = rlang::quo(`country`),\n            sel2 = rlang::quo(`subr_n`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-052098de61dee12aa829\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-052098de61dee12aa829\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\"],[\"Australia and New Zealand\",\"Central Asia\",\"Eastern Asia\",\"Eastern Europe\",\"Latin America and the Caribbean\",\"Melanesia\",\"Micronesia\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"Polynesia\",\"South-eastern Asia\",\"Southern Asia\",\"Southern Europe\",\"Sub-Saharan Africa\",\"Western Asia\",\"Western Europe\"],[\"Australia; Christmas Island; Cocos (Keeling) Islands; Heard Island and McDonald Islands; New Zealand; Norfolk Island ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Turkmenistan; Uzbekistan ;\",\"China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Democratic People's Republic of Korea; Japan; Mongolia; Republic of Korea ;\",\"Belarus; Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Anguilla; Antigua and Barbuda; Argentina; Aruba; Bahamas; Barbados; Belize; Bolivia (Plurinational State of); Bonaire, Sint Eustatius and Saba; Bouvet Island; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Falkland Islands (Malvinas); French Guiana; Grenada; Guadeloupe; Guatemala; Guyana; Haiti; Honduras; Jamaica; Martinique; Mexico; Montserrat; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); South Georgia and the South Sandwich Islands; Suriname; Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Fiji; New Caledonia; Papua New Guinea; Solomon Islands; Vanuatu ;\",\"Guam; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; Northern Mariana Islands; Palau; United States Minor Outlying Islands ;\",\"Algeria; Egypt; Libya; Morocco; Sudan; Tunisia; Western Sahara ;\",\"Bermuda; Canada; Greenland; Saint Pierre and Miquelon; United States of America ;\",\"Denmark; Estonia; Faroe Islands; Finland; Guernsey; Iceland; Ireland; Isle of Man; Jersey; Latvia; Lithuania; Norway; Sark; Svalbard and Jan Mayen Islands; Sweden; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Cook Islands; French Polynesia; Niue; Pitcairn; Samoa; Tokelau; Tonga; Tuvalu; Wallis and Futuna Islands ;\",\"Brunei Darussalam; Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Afghanistan; Bangladesh; Bhutan; India; Iran (Islamic Republic of); Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Albania; Andorra; Bosnia and Herzegovina; Croatia; Gibraltar; Greece; Holy See; Italy; Malta; Montenegro; North Macedonia; Portugal; San Marino; Serbia; Slovenia; Spain ;\",\"Angola; Benin; Botswana; British Indian Ocean Territory; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Djibouti; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; French Southern Territories; Gabon; Gambia; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mayotte; Mozambique; Namibia; Niger; Nigeria; Rwanda; Réunion; Saint Helena; Sao Tome and Principe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Togo; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Qatar; Saudi Arabia; State of Palestine; Syrian Arab Republic; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Liechtenstein; Luxembourg; Monaco; Netherlands; Switzerland ;\"],[6,5,7,10,52,5,8,7,5,17,10,11,9,16,53,18,9]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>subr_n<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"subr_n\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n###### Intermediate\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ID-text}\n: Numbered R Code Title\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_unsd <-  base::readRDS(\"data/country-class/unsd_class_clean.rds\")\n\n(\n    unsd_class3 <- class_scheme(\n            df = df_unsd,\n            sel1 = rlang::quo(`country`),\n            sel2 = rlang::quo(`midr_n`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-3425c46f2df4ba8f1e70\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-3425c46f2df4ba8f1e70\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],[\"Caribbean\",\"Central America\",\"Channel Islands\",\"Eastern Africa\",\"Middle Africa\",\"South America\",\"Southern Africa\",\"Western Africa\",null],[\"Anguilla; Antigua and Barbuda; Aruba; Bahamas; Barbados; Bonaire, Sint Eustatius and Saba; British Virgin Islands; Cayman Islands; Cuba; Curaçao; Dominica; Dominican Republic; Grenada; Guadeloupe; Haiti; Jamaica; Martinique; Montserrat; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Guernsey; Jersey; Sark ;\",\"British Indian Ocean Territory; Burundi; Comoros; Djibouti; Eritrea; Ethiopia; French Southern Territories; Kenya; Madagascar; Malawi; Mauritius; Mayotte; Mozambique; Rwanda; Réunion; Seychelles; Somalia; South Sudan; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"Angola; Cameroon; Central African Republic; Chad; Congo; Democratic Republic of the Congo; Equatorial Guinea; Gabon; Sao Tome and Principe ;\",\"Argentina; Bolivia (Plurinational State of); Bouvet Island; Brazil; Chile; Colombia; Ecuador; Falkland Islands (Malvinas); French Guiana; Guyana; Paraguay; Peru; South Georgia and the South Sandwich Islands; Suriname; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Benin; Burkina Faso; Cabo Verde; Côte d’Ivoire; Gambia; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Saint Helena; Senegal; Sierra Leone; Togo ;\",\"Afghanistan; Albania; Algeria; American Samoa; Andorra; Armenia; Australia; Austria; Azerbaijan; Bahrain; Bangladesh; Belarus; Belgium; Bermuda; Bhutan; Bosnia and Herzegovina; Brunei Darussalam; Bulgaria; Cambodia; Canada; China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Christmas Island; Cocos (Keeling) Islands; Cook Islands; Croatia; Cyprus; Czechia; Democratic People's Republic of Korea; Denmark; Egypt; Estonia; Faroe Islands; Fiji; Finland; France; French Polynesia; Georgia; Germany; Gibraltar; Greece; Greenland; Guam; Heard Island and McDonald Islands; Holy See; Hungary; Iceland; India; Indonesia; Iran (Islamic Republic of); Iraq; Ireland; Isle of Man; Israel; Italy; Japan; Jordan; Kazakhstan; Kiribati; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Latvia; Lebanon; Libya; Liechtenstein; Lithuania; Luxembourg; Malaysia; Maldives; Malta; Marshall Islands; Micronesia (Federated States of); Monaco; Mongolia; Montenegro; Morocco; Myanmar; Nauru; Nepal; Netherlands; New Caledonia; New Zealand; Niue; Norfolk Island; North Macedonia; Northern Mariana Islands; Norway; Oman; Pakistan; Palau; Papua New Guinea; Philippines; Pitcairn; Poland; Portugal; Qatar; Republic of Korea; Republic of Moldova; Romania; Russian Federation; Saint Pierre and Miquelon; Samoa; San Marino; Saudi Arabia; Serbia; Singapore; Slovakia; Slovenia; Solomon Islands; Spain; Sri Lanka; State of Palestine; Sudan; Svalbard and Jan Mayen Islands; Sweden; Switzerland; Syrian Arab Republic; Tajikistan; Thailand; Timor-Leste; Tokelau; Tonga; Tunisia; Turkmenistan; Tuvalu; Türkiye; Ukraine; United Arab Emirates; United Kingdom of Great Britain and Northern Ireland; United States Minor Outlying Islands; United States of America; Uzbekistan; Vanuatu; Viet Nam; Wallis and Futuna Islands; Western Sahara; Yemen; Åland Islands ;\"],[28,8,3,22,9,16,5,17,140]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>midr_n<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"midr_n\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n###### Intermediate2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ID-text}\n: Numbered R Code Title\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunsd_class4 <-  base::readRDS(\"data/country-class/unsd_class_clean.rds\")\n\nunsd_class4 <- unsd_class4 |> \n  dplyr::mutate(midr_n2 = \n         base::ifelse(is.na(midr_n), subr_n, midr_n)\n         )\n\n(\n    unsd_class4 <- class_scheme(\n            df = unsd_class4,\n            sel1 = rlang::quo(`country`),\n            sel2 = rlang::quo(`midr_n2`)\n            )\n) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-0d8bf8cbac5f60e4da88\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0d8bf8cbac5f60e4da88\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"],[\"Australia and New Zealand\",\"Caribbean\",\"Central America\",\"Central Asia\",\"Channel Islands\",\"Eastern Africa\",\"Eastern Asia\",\"Eastern Europe\",\"Melanesia\",\"Micronesia\",\"Middle Africa\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"Polynesia\",\"South America\",\"South-eastern Asia\",\"Southern Africa\",\"Southern Asia\",\"Southern Europe\",\"Western Africa\",\"Western Asia\",\"Western Europe\"],[\"Australia; Christmas Island; Cocos (Keeling) Islands; Heard Island and McDonald Islands; New Zealand; Norfolk Island ;\",\"Anguilla; Antigua and Barbuda; Aruba; Bahamas; Barbados; Bonaire, Sint Eustatius and Saba; British Virgin Islands; Cayman Islands; Cuba; Curaçao; Dominica; Dominican Republic; Grenada; Guadeloupe; Haiti; Jamaica; Martinique; Montserrat; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Turkmenistan; Uzbekistan ;\",\"Guernsey; Jersey; Sark ;\",\"British Indian Ocean Territory; Burundi; Comoros; Djibouti; Eritrea; Ethiopia; French Southern Territories; Kenya; Madagascar; Malawi; Mauritius; Mayotte; Mozambique; Rwanda; Réunion; Seychelles; Somalia; South Sudan; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Democratic People's Republic of Korea; Japan; Mongolia; Republic of Korea ;\",\"Belarus; Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Fiji; New Caledonia; Papua New Guinea; Solomon Islands; Vanuatu ;\",\"Guam; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; Northern Mariana Islands; Palau; United States Minor Outlying Islands ;\",\"Angola; Cameroon; Central African Republic; Chad; Congo; Democratic Republic of the Congo; Equatorial Guinea; Gabon; Sao Tome and Principe ;\",\"Algeria; Egypt; Libya; Morocco; Sudan; Tunisia; Western Sahara ;\",\"Bermuda; Canada; Greenland; Saint Pierre and Miquelon; United States of America ;\",\"Denmark; Estonia; Faroe Islands; Finland; Iceland; Ireland; Isle of Man; Latvia; Lithuania; Norway; Svalbard and Jan Mayen Islands; Sweden; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Cook Islands; French Polynesia; Niue; Pitcairn; Samoa; Tokelau; Tonga; Tuvalu; Wallis and Futuna Islands ;\",\"Argentina; Bolivia (Plurinational State of); Bouvet Island; Brazil; Chile; Colombia; Ecuador; Falkland Islands (Malvinas); French Guiana; Guyana; Paraguay; Peru; South Georgia and the South Sandwich Islands; Suriname; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Brunei Darussalam; Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Afghanistan; Bangladesh; Bhutan; India; Iran (Islamic Republic of); Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Albania; Andorra; Bosnia and Herzegovina; Croatia; Gibraltar; Greece; Holy See; Italy; Malta; Montenegro; North Macedonia; Portugal; San Marino; Serbia; Slovenia; Spain ;\",\"Benin; Burkina Faso; Cabo Verde; Côte d’Ivoire; Gambia; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Saint Helena; Senegal; Sierra Leone; Togo ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Qatar; Saudi Arabia; State of Palestine; Syrian Arab Republic; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Liechtenstein; Luxembourg; Monaco; Netherlands; Switzerland ;\"],[6,28,8,5,3,22,7,10,5,8,9,7,5,14,10,16,11,5,9,16,17,18,9]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>midr_n2<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"midr_n2\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n`midr_n2` is a classification scheme with **248\ncountries in 23 regions**.\n::::\n:::::\n\n\n\n\n:::\n\n::::\n:::::\n\n\n##### Descriptions of the XY tabs\n\nThe file has 15 columns as you can also see online from the [Overview\npage](https://unstats.un.org/unsd/methodology/m49/overview/). \n\nThe many missing values (`NAs`) for the categories LDC, LLDC and SIDS are easy explained: These three columns are coded with an 'x' if the country of this row belong to this category. Recoding these three columns with 1 and 0 (1 = yes, belongs to this category, 0 = no, does not belong to this category) will reduce most of their missing values.\n\nOne missing value in the regional categories (Region, Sub-Region and Intermediate Region) is related to Antarctica which is not seen by the M49 scheme as a separated region. It has therefore no regional codes and names with the exception of the overall comprising global region. But it has M49 as well ISO-alpha codes.\n\nOne of the missing values for ISO-alpha2 and ISO-alpha3 is related to Sark, which is \"recognized by the United Nations Statistics Division (UNSD) as a separate territory\" but was not accepted by ISO now for more than 20 years [@mccarthy-2020]. Recently a new application (see [PDF](https://www.sarkid.org/assets/pdf/SarkID%20Identity%20info%20v1_2.pdf)) will change that but currently Sark is still waiting for [ISO 3166 codes](https://www.iso.org/iso-3166-country-codes.html).\n\nThe other missing value for ISO-alpha2 codes belongs to Namibia because its abbreviation `NA` is interpreted by R as a missing value!\n\nTo clean the data I will\n\n- Remove the global codes and names because they a redundant: All rows have global code \"001\" (\"World\").\n- Rename the columns to get shorter names.\n- Remove Antarctica because it is not seen as separate country.\n- Replace `NA` in the column ISO-alpha2 Code\" of Namibia with the string \"NA\".\n- Recode the columns LDC, LLDC and SIDS with 0 and 1.\n- Relocate the column \"country\" (previously \"Country or Area\") to the first column because than it easier to find some relevant content\n- Sort the data alphabetically by \"country\".\n\n\n\n\n\n##### Summary\n\n\n\n\n\n\n## XY STOPPED HERE - WHAT FOLLOW ARE SOME (OLDER) TEXT MODULES\n\n\n### Modul: Why looking at classification systems?\n\nOnly sometimes are they used identically in the data I will look at. So\nI also have to understand these data-driven differences (e.g., in the\n<a class='glossary' title='The ‘World Inequality Database’ (WID) aims to provide open and convenient access to the most extensive available database on the historical evolution of the world distribution of income and wealth, both within countries and between countries. WID.WORLD'>WID</a> database or the <a class='glossary' title='The World Happiness Reports are a partnership of Gallup, the Oxford Wellbeing Research Centre, the UN Sustainable Development Solutions Network, and the WHR’s Editorial Board. The report is produced under the editorial control of the WHR Editorial Board. The Reports reflects a worldwide demand for more attention to happiness and well-being as criteria for government policy. It reviews the state of happiness in the world today and shows how the science of happiness explains personal and national variations in happiness. (https://worldhappiness.report/about/)'>WHR</a> data) with the\nofficial country nomenclatures.\n\nI could have used just the approach used in my data set. But that\napproach poses two problems:\n\n1.  Not always are the classification used coherently in my available\n    datasets. So uses WHR (slightly) different country names in their\n    yearly reports. For instance \"Turkiye\" in 2024 and \"Turkey\" in 2012,\n    but the official name is \"Türkiye\". Instead of the current 27 member\n    states of the European Union the WID assigns the label \"European\n    Union\" to 32 countries, including still United Kingdom but also\n    British Overseas Territory (Gibraltar, Montserrat),and\n    self-governing British Crown dependencies (Isle of Man, Jersey) that\n    never had been member status in the <a class='glossary' title='The European Union (EU) is a supranational political and economic union of 27 member states. It comprises end of 2024: Austria, Belgium, Bulgaria, Croatia, Cyprus, Czech Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Ireland, Italy, Latvia, Lithuania, Luxembourg, Malta, Netherlands, Poland, Portugal, Romania, Slovakia, Slovenia, Spain Sweden.'>EU</a>.\n2.  Sometimes the available data use their own categorization schema.\n    Most of the data analysis in the World Inequality Report 2022\n    (WIR2022) condense data into eight different regions: Europe, South\n    & South-East Asia, East Asia, North America, Sub-Saharan Africa,\n    Russia & Central Asia, <a class='glossary' title='The Middle East and North Africa (MENA) region is a statistical grouping used by the United Nations (UN) to categorize 20 countries in the region. The UN defines MENA as comprising: Bahrain, Egypt, Iran, Iraq, Israel, Jordan, Kuwait, Lebanon, Oman, Qatar, Saudi Arabia, Syria, United Arab Emirates, and Yemen (Middle East). Algeria, Libya, Morocco, and Tunisia (North Africa).'>MENA</a>, Latin America. I\n    couldn't find exact this classification schema in one of the\n    internationally approved taxonomies.\n3.  Some of the groupings I am interested in (e.g.,\n    <a class='glossary' title='Organisation for Economic Co-operation and Development (OECD) is an intergovernmental economic organization founded in 1961. End of 2024 it comprises 38 member countries: Australia, Austria, Belgium, Canada, Chile, Colombia, Costa Rica, Czechia, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Iceland, Ireland, Israel, Italy, Japan, Korea, Latvia, Lithuania, Luxembourg, Mexico, Netherlands, New Zealand, Norway, Poland, Portugal, Slovak Republic, Slovenia, Spain, Sweden, Switzerland, Türkiye, United Kingdom, United States.'>OECD</a>, or countries that applied for\n    <a class='glossary' title='The following countries have end of 2024 an open application for EU membership: Albania, Bosnia and Herzegovina, Georgia, Kosovo, Moldavia, Montenegro, North Macedonia, Serbia, Turkey, Ukraine.'>EU membership status</a>\n    are not part of the international standardized statistical\n    groupings.\n\n\n### Modul: UNSD M49 geoscheme preliminiary rsults\n\nAfter some research I found out that the most detailed and for\nstatistical purposes most relevant classification system is\n<a class='glossary' title='The United Nations publication “Standard Country or Area Codes for Statistical Use” was originally published as Series M, No. 49 and is now commonly referred to as the M49 standard. M49 is a country/areas classification system prepared by the Statistics Division of the United Nations Secretariat primarily for use in its publications and databases.'>M49</a> standard, developed and maintained by the United\nNations Statistics Division (<a class='glossary' title='The United Nations Statistics Division (UNSD) is committed to the advancement of the global statistical system. It compiles and disseminates global statistical information, develop standards and norms for statistical activities, and support countries’ efforts to strengthen their national statistical systems.'>UNSD</a>). Guided by the\n<a class='glossary' title='The United Nations geoscheme is a system which divides 248 countries and territories in the world into six continental regions, 22 geographical subregions, and two intermediary regions. It was devised by the United Nations Statistics Division (UNSD) based on the M49 coding classification'>United Nations Geoscheme</a> it divides all countries of the\nworld into different types of regions:\n\nReference is: [Wikipedia\nmap](https://en.wikipedia.org/wiki/United_Nations_geoscheme#/media/File:United_Nations_geographical_subregions.png)\n\n-   **6 Regions**: 6 continents:\n    -   Africa,\n    -   Americas,\n    -   Antarctica,\n    -   Asia,\n    -   Europe and\n    -   Oceania.\n-   **22 Sub-regions**: (Missing three in [Appendix 1. United Nations\n    Geoscheme](https://www.emiw.org/fileadmin/emiw/UserActivityDocs/Geograph.Representation/Geographic-Representation-Appendix_1.pdf):\n    Polynesia, and other differentiation of the Americas: North America,\n    Central America, Caribbean, South America )\n    -   Africa:\n        -   Northern Africa,\n        -   Eastern Africa,\n        -   Middle Africa,\n        -   Southern Africa,\n        -   Western Africa\n    -   Americas:\n        -   Latin America and the Caribbean,\n        -   Northern America\n    -   Asia:\n        -   Central Asia,\n        -   Eastern Asia,\n        -   Southeastern Asia,\n        -   Southern Asia,\n        -   Western Asia\n    -   Europe:\n        -   Eastern Europe,\n        -   Northern Europe,\n        -   Southern Europe,\n        -   Western Europe\n    -   Oceania:\n        -   Australia and New Zealand,\n        -   Melanesia,\n        -   Micronesia\n\n------------------------------------------------------------------------\n\n-   Sub-regions (18 in M49, missing 4: Sub-Saharan Africa = Eastern\n    Africa, Middle Africa, Southern Africa, and Western Africa, and\n    Latin America = South America and Caribbean is separated)\n    -   \"Northern Africa\"\\\n    -   \"Sub-Saharan Africa\"\\\n    -   \"Latin America and the Caribbean\"\n    -   \"Northern America\"\n    -   \"Central Asia\"\\\n    -   \"Eastern Asia\"\\\n    -   \"South-eastern Asia\"\\\n    -   \"Southern Asia\"\\\n    -   \"Western Asia\"\\\n    -   \"Eastern Europe\"\\\n    -   \"Northern Europe\"\\\n    -   \"Southern Europe\"\\\n    -   \"Western Europe\"\\\n    -   \"Australia and New Zealand\"\\\n    -   \"Melanesia\"\\\n    -   \"Micronesia\"\\\n    -   \"Polynesia\"\n-   Intermediate Regions: (2, but 7)\n    -   Sub-Saharan Africa: Eastern Africa, Middle Africa, Southern\n        Africa and Western Africa\n    -   Latin America and the Caribbean: Caribbean, Central America,\n        South America\n\n::: {#nte-qualifications .callout-note}\n1.  The UN geoscheme is a statistical classification and does not imply\n    any political or other affiliation of countries or territories.\n2.  It may differ from geographical definitions used by autonomous UN\n    specialized agencies, such as the United Nations Industrial\n    Development Organization and UNESCO, for their own organizational\n    convenience.\n3.  Other alternative groupings include the World Bank regional\n    classification and CIA World Factbook regions, and Internet\n    Corporation for Assigned Names and Numbers Geographic Regions.\n:::\n\n::: {#imp-procedure .callout-important}\nHow to get the 22 sub-regions from the m49 data?\n\n1.  Take the `Intermediate Region Name` if it is not `NA`.\n2.  If the `Intermediate Region Name` is `NA` then take the\n    `Sub-region name`.\n:::\n\n::::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-download-m49-scheme}\n: Download the M49 Geoscheme of the United Nations\n:::\n::::\n\n:::: my-r-code-container\n\n**Run this code chunk only once manually:** It downloads the M49\nGeoscheme of the United Nations as a `.csv` file and saves it as an R\n`.rds` object.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## run this code chunk only once (manually)\n\n## get the file from an external source, \n## https://github.com/omnika-datastore/unsd-m49-standard-area-codes\n## OMNIKA DataStore is an open-access data science resource \n## for researchers, authors, and technologists interested in mythology. \n## Managed by OMNIKA Foundation which is a 501c3 nonprofit \n## whose mission is to digitize, organize, \n## and make freely available all the world's mythological contents.\n## at the official UN site is no URL provided\n## the file is downloaded via a javascript\n## I checked the two files with base::all.equal()`\n## they are identical \n\n## define variables\nurl <- \"https://github.com/omnika-datastore/unsd-m49-standard-area-codes/raw/refs/heads/main/2022-09-24__CSV_UNSD_M49.csv\"\nfolder = \"country-class\"\n\n## create folder for chapter if not already done\ndata_folder <-\n        base::paste0(\n            here::here(),\n            paste0(\"/data/\", folder, \"/\")\n        )\n    if (!base::file.exists(data_folder))\n    {base::dir.create(data_folder)}\n\n## get the UNSD M49 .csv file from the OMNIKA Foundation GitHub\ndestfile <- base::paste0(data_folder, \"unsd_m49.csv\")\nutils::download.file(url, destfile)\ntmp <- readr::read_csv2(destfile)\n\n\n## save original file without changes\npb_save_data_file(\"country-class\", tmp, \"unsd_m49.rds\")\n```\n:::\n\n\n\n\n\n::::\n:::::::\n\n\n### Modul: WIR2022 data inspection & exploration\n\n:::::: {#obj-chapter-template}\n::::: my-objectives\n::: my-objectives-header\nList regions of the WIR2022 and their countries\n:::\n\n::: my-objectives-container\nThe World Inequality Report 2022 (WIR2022) describes global trends in\ninequality. It mostly condense data in eight different regions. See the\nfollowing graph as an example:\n\n![A typical example for a graph in the World Inequality Report 2022\n(WIR2022), showing the division of the world into eight different world\nregions (\"MENA\" stands for Middle East & North\nArfica).](img/80-WIR2022-min.png){#fig-80-wir2022-example\nfig-alt=\"The image shows the income shares for the bottom 50%, middle 40% and top 10% in 2021 dividing the world into eight different regions. With the exception of Europe the top 10% earn the biggest share of the income with the following order from lowest to the highest 10%: Europe, East Asia, North America, Russia & Central Asia, South & South-East Asia, Latin America, Sub-Saharan Africa, MENA (Middle East & North Africa). Example: In Latin America the top 10% captures 55% of national income compared to 36% of Europe.\"\nfig-align=\"center\" width=\"100%\"}\n\nIn this appendix I want to know the countries that form each of these\neight regions.\n:::\n:::::\n::::::\n\n## Data\n\nMy first task was to look for data where I could extract the information\nI am interested in. I scanned the files of the free accessible [GitHub\nrepository of the WID](https://github.com/WIDworld/wid-world). I found\n`country-codes-core.xlsx`, an Excel file with the data I am looking for.\nIt is sorted by a two letter code in the first column named\nappropriately `code`. \"Core\" means -- in contrast to [other\n`country-codes`\nfiles](https://github.com/WIDworld/wid-world/tree/master/data-input/country-codes)\n-- that it includes a column `corecountry` where the number `1`\nfunctions as a marker for a core country. The file itself has many\nhidden rows which feature either regions smaller than a country (like\nAlabama for US or Bavaria for Germany) or bigger than a country (like\nAsia or Western Europe).\n\n::: callout-important\n`country-codes-core.xlsx` contains many hidden rows. It is therefore\nnecessary to filter by `corecountry == 1`.\n:::\n\n### Download data\n\nThe following code chunk is only applied once. The file contains rows\nwith all two letter combinations. Many of these combinations do not\nrefer to an existing country. To eliminate these records one needs to\nselect `corecountry == 1`.\n\nThe following chunk downloads the dataset from the internet and saves\nthis Excel file untouched. I selected only rows for core-countries and\nconverted all string columns to factor variable. I stored the result as\n`country-codes.rds`.\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-download-country-codes-core}\n: Download the country-codes-core file, manipulate and save it\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## run this code chunk only once (manually)\n\n## define variables\nurl <- \"https://github.com/WIDworld/wid-world/raw/master/data-input/country-codes/country-codes-core.xlsx\"\nchapter_folder = \"chap80\"\n\n## create folder for chapter if not already done\nchap_folder <-\n        base::paste0(\n            here::here(),\n            paste0(\"/data/\", chapter_folder, \"/\")\n        )\n    if (!base::file.exists(chap_folder))\n    {base::dir.create(chap_folder)}\n\n## get country-codes-core.xlsx\ndestfile <- base::paste0(chap_folder, \"country-codes-core.xlsx\")\nutils::download.file(url, destfile)\ntmp <- readxl::read_xlsx(destfile)\n\n\ncountry_codes <- tmp |> \n    ## filter for core countries\n    dplyr::filter(corecountry == 1) |> \n    ## convert all region columns to factor variables\n    dplyr::mutate(dplyr::across(\n        tidyselect::starts_with(\"region\"), forcats::as_factor)\n        )\n\n## save cleaned data\npb_save_data_file(\"chap80\", country_codes, \"country_codes.rds\")\n```\n:::\n\n\n\n\n(*For this R code chunk is no output available*)\n:::\n::::::\n\n### Eplore Data\n\nAn inspection of the data file shows that column `region5` contains the\nregions used in WIR2022.\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-explore-data}\n: Explore Data\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_codes <- base::readRDS(\"data/chap80/country_codes.rds\")\n\nskimr::skim(country_codes)\n\nglue::glue(\" \")\nglue::glue(\"############################################################\")\nglue::glue(\"Display number of countries for each region\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\ncountry_codes |> \n    dplyr::pull(region5) |> \n    forcats::fct_count()\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |              |\n|:------------------------|:-------------|\n|Name                     |country_codes |\n|Number of rows           |216           |\n|Number of columns        |10            |\n|_______________________  |              |\n|Column type frequency:   |              |\n|character                |3             |\n|factor                   |5             |\n|numeric                  |2             |\n|________________________ |              |\n|Group variables          |None          |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|code          |         0|             1|   2|   2|     0|      216|          0|\n|titlename     |         0|             1|   4|  32|     0|      216|          0|\n|shortname     |         0|             1|   3|  32|     0|      216|          0|\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                         |\n|:-------------|---------:|-------------:|:-------|--------:|:----------------------------------|\n|region1       |         0|          1.00|FALSE   |        5|Afr: 54, Asi: 53, Ame: 47, Eur: 46 |\n|region2       |         0|          1.00|FALSE   |       18|Wes: 27, Car: 23, Wes: 20, Eas: 19 |\n|region3       |       184|          0.15|FALSE   |        1|Eur: 32                            |\n|region4       |        24|          0.89|FALSE   |        9|Oth: 48, Oth: 38, Oth: 22, Oth: 18 |\n|region5       |         0|          1.00|FALSE   |        8|Sub: 49, Eur: 46, Lat: 43, MEN: 20 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate| mean|   sd| p0| p25| p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|----:|----:|--:|---:|---:|---:|----:|:-----|\n|corecountry   |         0|             1| 1.00| 0.00|  1|   1|   1|   1|    1|▁▁▇▁▁ |\n|TH            |         0|             1| 0.19| 0.39|  0|   0|   0|   0|    1|▇▁▁▁▂ |\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  \n#> ############################################################\n#> Display number of countries for each region\n#> ############################################################\n#>  \n#> # A tibble: 8 × 2\n#>   f                           n\n#>   <fct>                   <int>\n#> 1 Europe                     46\n#> 2 MENA                       20\n#> 3 South & South-East Asia    20\n#> 4 Latin America              43\n#> 5 Russia & Central Asia      11\n#> 6 Sub-Saharan Africa         49\n#> 7 North America & Oceania    19\n#> 8 East Asia                   8\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n\n## List countries\n\n::::::::::::::::::::::::::::::::::::::::::: my-example\n:::: my-example-header\n::: {#exm-80-list-countries}\n: List countries for each regions used in WIR2022\n:::\n::::\n\n:::::::::::::::::::::::::::::::::::::::: my-example-container\n::::::::::::::::::::::::::::::::::::::: panel-tabset\n###### Europe\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-europe}\n: Countries of the European region used in the WIR2022\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes <- country_codes |> \n    dplyr::select(code, shortname, tidyselect::starts_with(\"region\"))\n\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"Europe\") |> \n    dplyr::select(-region5, -region3) |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 46 × 5\n#>    code  shortname              region1 region2        region4             \n#>    <chr> <chr>                  <fct>   <fct>          <fct>               \n#>  1 AD    Andorra                Europe  Western Europe Other Western Europe\n#>  2 AL    Albania                Europe  Eastern Europe Other Eastern Europe\n#>  3 AT    Austria                Europe  Western Europe Other Western Europe\n#>  4 BA    Bosnia and Herzegovina Europe  Eastern Europe Other Eastern Europe\n#>  5 BE    Belgium                Europe  Western Europe Other Western Europe\n#>  6 BG    Bulgaria               Europe  Eastern Europe Other Eastern Europe\n#>  7 CH    Switzerland            Europe  Western Europe Other Western Europe\n#>  8 CY    Cyprus                 Europe  Eastern Europe Other Eastern Europe\n#>  9 CZ    Czech Republic         Europe  Eastern Europe Other Eastern Europe\n#> 10 DE    Germany                Europe  Western Europe <NA>                \n#> 11 DK    Denmark                Europe  Western Europe Other Western Europe\n#> 12 EE    Estonia                Europe  Eastern Europe Other Eastern Europe\n#> 13 ES    Spain                  Europe  Western Europe <NA>                \n#> 14 FI    Finland                Europe  Western Europe Other Western Europe\n#> 15 FR    France                 Europe  Western Europe <NA>                \n#> 16 GB    United Kingdom         Europe  Western Europe <NA>                \n#> 17 GG    Guernsey               Europe  Western Europe Other Western Europe\n#> 18 GI    Gibraltar              Europe  Western Europe Other Western Europe\n#> 19 GR    Greece                 Europe  Western Europe Other Western Europe\n#> 20 HR    Croatia                Europe  Eastern Europe Other Eastern Europe\n#> 21 HU    Hungary                Europe  Eastern Europe Other Eastern Europe\n#> 22 IE    Ireland                Europe  Western Europe Other Western Europe\n#> 23 IM    Isle of Man            Europe  Western Europe Other Western Europe\n#> 24 IS    Iceland                Europe  Western Europe Other Western Europe\n#> 25 IT    Italy                  Europe  Western Europe <NA>                \n#> 26 JE    Jersey                 Europe  Western Europe Other Western Europe\n#> 27 KS    Kosovo                 Europe  Eastern Europe Other Western Europe\n#> 28 LI    Liechtenstein          Europe  Western Europe Other Western Europe\n#> 29 LT    Lithuania              Europe  Eastern Europe Other Eastern Europe\n#> 30 LU    Luxembourg             Europe  Western Europe Other Western Europe\n#> 31 LV    Latvia                 Europe  Eastern Europe Other Eastern Europe\n#> 32 MC    Monaco                 Europe  Western Europe Other Western Europe\n#> 33 MD    Moldova                Europe  Eastern Europe Other Eastern Europe\n#> 34 ME    Montenegro             Europe  Eastern Europe Other Eastern Europe\n#> 35 MK    North Macedonia        Europe  Eastern Europe Other Eastern Europe\n#> 36 MT    Malta                  Europe  Western Europe Other Western Europe\n#> 37 NL    Netherlands            Europe  Western Europe Other Western Europe\n#> 38 NO    Norway                 Europe  Western Europe Other Western Europe\n#> 39 PL    Poland                 Europe  Eastern Europe Other Eastern Europe\n#> 40 PT    Portugal               Europe  Western Europe Other Western Europe\n#> 41 RO    Romania                Europe  Eastern Europe Other Eastern Europe\n#> 42 RS    Serbia                 Europe  Eastern Europe Other Eastern Europe\n#> 43 SE    Sweden                 Europe  Western Europe <NA>                \n#> 44 SI    Slovenia               Europe  Eastern Europe Other Eastern Europe\n#> 45 SK    Slovakia               Europe  Eastern Europe Other Eastern Europe\n#> 46 SM    San Marino             Europe  Western Europe Other Western Europe\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n\n###### European Union\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-eu}\n: Countries of the European Union\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes <- country_codes |> \n    dplyr::select(code, shortname, tidyselect::starts_with(\"region\"))\n\nwir2022_country_codes |> \n    dplyr::filter(region3 == \"European Union\") |> \n    dplyr::select(-region5, -region3) |> \n    dplyr::arrange(shortname) |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 32 × 5\n#>    code  shortname      region1  region2        region4             \n#>    <chr> <chr>          <fct>    <fct>          <fct>               \n#>  1 AT    Austria        Europe   Western Europe Other Western Europe\n#>  2 BE    Belgium        Europe   Western Europe Other Western Europe\n#>  3 BG    Bulgaria       Europe   Eastern Europe Other Eastern Europe\n#>  4 HR    Croatia        Europe   Eastern Europe Other Eastern Europe\n#>  5 CY    Cyprus         Europe   Eastern Europe Other Eastern Europe\n#>  6 CZ    Czech Republic Europe   Eastern Europe Other Eastern Europe\n#>  7 DK    Denmark        Europe   Western Europe Other Western Europe\n#>  8 EE    Estonia        Europe   Eastern Europe Other Eastern Europe\n#>  9 FI    Finland        Europe   Western Europe Other Western Europe\n#> 10 FR    France         Europe   Western Europe <NA>                \n#> 11 DE    Germany        Europe   Western Europe <NA>                \n#> 12 GI    Gibraltar      Europe   Western Europe Other Western Europe\n#> 13 GR    Greece         Europe   Western Europe Other Western Europe\n#> 14 HU    Hungary        Europe   Eastern Europe Other Eastern Europe\n#> 15 IE    Ireland        Europe   Western Europe Other Western Europe\n#> 16 IM    Isle of Man    Europe   Western Europe Other Western Europe\n#> 17 IT    Italy          Europe   Western Europe <NA>                \n#> 18 JE    Jersey         Europe   Western Europe Other Western Europe\n#> 19 LV    Latvia         Europe   Eastern Europe Other Eastern Europe\n#> 20 LT    Lithuania      Europe   Eastern Europe Other Eastern Europe\n#> 21 LU    Luxembourg     Europe   Western Europe Other Western Europe\n#> 22 MT    Malta          Europe   Western Europe Other Western Europe\n#> 23 MS    Montserrat     Americas Caribbean      Other Latin America \n#> 24 NL    Netherlands    Europe   Western Europe Other Western Europe\n#> 25 PL    Poland         Europe   Eastern Europe Other Eastern Europe\n#> 26 PT    Portugal       Europe   Western Europe Other Western Europe\n#> 27 RO    Romania        Europe   Eastern Europe Other Eastern Europe\n#> 28 SK    Slovakia       Europe   Eastern Europe Other Eastern Europe\n#> 29 SI    Slovenia       Europe   Eastern Europe Other Eastern Europe\n#> 30 ES    Spain          Europe   Western Europe <NA>                \n#> 31 SE    Sweden         Europe   Western Europe <NA>                \n#> 32 GB    United Kingdom Europe   Western Europe <NA>\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n\n###### MENA\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-mena}\n: Countries of the MENA region (Middle East & North Afrika)\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"MENA\") |> \n    dplyr::select(-region5, -region3) |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 20 × 5\n#>    code  shortname            region1 region2      region4   \n#>    <chr> <chr>                <fct>   <fct>        <fct>     \n#>  1 AE    United Arab Emirates Asia    West Asia    Other MENA\n#>  2 BH    Bahrain              Asia    West Asia    Other MENA\n#>  3 DZ    Algeria              Africa  North Africa <NA>      \n#>  4 EG    Egypt                Africa  North Africa <NA>      \n#>  5 IL    Israel               Asia    West Asia    Other MENA\n#>  6 IQ    Iraq                 Asia    West Asia    Other MENA\n#>  7 IR    Iran                 Asia    South Asia   Other MENA\n#>  8 JO    Jordan               Asia    West Asia    Other MENA\n#>  9 KW    Kuwait               Asia    West Asia    Other MENA\n#> 10 LB    Lebanon              Asia    West Asia    Other MENA\n#> 11 LY    Libya                Africa  North Africa Other MENA\n#> 12 MA    Morocco              Africa  North Africa Other MENA\n#> 13 OM    Oman                 Asia    West Asia    Other MENA\n#> 14 PS    Palestine            Asia    West Asia    Other MENA\n#> 15 QA    Qatar                Asia    West Asia    Other MENA\n#> 16 SA    Saudi Arabia         Asia    West Asia    Other MENA\n#> 17 SY    Syrian Arab Republic Asia    West Asia    Other MENA\n#> 18 TN    Tunisia              Africa  North Africa Other MENA\n#> 19 TR    Turkey               Asia    West Asia    <NA>      \n#> 20 YE    Yemen                Asia    West Asia    Other MENA\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n\n###### South & South-East Asia\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-ssea}\n: Countries of the South & South-East Asia region used in the WIR2022\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"South & South-East Asia\") |> \n    dplyr::select(-region5, -region3) |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 20 × 5\n#>    code  shortname         region1 region2                               region4\n#>    <chr> <chr>             <fct>   <fct>                                 <fct>  \n#>  1 AF    Afghanistan       Asia    South Asia                            Other …\n#>  2 BD    Bangladesh        Asia    South Asia                            Other …\n#>  3 BN    Brunei Darussalam Asia    South-East Asia                       Other …\n#>  4 BT    Bhutan            Asia    South Asia                            Other …\n#>  5 ID    Indonesia         Asia    South-East Asia                       <NA>   \n#>  6 IN    India             Asia    South Asia                            <NA>   \n#>  7 KH    Cambodia          Asia    South-East Asia                       Other …\n#>  8 LA    Lao PDR           Asia    South-East Asia                       Other …\n#>  9 LK    Sri Lanka         Asia    South Asia                            Other …\n#> 10 MM    Myanmar           Asia    South-East Asia                       Other …\n#> 11 MV    Maldives          Asia    South Asia                            Other …\n#> 12 MY    Malaysia          Asia    South-East Asia                       Other …\n#> 13 NP    Nepal             Asia    South Asia                            Other …\n#> 14 PG    Papua New Guinea  Oceania Oceania (excl. Australia and New Zea… Other …\n#> 15 PH    Philippines       Asia    South-East Asia                       Other …\n#> 16 PK    Pakistan          Asia    South Asia                            Other …\n#> 17 SG    Singapore         Asia    South-East Asia                       Other …\n#> 18 TH    Thailand          Asia    South-East Asia                       Other …\n#> 19 TL    Timor-Leste       Asia    South-East Asia                       Other …\n#> 20 VN    Viet Nam          Asia    South-East Asia                       Other …\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n\n###### Latin America\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-latin-america}\n: Countries of the Latin America region used in the WIR2022\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"Latin America\") |> \n    dplyr::select(-region5, -region3) |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 43 × 5\n#>    code  shortname                        region1  region2         region4      \n#>    <chr> <chr>                            <fct>    <fct>           <fct>        \n#>  1 AG    Antigua and Barbuda              Americas Caribbean       Other Latin …\n#>  2 AI    Anguilla                         Americas Caribbean       Other Latin …\n#>  3 AR    Argentina                        Americas South America   <NA>         \n#>  4 AW    Aruba                            Americas Caribbean       Other Latin …\n#>  5 BB    Barbados                         Americas Caribbean       Other Latin …\n#>  6 BO    Bolivia                          Americas South America   Other Latin …\n#>  7 BQ    Bonaire, Sint Eustatius and Saba Americas Caribbean       Other Latin …\n#>  8 BR    Brazil                           Americas South America   <NA>         \n#>  9 BS    Bahamas                          Americas Caribbean       Other Latin …\n#> 10 BZ    Belize                           Americas Central America Other Latin …\n#> 11 CL    Chile                            Americas South America   <NA>         \n#> 12 CO    Colombia                         Americas South America   <NA>         \n#> 13 CR    Costa Rica                       Americas Central America Other Latin …\n#> 14 CU    Cuba                             Americas Caribbean       Other Latin …\n#> 15 CW    Curacao                          Americas Caribbean       Other Latin …\n#> 16 DM    Dominica                         Americas Caribbean       Other Latin …\n#> 17 DO    Dominican Republic               Americas Caribbean       Other Latin …\n#> 18 EC    Ecuador                          Americas South America   Other Latin …\n#> 19 GD    Grenada                          Americas Caribbean       Other Latin …\n#> 20 GT    Guatemala                        Americas Central America Other Latin …\n#> 21 GY    Guyana                           Americas South America   Other Latin …\n#> 22 HN    Honduras                         Americas Central America Other Latin …\n#> 23 HT    Haiti                            Americas Caribbean       Other Latin …\n#> 24 JM    Jamaica                          Americas Caribbean       Other Latin …\n#> 25 KN    Saint Kitts and Nevis            Americas Caribbean       Other Latin …\n#> 26 KY    Cayman Islands                   Americas Caribbean       Other Latin …\n#> 27 LC    Saint Lucia                      Americas Caribbean       Other Latin …\n#> 28 MS    Montserrat                       Americas Caribbean       Other Latin …\n#> 29 MX    Mexico                           Americas Central America <NA>         \n#> 30 NI    Nicaragua                        Americas Central America Other Latin …\n#> 31 PA    Panama                           Americas Central America Other Latin …\n#> 32 PE    Peru                             Americas South America   Other Latin …\n#> 33 PR    Puerto Rico                      Americas Caribbean       Other Latin …\n#> 34 PY    Paraguay                         Americas South America   Other Latin …\n#> 35 SR    Suriname                         Americas South America   Other Latin …\n#> 36 SV    El Salvador                      Americas Central America Other Latin …\n#> 37 SX    Sint Maarten (Dutch part)        Americas Caribbean       Other Latin …\n#> 38 TC    Turks and Caicos Islands         Americas Caribbean       Other Latin …\n#> 39 TT    Trinidad and Tobago              Americas Caribbean       Other Latin …\n#> 40 UY    Uruguay                          Americas South America   Other Latin …\n#> 41 VC    Saint Vincent and the Grenadines Americas Caribbean       Other Latin …\n#> 42 VE    Venezuela                        Americas South America   Other Latin …\n#> 43 VG    Virgin Islands, British          Americas Caribbean       Other Latin …\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n\n###### Russia & Central Asia\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-ruca}\n: Countries of the Russia & Central Asia region used in the WIR2022\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"Russia & Central Asia\") |> \n    dplyr::select(-region5, -region3) |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 11 × 5\n#>    code  shortname          region1 region2      region4                    \n#>    <chr> <chr>              <fct>   <fct>        <fct>                      \n#>  1 AM    Armenia            Asia    West Asia    Other Russia & Central Asia\n#>  2 AZ    Azerbaijan         Asia    West Asia    Other Russia & Central Asia\n#>  3 BY    Belarus            Asia    West Asia    Other Russia & Central Asia\n#>  4 GE    Georgia            Asia    West Asia    Other Russia & Central Asia\n#>  5 KG    Kyrgyzstan         Asia    Central Asia Other Russia & Central Asia\n#>  6 KZ    Kazakhstan         Asia    Central Asia Other Russia & Central Asia\n#>  7 RU    Russian Federation Asia    West Asia    <NA>                       \n#>  8 TJ    Tajikistan         Asia    Central Asia Other Russia & Central Asia\n#>  9 TM    Turkmenistan       Asia    Central Asia Other Russia & Central Asia\n#> 10 UA    Ukraine            Asia    West Asia    Other Russia & Central Asia\n#> 11 UZ    Uzbekistan         Asia    Central Asia Other Russia & Central Asia\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n\n###### Sub-Saharan Africa\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-susa}\n: Countries of the Sub-Saharan African region used in the WIR2022\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"Sub-Saharan Africa\") |> \n    dplyr::select(-region5, -region3) |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 49 × 5\n#>    code  shortname                region1 region2       region4                 \n#>    <chr> <chr>                    <fct>   <fct>         <fct>                   \n#>  1 AO    Angola                   Africa  Middle Africa Other Sub-Saharan Africa\n#>  2 BF    Burkina Faso             Africa  West Africa   Other Sub-Saharan Africa\n#>  3 BI    Burundi                  Africa  East Africa   Other Sub-Saharan Africa\n#>  4 BJ    Benin                    Africa  West Africa   Other Sub-Saharan Africa\n#>  5 BW    Botswana                 Africa  South Africa  Other Sub-Saharan Africa\n#>  6 CD    DR Congo                 Africa  Middle Africa Other Sub-Saharan Africa\n#>  7 CF    Central African Republic Africa  Middle Africa Other Sub-Saharan Africa\n#>  8 CG    Congo                    Africa  Middle Africa Other Sub-Saharan Africa\n#>  9 CI    Cote d'Ivoire            Africa  West Africa   Other Sub-Saharan Africa\n#> 10 CM    Cameroon                 Africa  Middle Africa Other Sub-Saharan Africa\n#> 11 CV    Cabo Verde               Africa  West Africa   Other Sub-Saharan Africa\n#> 12 DJ    Djibouti                 Africa  East Africa   Other Sub-Saharan Africa\n#> 13 ER    Eritrea                  Africa  East Africa   Other Sub-Saharan Africa\n#> 14 ET    Ethiopia                 Africa  East Africa   Other Sub-Saharan Africa\n#> 15 GA    Gabon                    Africa  Middle Africa Other Sub-Saharan Africa\n#> 16 GH    Ghana                    Africa  West Africa   Other Sub-Saharan Africa\n#> 17 GM    Gambia                   Africa  West Africa   Other Sub-Saharan Africa\n#> 18 GN    Guinea                   Africa  West Africa   Other Sub-Saharan Africa\n#> 19 GQ    Equatorial Guinea        Africa  Middle Africa Other Sub-Saharan Africa\n#> 20 GW    Guinea-Bissau            Africa  West Africa   Other Sub-Saharan Africa\n#> 21 KE    Kenya                    Africa  East Africa   Other Sub-Saharan Africa\n#> 22 KM    Comoros                  Africa  East Africa   Other Sub-Saharan Africa\n#> 23 LR    Liberia                  Africa  West Africa   Other Sub-Saharan Africa\n#> 24 LS    Lesotho                  Africa  South Africa  Other Sub-Saharan Africa\n#> 25 MG    Madagascar               Africa  East Africa   Other Sub-Saharan Africa\n#> 26 ML    Mali                     Africa  West Africa   Other Sub-Saharan Africa\n#> 27 MR    Mauritania               Africa  West Africa   Other Sub-Saharan Africa\n#> 28 MU    Mauritius                Africa  East Africa   Other Sub-Saharan Africa\n#> 29 MW    Malawi                   Africa  East Africa   Other Sub-Saharan Africa\n#> 30 MZ    Mozambique               Africa  East Africa   Other Sub-Saharan Africa\n#> 31 NA    Namibia                  Africa  South Africa  Other Sub-Saharan Africa\n#> 32 NE    Niger                    Africa  West Africa   Other Sub-Saharan Africa\n#> 33 NG    Nigeria                  Africa  West Africa   Other Sub-Saharan Africa\n#> 34 RW    Rwanda                   Africa  East Africa   Other Sub-Saharan Africa\n#> 35 SC    Seychelles               Africa  East Africa   Other Sub-Saharan Africa\n#> 36 SD    Sudan                    Africa  North Africa  Other Sub-Saharan Africa\n#> 37 SL    Sierra Leone             Africa  West Africa   Other Sub-Saharan Africa\n#> 38 SN    Senegal                  Africa  West Africa   Other Sub-Saharan Africa\n#> 39 SO    Somalia                  Africa  East Africa   Other Sub-Saharan Africa\n#> 40 SS    South Sudan              Africa  North Africa  Other Sub-Saharan Africa\n#> 41 ST    Sao Tome and Principe    Africa  Middle Africa Other Sub-Saharan Africa\n#> 42 SZ    Swaziland                Africa  South Africa  Other Sub-Saharan Africa\n#> 43 TD    Chad                     Africa  Middle Africa Other Sub-Saharan Africa\n#> 44 TG    Togo                     Africa  West Africa   Other Sub-Saharan Africa\n#> 45 TZ    Tanzania                 Africa  East Africa   Other Sub-Saharan Africa\n#> 46 UG    Uganda                   Africa  East Africa   Other Sub-Saharan Africa\n#> 47 ZA    South Africa             Africa  South Africa  <NA>                    \n#> 48 ZM    Zambia                   Africa  East Africa   Other Sub-Saharan Africa\n#> 49 ZW    Zimbabwe                 Africa  East Africa   Other Sub-Saharan Africa\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n\n###### North America & Oceania\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-noac}\n: Countries of the North America & Oceania region used in the WIR2022\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"North America & Oceania\") |> \n    dplyr::select(-region5, -region3) |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 19 × 5\n#>    code  shortname        region1  region2                               region4\n#>    <chr> <chr>            <fct>    <fct>                                 <fct>  \n#>  1 AU    Australia        Oceania  Australia and New Zealand             <NA>   \n#>  2 BM    Bermuda          Americas North America                         Other …\n#>  3 CA    Canada           Americas North America                         <NA>   \n#>  4 FJ    Fiji             Oceania  Oceania (excl. Australia and New Zea… Other …\n#>  5 FM    Micronesia       Oceania  Oceania (excl. Australia and New Zea… Other …\n#>  6 GL    Greenland        Americas North America                         Other …\n#>  7 KI    Kiribati         Oceania  Oceania (excl. Australia and New Zea… Other …\n#>  8 MH    Marshall Islands Oceania  Oceania (excl. Australia and New Zea… Other …\n#>  9 NC    New Caledonia    Oceania  Oceania (excl. Australia and New Zea… Other …\n#> 10 NR    Nauru            Oceania  Oceania (excl. Australia and New Zea… Other …\n#> 11 NZ    New Zealand      Oceania  Australia and New Zealand             <NA>   \n#> 12 PF    French Polynesia Oceania  Oceania (excl. Australia and New Zea… Other …\n#> 13 PW    Palau            Oceania  Oceania (excl. Australia and New Zea… Other …\n#> 14 SB    Solomon Islands  Oceania  Oceania (excl. Australia and New Zea… Other …\n#> 15 TO    Tonga            Oceania  Oceania (excl. Australia and New Zea… Other …\n#> 16 TV    Tuvalu           Oceania  Oceania (excl. Australia and New Zea… Other …\n#> 17 US    USA              Americas North America                         <NA>   \n#> 18 VU    Vanuatu          Oceania  Oceania (excl. Australia and New Zea… Other …\n#> 19 WS    Samoa            Oceania  Oceania (excl. Australia and New Zea… Other …\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n\n###### East Asia\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-80-east-asia}\n: Countries of the East Asia region used in the WIR2022\n:::\n::::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"East Asia\") |> \n    dplyr::select(-region5, -region3) |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 8 × 5\n#>   code  shortname   region1 region2   region4        \n#>   <chr> <chr>       <fct>   <fct>     <fct>          \n#> 1 CN    China       Asia    East Asia <NA>           \n#> 2 HK    Hong Kong   Asia    East Asia Other East Asia\n#> 3 JP    Japan       Asia    East Asia <NA>           \n#> 4 KP    North Korea Asia    East Asia Other East Asia\n#> 5 KR    Korea       Asia    East Asia Other East Asia\n#> 6 MN    Mongolia    Asia    East Asia Other East Asia\n#> 7 MO    Macao       Asia    East Asia Other East Asia\n#> 8 TW    Taiwan      Asia    East Asia Other East Asia\n```\n\n\n:::\n:::\n\n\n\n:::\n::::::\n:::::::::::::::::::::::::::::::::::::::\n::::::::::::::::::::::::::::::::::::::::\n:::::::::::::::::::::::::::::::::::::::::::\n\n------------------------------------------------------------------------\n\n## Glossary\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:left;\"> definition </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> EU Membership Applications </td>\n   <td style=\"text-align:left;\"> The following countries have end of 2024 an open application for EU membership: Albania, Bosnia and Herzegovina, Georgia, Kosovo, Moldavia, Montenegro, North Macedonia, Serbia, Turkey, Ukraine. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> EUx </td>\n   <td style=\"text-align:left;\"> The European Union (EU) is a supranational political and economic union of 27 member states. It comprises end of 2024: Austria, Belgium, Bulgaria, Croatia, Cyprus, Czech Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Ireland, Italy, Latvia, Lithuania, Luxembourg, Malta, Netherlands, Poland, Portugal, Romania, Slovakia, Slovenia, Spain Sweden. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GNI </td>\n   <td style=\"text-align:left;\"> Gross National Income (GNI) is a measure of a country's income, which includes all the income earned by a country's residents, businesses, and earnings from foreign sources. It is defined as the total amount of money earned by a nation's people and businesses, no matter where it was earned. GNI is an alternative to GDP as a way to measure and track a nation’s wealth, as it calculates income instead of output. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IBRD </td>\n   <td style=\"text-align:left;\"> The International Bank for Reconstruction and Development (IBRD) is a global development cooperative owned by 189 member countries. As the largest development bank in the world, it supports the World Bank Group’s mission by providing loans, guarantees, risk management products, and advisory services to middle-income and creditworthy low-income countries, as well as by coordinating responses to regional and global challenges. (https://www.worldbank.org/en/who-we-are/ibrd) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IDAx </td>\n   <td style=\"text-align:left;\"> The International Development Association (IDA) is the part of the World Bank that helps the world’s low-income countries. IDA's grants and low-interest loans help countries invest in their futures, improve lives, and create safer, more prosperous communities around the world. (https://ida.worldbank.org/en/what-is-ida) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> M49 </td>\n   <td style=\"text-align:left;\"> The United Nations publication \"Standard Country or Area Codes for Statistical Use\" was originally published as Series M, No. 49 and is now commonly referred to as the M49 standard. M49 is a country/areas classification system prepared by the Statistics Division of the United Nations Secretariat primarily for use in its publications and databases. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> MENA </td>\n   <td style=\"text-align:left;\"> The Middle East and North Africa (MENA) region is a statistical grouping used by the United Nations (UN) to categorize 20 countries in the region. The UN defines MENA as comprising: Bahrain, Egypt, Iran, Iraq, Israel, Jordan, Kuwait, Lebanon, Oman, Qatar, Saudi Arabia, Syria, United Arab Emirates, and Yemen (Middle East). Algeria, Libya, Morocco, and Tunisia (North Africa). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> OECD </td>\n   <td style=\"text-align:left;\"> Organisation for Economic Co-operation and Development (OECD) is an intergovernmental economic organization founded in 1961. End of 2024 it comprises 38 member countries: Australia, Austria, Belgium, Canada, Chile, Colombia, Costa Rica, Czechia, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Iceland, Ireland, Israel, Italy, Japan, Korea, Latvia, Lithuania, Luxembourg, Mexico, Netherlands, New Zealand, Norway, Poland, Portugal, Slovak Republic, Slovenia, Spain, Sweden, Switzerland, Türkiye, United Kingdom, United States. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> RDS </td>\n   <td style=\"text-align:left;\"> The abbreviation “RDS” in file endings `.rds` refers to “R Data Serialized”. It is a format used by the R programming language to serialize and store R objects, such as data frames, lists, and functions, in a compact and portable binary format. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> United Nations Geoscheme </td>\n   <td style=\"text-align:left;\"> The United Nations geoscheme is a system which divides 248 countries and territories in the world into six continental regions, 22 geographical subregions, and two intermediary regions. It was devised by the United Nations Statistics Division (UNSD) based on the M49 coding classification </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> UNSD </td>\n   <td style=\"text-align:left;\"> The United Nations Statistics Division (UNSD) is committed to the advancement of the global statistical system. It compiles and disseminates global statistical information, develop standards and norms for statistical activities, and support countries' efforts to strengthen their national statistical systems. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WHR </td>\n   <td style=\"text-align:left;\"> The World Happiness Reports are a partnership of Gallup, the Oxford Wellbeing Research Centre, the UN Sustainable Development Solutions Network, and the WHR’s Editorial Board. The report is produced under the editorial control of the WHR Editorial Board. The Reports reflects a worldwide demand for more attention to happiness and well-being as criteria for government policy. It reviews the state of happiness in the world today and shows how the science of happiness explains personal and national variations in happiness. (https://worldhappiness.report/about/) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WID </td>\n   <td style=\"text-align:left;\"> The 'World Inequality Database' (WID) aims to provide open and convenient access to the most extensive available database on the historical evolution of the world distribution of income and wealth, both within countries and between countries. [WID.WORLD](https://wid.world/wid-world/) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n## Session Info {.unnumbered}\n\n::::: my-r-code\n::: my-r-code-header\nSession Info\n:::\n\n::: my-r-code-container\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ─ Session info ───────────────────────────────────────────────────────────────\n#>  setting  value\n#>  version  R version 4.4.2 (2024-10-31)\n#>  os       macOS Sequoia 15.1.1\n#>  system   x86_64, darwin20\n#>  ui       X11\n#>  language (EN)\n#>  collate  en_US.UTF-8\n#>  ctype    en_US.UTF-8\n#>  tz       Europe/Vienna\n#>  date     2024-11-27\n#>  pandoc   3.5 @ /usr/local/bin/ (via rmarkdown)\n#> \n#> ─ Packages ───────────────────────────────────────────────────────────────────\n#>  package     * version    date (UTC) lib source\n#>  base64enc     0.1-3      2015-07-28 [2] CRAN (R 4.4.0)\n#>  bslib         0.8.0      2024-07-29 [2] CRAN (R 4.4.0)\n#>  cachem        1.1.0      2024-05-16 [2] CRAN (R 4.4.0)\n#>  cli           3.6.3      2024-06-21 [2] CRAN (R 4.4.1)\n#>  colorspace    2.1-1      2024-07-26 [2] CRAN (R 4.4.0)\n#>  commonmark    1.9.2      2024-10-04 [2] CRAN (R 4.4.1)\n#>  crayon        1.5.3      2024-06-20 [2] CRAN (R 4.4.0)\n#>  crosstalk     1.2.1      2023-11-23 [2] CRAN (R 4.4.0)\n#>  curl          6.0.0      2024-11-05 [2] CRAN (R 4.4.1)\n#>  digest        0.6.37     2024-08-19 [2] CRAN (R 4.4.1)\n#>  dplyr         1.1.4      2023-11-17 [2] CRAN (R 4.4.0)\n#>  DT            0.33       2024-04-04 [2] CRAN (R 4.4.0)\n#>  evaluate      1.0.1      2024-10-10 [2] CRAN (R 4.4.1)\n#>  fansi         1.0.6      2023-12-08 [2] CRAN (R 4.4.0)\n#>  fastmap       1.2.0      2024-05-15 [2] CRAN (R 4.4.0)\n#>  forcats       1.0.0      2023-01-29 [2] CRAN (R 4.4.0)\n#>  generics      0.1.3      2022-07-05 [2] CRAN (R 4.4.0)\n#>  ggplot2       3.5.1      2024-04-23 [2] CRAN (R 4.4.0)\n#>  glossary    * 1.0.0.9003 2024-08-05 [2] Github (debruine/glossary@05e4a61)\n#>  glue          1.8.0      2024-09-30 [2] CRAN (R 4.4.1)\n#>  gtable        0.3.6      2024-10-25 [2] CRAN (R 4.4.1)\n#>  here          1.0.1      2020-12-13 [2] CRAN (R 4.4.0)\n#>  htmltools     0.5.8.1    2024-04-04 [2] CRAN (R 4.4.0)\n#>  htmlwidgets   1.6.4      2023-12-06 [2] CRAN (R 4.4.0)\n#>  jquerylib     0.1.4      2021-04-26 [2] CRAN (R 4.4.0)\n#>  jsonlite      1.8.9      2024-09-20 [2] CRAN (R 4.4.1)\n#>  kableExtra    1.4.0      2024-01-24 [2] CRAN (R 4.4.0)\n#>  knitr         1.49       2024-11-08 [2] CRAN (R 4.4.1)\n#>  lifecycle     1.0.4      2023-11-07 [2] CRAN (R 4.4.0)\n#>  magrittr      2.0.3      2022-03-30 [2] CRAN (R 4.4.0)\n#>  markdown      1.13       2024-06-04 [2] CRAN (R 4.4.0)\n#>  munsell       0.5.1      2024-04-01 [2] CRAN (R 4.4.0)\n#>  pillar        1.9.0      2023-03-22 [2] CRAN (R 4.4.0)\n#>  pkgconfig     2.0.3      2019-09-22 [2] CRAN (R 4.4.0)\n#>  purrr         1.0.2      2023-08-10 [2] CRAN (R 4.4.0)\n#>  R6            2.5.1      2021-08-19 [2] CRAN (R 4.4.0)\n#>  repr          1.1.7      2024-03-22 [2] CRAN (R 4.4.0)\n#>  rlang         1.1.4      2024-06-04 [2] CRAN (R 4.4.0)\n#>  rmarkdown     2.29       2024-11-04 [2] CRAN (R 4.4.1)\n#>  rprojroot     2.0.4      2023-11-05 [2] CRAN (R 4.4.0)\n#>  rstudioapi    0.17.1     2024-10-22 [2] CRAN (R 4.4.1)\n#>  rversions     2.1.2      2022-08-31 [2] CRAN (R 4.4.0)\n#>  sass          0.4.9      2024-03-15 [2] CRAN (R 4.4.0)\n#>  scales        1.3.0      2023-11-28 [2] CRAN (R 4.4.0)\n#>  sessioninfo   1.2.2      2021-12-06 [2] CRAN (R 4.4.0)\n#>  skimr         2.1.5      2022-12-23 [2] CRAN (R 4.4.0)\n#>  stringi       1.8.4      2024-05-06 [2] CRAN (R 4.4.0)\n#>  stringr       1.5.1      2023-11-14 [2] CRAN (R 4.4.0)\n#>  svglite       2.1.3      2023-12-08 [2] CRAN (R 4.4.0)\n#>  systemfonts   1.1.0      2024-05-15 [2] CRAN (R 4.4.0)\n#>  tibble        3.2.1      2023-03-20 [2] CRAN (R 4.4.0)\n#>  tidyr         1.3.1      2024-01-24 [2] CRAN (R 4.4.0)\n#>  tidyselect    1.2.1      2024-03-11 [2] CRAN (R 4.4.0)\n#>  utf8          1.2.4      2023-10-22 [2] CRAN (R 4.4.0)\n#>  vctrs         0.6.5      2023-12-01 [2] CRAN (R 4.4.0)\n#>  viridisLite   0.4.2      2023-05-02 [2] CRAN (R 4.4.0)\n#>  withr         3.0.2      2024-10-28 [2] CRAN (R 4.4.1)\n#>  xfun          0.49       2024-10-31 [2] CRAN (R 4.4.1)\n#>  xml2          1.3.6      2023-12-04 [2] CRAN (R 4.4.0)\n#>  yaml          2.3.10     2024-07-26 [2] CRAN (R 4.4.0)\n#> \n#>  [1] /Library/Frameworks/R.framework/Versions/4.4-x86_64/library\n#>  [2] /Library/Frameworks/R.framework/Versions/4.4-x86_64/Resources/library\n#> \n#> ──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n\n:::\n:::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}