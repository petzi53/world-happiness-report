{
  "hash": "2e3f70614bc2ce57d2096f3faff60aff",
  "result": {
    "engine": "knitr",
    "markdown": "# Preface {.unnumbered}\n\n\n\n\n\n\n\n::: my-watch-out\n::: my-watch-out-header\nWATCH OUT: This is work in progress\n:::\n\n::: my-watch-out-container\n**This is my personal learning material and is therefore neither a\nscientific peer reviewed article nor an authoritative textbook.**\n\nWith this book I want to apply my statistical knowledge using the R\nlanguage to investigate social inequality for Austria, my country of\nbirth and where I am living.\n\nI am writing this book as a text for others to read because that forces\nme to become explicit and explain all my learning outcomes more\ncarefully.\n\nPlease keep in mind that this text is not written by an expert but by a\nlearner.\n:::\n:::\n\n\n## Glossary {.unnumbered}\n\nI am using the {**glossary**} package to create links to glossary\nentries.\\]\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-load-glossary}\n: Load glossary\n:::\n:::\n\n::: my-r-code-container\n\n\n::: {.cell}\n\n```{#lst-preface-load-glossary .r .cell-code  lst-cap=\"Install and load the glossary package with the appropriate glossary.yml file\"}\n## 1. Install the glossary package:\n## https://debruine.github.io/glossary/\n\nlibrary(glossary)\n\n## If you want to use my glossary.yml file:\n\n## 1. fork my repo\n##    https://github.com/petzi53/glossary-pb\n\n## 2. Download the `glossary.yml` file from\n##    https://github.com/petzi53/glossary-pb/blob/master/glossary.yml)\n\n## 3. Store the file on your hard disk\n##    and change the following path accordingly\n\nglossary::glossary_path(\"../glossary-pb/glossary.yml\")\n```\n:::\n\n\n:::\n:::\n\nIf you hover with your mouse over the double underlined links it opens\nan window with the appropriate glossary text. Try this example:\n<a class='glossary' title='A z-score (also called a standard score) gives you an idea of how far from the mean a data point is. But more technically it’s a measure of how many standard deviations below or above the population mean a raw score is. (StatisticsHowTo)'>Z-Score</a>.\n\nTo apply the glossary into this text I have used the {**glossary**}\npackage by [Lisa\nDeBruine](https://debruine.github.io/glossary/index.html).\n\n::: my-watch-out\n::: my-watch-out-header\nWATCH OUT! No guarantee for correct information in Glossary\n\n\n:::\n\n::: my-watch-out-container\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n\n![](https://debruine.github.io/glossary/logo.png)\n\nThere is no guarantee that the glossary text -- as well as\nthe whole book -- contains correct information. Whenever possible I have\nmentioned the source of the glossary entry. (You will find active\nlinks to the source in the original glossary file at\n[GitHub](https://github.com/petzi53/glossary-pb/blob/master/glossary.yml))<br /><br />\nSometimes I have used abbreviation for the source, but I need\nstill to provide a key what this short references mean.\n\n\n:::\n\n\n\n\n\n\n\n:::\n:::\n\nIf you fork the [repository of this quarto\nbook](https://github.com/petzi53/inequality-austria) then the glossary\nwill not work out of the box. Load down the `glossary.yml` file from [my\nglossary-pb GitHub\nrepo](https://github.com/petzi53/glossary-pb/blob/master/glossary.yml),\nstore it on your hard disk and change the path in the code chunk\n@lst-preface-load-glossary.\n\nIn any case I am the only responsible person for this text.\n\n## R Code {.unnumbered}\n\nFor R code I am using mainly the [Tidyverse Style\nGuide](https://style.tidyverse.org/) with some additions from [Google’s\nR Style Guide](https://google.github.io/styleguide/Rguide.html). These\nadditons are:\n\n-   Start the names of private functions with a dot.\n-   Don't use `base::attach()`.\n-   No right-hand assignments.\n-   Qualify namespace.\n\nEspecially the last point (qualifying namespace) is important for my\nlearning. Besides preventing conflicts with functions of identical names\nfrom different packages it helps me to learn (or remember) which\nfunction belongs to which package. I think this justifies the small\noverhead and helps to make R code chunks self-sufficient. (No previous\npackage loading, or library calls in the setup chunk.) To foster\nlearning the relation between function and package I embrace the package\nname with curly brakes and format it in bold. Additionally I will add a\nspecial annex file \"Used packages\" with an alphabetically sorted list of\nshort package descriptions.\n\nI am mentioning package name explicitly also for the default\ninstallation of base R. This wouldn't be necessary but it helps me to\nunderstand where the base R functions come from. What follows is a list\nof base R packages of the system library included into every\ninstallation and attached (opened) by default:\n\n-   {**base**}: The R Base Package\n-   {**datsets**}: The R Datasets Package\n-   {**graphics**}: The R Graphics Package\n-   {**grDevices**}: The R Graphics Devices and Support for Colours and\n    Fonts\n-   {**methods**}: Formal Methods and Classes\n-   {**stats**}: The R Stats Package\n-   {**utils**}: The R Utils Package\n\nBut I will not always mention the name of the argument inside a\nfunction. When it is clear then I will follow the advice from Hadley\nWickham: \n\n> When you call a function, you typically omit the names of data arguments, because they are used so commonly. If you overridethe default value of an argument, use the full name ([tidyverse style guide](https://style.tidyverse.org/syntax.html)).\n\n## Get data\n\n::: my-example\n::: my-example-header\n::: {#exm-get-austrian-data}\n: Get Austrian Data\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n\n####### Country codes\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-country-codes}\n: List and meaning of all country and region codes\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-country-codes}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"_archive/datasets/WID_fulldataset_AT_27-06-2024_14_57_47/WID_countries.csv\"\n\nWID_countries <- readr::read_delim(\n    file = url, \n    delim = \";\", \n    col_types = \"ccccc\",\n    escape_double = FALSE, \n    trim_ws = TRUE\n    )\n\nsave_data_file(\"chap0\", WID_countries, \"WID_countries.rds\")\n```\n:::\n\n\n\nGet list and meaning of all country and region codes and save it to\n`WID_countries`.\n:::\n:::\n:::\n\n(*For this R code chunk is no output available*)\n\n####### Country data (AT)\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-austria-data-file}\n: Austria data file\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-austria-data-file}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <-  \"_archive/datasets/WID_fulldataset_AT_27-06-2024_14_57_47/WID_data_AT.csv\"\n\nWID_data_AT <- readr::read_delim(\n    file = url, \n    delim = \";\", \n    col_types = \"cccddcc\",\n    escape_double = FALSE, \n    trim_ws = TRUE\n    )\n\nsave_data_file(\"chap0\", WID_data_AT, \"WID_data_AT.rds\")\n```\n:::\n\n\n\nGet Austria data from the `WID_data_AT.csv` file\n:::\n:::\n:::\n\n(*For this R code chunk is no output available*)\n\n####### Metadata\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-get-metadata}\n: Get metadata\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-get-metadata}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"_archive/datasets/WID_fulldataset_AT_27-06-2024_14_57_47/WID_metadata_AT.csv\"\n\nWID_metadata_AT <- read_delim(\n    file = url, \n    delim = \";\", \n    col_types = \"ccccccccccccccccccc\", # 19 character columns\n    escape_double = FALSE, \n    trim_ws = TRUE\n    )\n\nsave_data_file(\"chap0\", WID_metadata_AT, \"WID_metadata_AT.rds\")\n```\n:::\n\n\n\nGet Austrian metadata from the `WID_metadata_AT.csv` file\n:::\n:::\n:::\n\n(*For this R code chunk is no output available*)\n:::\n:::\n:::\n\n## Inspect data\n\n::: my-example\n::: my-example-header\n::: {#exm-inspect-data}\n: Inspect Austrian data\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n####### Country codes\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-inspect-country-codes}\n: Inspect country codes\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-inspect-country-codes}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWID_countries <- base::readRDS(\"data/chap0/WID_countries.rds\")\n\nglue::glue(\"############################################################\")\nglue::glue(\"Glimpse first rows\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\ndplyr::glimpse(WID_countries)\n\nglue::glue(\" \")\nglue::glue(\"############################################################\")\nglue::glue(\"Display first and last row and 8 random rows between\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\nmy_glance_data(WID_countries, seed = 420)\n\nglue::glue(\" \")\nglue::glue(\"############################################################\")\nglue::glue(\"Display rows for Austria and Germany\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\nWID_countries |> \n    dplyr::filter(alpha2 == \"AT\" | alpha2 == \"DE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ############################################################\n#> Glimpse first rows\n#> ############################################################\n#>  \n#> Rows: 388\n#> Columns: 5\n#> $ alpha2    <chr> \"AD\", \"AE\", \"AF\", \"AG\", \"AI\", \"AL\", \"AM\", \"AN\", \"AO\", \"AR\", …\n#> $ titlename <chr> \"Andorra\", \"the United Arab Emirates\", \"Afghanistan\", \"Antig…\n#> $ shortname <chr> \"Andorra\", \"United Arab Emirates\", \"Afghanistan\", \"Antigua a…\n#> $ region    <chr> \"Europe\", \"Asia\", \"Asia\", \"Americas\", \"Americas\", \"Europe\", …\n#> $ region2   <chr> \"Western Europe\", \"West Asia\", \"South Asia\", \"Caribbean\", \"C…\n#>  \n#> ############################################################\n#> Display first and last row and 8 random rows between\n#> ############################################################\n#>  \n#> # A tibble: 10 × 6\n#>      obs alpha2 titlename                      shortname          region region2\n#>    <int> <chr>  <chr>                          <chr>              <chr>  <chr>  \n#>  1     1 AD     Andorra                        Andorra            Europe Wester…\n#>  2    21 BG     Bulgaria                       Bulgaria           Europe Easter…\n#>  3    73 EG     Egypt                          Egypt              Africa North …\n#>  4   101 HN     Honduras                       Honduras           Ameri… Centra…\n#>  5   165 NE     Niger                          Niger              Africa West A…\n#>  6   170 NP     Nepal                          Nepal              Asia   South …\n#>  7   261 SE     Sweden                         Sweden             Europe Wester…\n#>  8   349 UZ     Uzbekistan                     Uzbekistan         Asia   Centra…\n#>  9   376 XN-MER MENA (at market exchange rate) MENA (at market e… <NA>   <NA>   \n#> 10   388 ZZ     Zanzibar                       Zanzibar           Africa East A…\n#>  \n#> ############################################################\n#> Display rows for Austria and Germany\n#> ############################################################\n#>  \n#> # A tibble: 2 × 5\n#>   alpha2 titlename shortname region region2       \n#>   <chr>  <chr>     <chr>     <chr>  <chr>         \n#> 1 AT     Austria   Austria   Europe Western Europe\n#> 2 DE     Germany   Germany   Europe Western Europe\n```\n\n\n:::\n:::\n\n\n\nList and meaning of all country and region codes\n:::\n\n------------------------------------------------------------------------\n\n-   `alpha2`: the 2-letter country/region code [^index-1].\n-   `titlename`: the name of the country/region, including the definite\n    article, if any.\n-   `shortname`: the name of the country/region, excluding the definite\n    article.\n-   `region`: broad world region to which the country belongs.\n-   `region2`: detailed world region to which the country belongs.\n:::\n:::\n\n####### Inspect metadata\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-inspect-metadata}\n: Inspect metadata\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-inspect-metadata}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWID_metadata_AT <- base::readRDS(\"data/chap0/WID_metadata_AT.rds\")\n\nglue::glue(\"############################################################\")\nglue::glue(\"Glimpse first rows\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\ndplyr::glimpse(WID_metadata_AT)\n\nglue::glue(\" \")\nglue::glue(\"############################################################\")\nglue::glue(\"Get useful summary statistics\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\nskimr::skim(WID_metadata_AT)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ############################################################\n#> Glimpse first rows\n#> ############################################################\n#>  \n#> Rows: 944\n#> Columns: 19\n#> $ country       <chr> \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"A…\n#> $ variable      <chr> \"acaincj992\", \"accmhni992\", \"accmhni999\", \"accmhoi992\", …\n#> $ age           <chr> \"992\", \"992\", \"999\", \"992\", \"999\", \"992\", \"999\", \"992\", …\n#> $ pop           <chr> \"j\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"…\n#> $ countryname   <chr> \"Austria\", \"Austria\", \"Austria\", \"Austria\", \"Austria\", \"…\n#> $ shortname     <chr> \"Post-tax disposable income\", \"Consumption of fixed capi…\n#> $ simpledes     <chr> \"Post-tax private income corresponds to all sources of i…\n#> $ technicaldes  <chr> \"Post-tax disposable income=Pre-tax income-Taxes on prod…\n#> $ shorttype     <chr> \"Average\", \"Average\", \"Average\", \"Average\", \"Average\", \"…\n#> $ longtype      <chr> \"Average income or wealth between two percentiles. When …\n#> $ shortpop      <chr> \"equal-split adults\", \"individuals\", \"individuals\", \"ind…\n#> $ longpop       <chr> \"The base unit is the individual (rather than the househ…\n#> $ shortage      <chr> \"Adults\", \"Adults\", \"All Ages\", \"Adults\", \"All Ages\", \"A…\n#> $ longage       <chr> \"The population is comprised of individuals over age 20.…\n#> $ unit          <chr> \"EUR\", \"EUR\", \"EUR\", \"EUR\", \"EUR\", \"EUR\", \"EUR\", \"EUR\", …\n#> $ source        <chr> \"[URL][URL_LINK]https://wid.world/document/why-is-europe…\n#> $ method        <chr> \"Summary of data construction by year (see source for de…\n#> $ extrapolation <chr> \"[[1980, 2003], [2020, 2022]]\", NA, NA, NA, NA, NA, NA, …\n#> $ data_points   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n#>  \n#> ############################################################\n#> Get useful summary statistics\n#> ############################################################\n#> \n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                |\n|:------------------------|:---------------|\n|Name                     |WID_metadata_AT |\n|Number of rows           |944             |\n|Number of columns        |19              |\n|_______________________  |                |\n|Column type frequency:   |                |\n|character                |19              |\n|________________________ |                |\n|Group variables          |None            |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min|  max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|----:|-----:|--------:|----------:|\n|country       |         0|          1.00|   2|    2|     0|        1|          0|\n|variable      |         0|          1.00|  10|   10|     0|      944|          0|\n|age           |         0|          1.00|   3|    3|     0|       38|          0|\n|pop           |         0|          1.00|   1|    1|     0|        4|          0|\n|countryname   |         0|          1.00|   7|    7|     0|        1|          0|\n|shortname     |         0|          1.00|   6|  118|     0|      237|          0|\n|simpledes     |       722|          0.24|  33|  990|     0|       33|          0|\n|technicaldes  |       645|          0.32|  61|  283|     0|       85|          0|\n|shorttype     |         0|          1.00|   5|   34|     0|       14|          0|\n|longtype      |         0|          1.00|   7|  425|     0|       14|          0|\n|shortpop      |         0|          1.00|   4|   18|     0|        4|          0|\n|longpop       |         0|          1.00|  63|  131|     0|        4|          0|\n|shortage      |         0|          1.00|   4|    8|     0|       38|          0|\n|longage       |         0|          1.00|  55|   73|     0|       38|          0|\n|unit          |        14|          0.99|   3|   35|     0|        8|          0|\n|source        |       301|          0.68| 104|  597|     0|       25|          0|\n|method        |       323|          0.66|  53| 1439|     0|       48|          0|\n|extrapolation |       876|          0.07|  14|   28|     0|        6|          0|\n|data_points   |       936|          0.01|  24|   24|     0|        1|          0|\n\n\n:::\n:::\n\n\n\nInspect metadata for Austrian data file\n:::\n\n------------------------------------------------------------------------\n\nThe dataset contains seventeen (+ two) variables:\n\n-   `country`: the country/region code.\n-   `variable`: the variable code to which the metadata refer.\n-   `age`: the code of the age group to which the population refer.\n-   `pop`: the code of the population unit to which the population\n    refer.\n-   `countryname`: the name of the country/region as it would appear in\n    an English sentence.\n-   `shortname`: the name of the country/region as it would appear on\n    its own in English.\n-   `simpledes`: decription of the variable in plain English.\n-   `technicaldes`: description of the variable via accounting\n    identities.\n-   `shorttype`: short description of the variable type (average,\n    aggregate, share, index, etc.) in plain English.\n-   `longtype`: longer, more detailed description of the variable type\n    in plain English.\n-   `shortpop`: short description of the population unit (individuals,\n    tax units, equal-split, etc.) in plain English.\n-   `longpop`: longer, more detailed description of the population unit\n    in plain English.\n-   `shortage`: short description of the age group (adults, full\n    population, etc.) in plain English.\n-   `longage`: longer, more detailed description of the age group in\n    plain English.\n-   `unit`: unit of the variable (the 3-letter currency code for\n    monetary amounts).\n-   `source`: The source(s) used to compute the data.\n-   `method`: Methological details describing how the data was\n    constructed and/or caveats.\n-   `extrapolation`: Not explained in the \"README.md\" file. Just the\n    first row contains data.\n-   `data_points`: Not explained in the \"README.md\" file, but does not\n    data.\n\nThere is an explanation for the last two columns in the WID vignette:\n\n> In some countries, many data points are the result of interpolations\n> or extrapolations. For example, estimates in most African countries\n> are based on surveys that are only realized every few years, which we\n> interpolate to produce yearly series and perform regional\n> aggregations.\n:::\n:::\n\n####### Inspect Austria data\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-inspect-austrian-data}\n: Inspect Austrian data\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-inspect-austrian-data}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWID_data_AT <- base::readRDS(\"data/chap0/WID_data_AT.rds\")\n\nglue::glue(\"############################################################\")\nglue::glue(\"Glimpse first rows\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\ndplyr::glimpse(WID_data_AT)\n\nglue::glue(\" \")\nglue::glue(\"############################################################\")\nglue::glue(\"Display first and last row and 8 random rows between\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\nmy_glance_data(WID_data_AT)\n\nglue::glue(\" \")\nglue::glue(\"############################################################\")\nglue::glue(\"Get useful summary statistics\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\nskimr::skim(WID_data_AT)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ############################################################\n#> Glimpse first rows\n#> ############################################################\n#>  \n#> Rows: 226,643\n#> Columns: 7\n#> $ country    <chr> \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"AT\", \"AT\",…\n#> $ variable   <chr> \"ehfcari999\", \"ehfcari999\", \"ehfcari999\", \"ehfcari999\", \"eh…\n#> $ percentile <chr> \"p0p100\", \"p0p100\", \"p0p100\", \"p0p100\", \"p0p100\", \"p0p100\",…\n#> $ year       <dbl> 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,…\n#> $ value      <dbl> 35.38029, 35.36562, 37.71131, 35.39840, 35.05839, 36.70093,…\n#> $ age        <chr> \"999\", \"999\", \"999\", \"999\", \"999\", \"999\", \"999\", \"999\", \"99…\n#> $ pop        <chr> \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",…\n#>  \n#> ############################################################\n#> Display first and last row and 8 random rows between\n#> ############################################################\n#>  \n#> # A tibble: 10 × 8\n#>       obs country variable   percentile  year      value age   pop  \n#>     <int> <chr>   <chr>      <chr>      <dbl>      <dbl> <chr> <chr>\n#>  1      1 AT      ehfcari999 p0p100      1990     35.4   999   i    \n#>  2  46208 AT      adiincj992 p76p77      2009  57135.    992   j    \n#>  3  54425 AT      asacgei999 p0p100      2013   3570.    999   i    \n#>  4  61413 AT      lcfghgi999 p50p90      1995     12.3   999   i    \n#>  5  61605 AT      lcfghgi999 p57p58      2012     10.3   999   i    \n#>  6  74362 AT      lpfghgi999 p13p14      2019      6.18  999   i    \n#>  7  99556 AT      aptincj992 p0p93       2018 559153.    992   j    \n#>  8 147812 AT      wtbmpxi999 p0p100      2021      0.550 999   i    \n#>  9 178200 AT      tcaincj992 p79p100     2018  41333.    992   j    \n#> 10 226643 AT      tptincj992 p9p100      2022   7024.    992   j    \n#>  \n#> ############################################################\n#> Get useful summary statistics\n#> ############################################################\n#> \n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |            |\n|:------------------------|:-----------|\n|Name                     |WID_data_AT |\n|Number of rows           |226643      |\n|Number of columns        |7           |\n|_______________________  |            |\n|Column type frequency:   |            |\n|character                |5           |\n|numeric                  |2           |\n|________________________ |            |\n|Group variables          |None        |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|country       |         0|             1|   2|   2|     0|        1|          0|\n|variable      |         0|             1|  10|  10|     0|      944|          0|\n|percentile    |         0|             1|   4|  14|     0|      388|          0|\n|age           |         0|             1|   3|   3|     0|       38|          0|\n|pop           |         0|             1|   1|   1|     0|        4|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|        mean|           sd|           p0|     p25|     p50|      p75|         p100|hist  |\n|:-------------|---------:|-------------:|-----------:|------------:|------------:|-------:|-------:|--------:|------------:|:-----|\n|year          |         0|             1| 2.00172e+03| 1.305000e+01|         1950| 1993.00| 2003.00|  2012.00| 2.023000e+03|▁▁▅▇▇ |\n|value         |         0|             1| 2.38163e+09| 3.793671e+10| -81807966208|    0.65|  680.99| 56968.25| 2.533468e+12|▇▁▁▁▁ |\n\n\n:::\n:::\n\n\n\nVariables of the Austrian data file\n:::\n\n-   `country`: country/region code (see @lst-inspect-country-codes).\n-   `variable`: WID variable code (see @sec-chap0-variable-codes).\n-   `percentile`: WID percentile code (see @sec-chap0-percentile-codes).\n-   `year`: the year of the data point.\n-   `value`: the value of the data point.\n-   `age`: code indicating the age group to which the data point refers\n    to.\n-   `pop`: code indicating the population unit to which the data point\n    refers to.\n:::\n:::\n:::\n:::\n:::\n\n[^index-1]: Regions within country XX are indicated as XX-YY, where YY\n    is the region code. World regions are indicated as XX and XX-MER,\n    the first one using purchasing power parities (the default) and the\n    second one using market exchange rates. See [the technical note\n    \"Prices and currency conversions in\n    WID.world\"](https://wid.world/document/convert-wid-world-series/)\n    for details.\n\n## How interpreting the data codes?\n\n### Variable codes {#sec-chap0-variable-codes}\n\nThe meaning of each variable is described in the metadata files. The\ncomplete WID variable codes (i.e. sptinc992j) obey to the following\nlogic:\n\n-   the first letter indicates the variable type (i.e. \"s\" for share).\n-   the next five letters indicate the income/wealth/other concept (i.e.\n    \"ptinc\" for pre-tax national income).\n-   the next three digits indicate the age group (i.e. \"992\" for\n    adults).\n-   the last letter indicate the population unit (i.e. \"j\" for\n    equal-split).\n\n### Percentile Codes {#sec-chap0-percentile-codes}\n\nThere are two types of percentiles on WID.world : (1) group percentiles\nand (2) generalized percentiles. The interpretation of income (or\nwealth) average, share or threshold series depends on which type of\npercentile is looked at.\n\n#### Group Percentiles\n\nGroup percentiles are defined as follows:\n\n**Bottom and top**\n\n-   p0p50 (bottom 50% of the population),\n-   p50p90 (next 40%),\n-   p90p100 (top 10%),\n-   p99p100 (top 1%),\n-   p0p90 (bottom 90%),\n-   p0p99 (bottom 99% of the population),\n-   p99.9p100 (top 0.1%),\n-   p99.99p100 (top 0.01%)\n\n**Deciles**\n\n-   p0p10 (bottom 10% of the population, i.e. first decile),\n-   p10p20 (next 10%, i.e. second decile),\n-   p20p30 (next 10%, i.e. third decile),\n-   p30p40 (next 10%, i.e. fourth decile),\n-   p40p50 (next 10%, i.e. fifth decile),\n-   p50p60 (next 10%, i.e. sixth decile),\n-   p60p70 (next 10%, i.e. seventh decile),\n-   p70p80 (next 10%, i.e. eighth decile),\n-   p80p90 (next 10%, i.e. ninth decile),\n\nFor each group percentiles, we provide the associated income or wealth\nshares, averages and thresholds.\n\n-   **group percentile shares** correspond to the income (or wealth)\n    share held by a given group percentile. For instance, the\n    fiscal income share of group p0p50 is the share of total fiscal\n    income captured by the bottom 50% group.\n-   **group percentile averages** correspond to the income or wealth\n    annual income (or wealth) average within a given group percentile\n    group. For instance, the fiscal income average of group p0p50 is the\n    average annual fiscal income of the bottom 50% group.\n-   **group percentile thresholds** correspond to the minimum income (or\n    wealth) level required to belong to a given group percentile. For\n    instance, the fiscal income threshold of group p90p100 is the\n    minimum annual fiscal income required to belong to the top 10%\n    group.\n\n::: {#imp-group-percentiles .callout-important}\nWhen the data allows, the [WID.world website](https://wid.world/) makes\nit possible to produce shares, averages and thresholds for any group\npercentile (say, for instance, average income of p43p99.92). These are\nnot stored in bulk data tables.\n:::\n\nFor certain countries, because of data limitations, we are not able to\nprovide the list of group percentiles described above. We instead store\nspecific group percentiles (these can be, depending on the countries\np90p95, p95p100, p95p99, p99.5p100, p99.5p99.9, p99.75p100, p99.95p100,\np99.95p99.99, p99.995p100, p99.9p99.95, p99.9p99.99 or p99p99.5).\n\n#### Generalized Percentiles\n\nGeneralized percentiles (g-percentiles) are defined to as follows: p0,\np1, p2, ..., p99, p99.1, p99.2, ..., p99.9, p99.91, p99.92, ..., p99.99,\np99.991, p99.992 ,..., p99.999. There are 127 g-percentiles in total.\n\nFor each g-percentiles, we provide shares, averages, top averages and\nthresholds.\n\n**g-percentile shares**\n\ncorrespond to the income (or wealth) share captured by the population\ngroup above a given g-percentile value.\n\n::: {#nte-g-percentile-shares .callout-note style=\"color: blue;\"}\n##### Examples for g-percentile shares\n\n-   The fiscal income share of g-percentile p90 corresponds to the\n    fiscal income share held by the top 10% group.\n-   The fiscal income share of g-percentile p99.9 corresponds to the\n    fiscal income share of the top 0.1% income group and so on.\n\nBy construction, the fiscal income share of g-percentile p0 corresponds\nto the share held by 100% of the population and is equal to 100%.\nFormally, the g-percentile share at g-percentile pX corresponds to the\nshare of the top (100-X)% group.\n:::\n\n**g-percentile averages**\n\ncorrespond to the average income or wealth between two consecutive\ng-percentiles.\n\n-   Average income of g-percentile `p0` corresponds to the average\n    annual income of the bottom 1% group, `p2` corresponds to the next\n    1% group and so on until `p98` (the 1% population group below the\n    top 1%).\n-   Average income of g-percentile `p99` corresponds to average annual\n    of group percentile `p99p99.1` (i.e. the bottom 10% group of earners\n    within the top 1% group of earners), `p99.1` corresponds to the next\n    0.1% group, `p99.2` corresponds to the next 0.1% group and so on\n    until `p99.8`.\n-   Average income of `p99.9` corresponds to the average annual income\n    of group percentile `p99.9p99.91` (i.e. the bottom 10% group of\n    earners within the top 0.1% group of earners), `p99.91` corresponds\n    to the next 0.01% group, `p99.92` corresponds to the next 0.01%\n    group and so on until `p99.98`.\n-   Average income of `p99.99`, corresponds to the average annual income\n    of group percentile `p99.99p99.991` (i.e. the bottom 10% group\n    within the top 0.01% group of earners), `p99.991` corresponds to the\n    next 0.001%, `p99.992` corresponds to the next 0.001% group and so\n    on until `p99.999` (average income of the top 0.001% group).\n\n::: {#nte-examples-g-percentile-averages .callout-note style=\"color: blue;\"}\n##### Examples for the g-percentile-averages\n\n-   The average fiscal income of g-percentile p50 is equal to the\n    average annual fiscal income of the p50p51 group percentile (i.e.\n    the average annual income of the population group earning more than\n    50% of the population and less than the top 49% of the population).\n-   The average fiscal income of g-percentile p99 is equal to the\n    average annual fiscal income within group percentile p99p99.1 (i.e.\n    a group representing 0.1% of the total population earning more than\n    99% of the population but less than the top 0.9% of the population).\n:::\n\n**g-percentile top-averages**\n\ncorrespond to the average income or wealth above a given g-percentile\nthreshold.\n\n::: {#nte-examples-g-percentile-top-averages .callout-note style=\"color: blue;\"}\n##### Examples for the g-percentile-top-averages\n\n-   The top average fiscal income at g-percentile p50 corresponds to the\n    average annual fiscal income of individuals earning more than 50% of\n    the population.\n-   The top average fiscal income at g-percentile p90 corresponds to the\n    average annual fiscal income of the top 10% group.\n:::\n\n**g-percentile thresholds**\n\ncorrespond to minimum income (or wealth) level required to belong to the\npopulation group above a given g-percentile value.\n\n::: {#nte-examples-g-percentile-thresholds .callout-note style=\"color: blue;\"}\n##### Examples for the g-percentile-thresholds\n\n-   The fiscal income threshold at g-percentile p90 corresponds to the\n    minimum annual fiscal income required to belong to the top 10%\n    group.\n-   The fiscal income threshold at g-percentile p99.9 corresponds to the\n    minimum annual fiscal income required to belong to the top 0.1%\n    group.\n\nFormally, the g-percentile threshold at g-percentile pX corresponds to\nthe threshold of the top (100-X)% group.\n:::\n\n## Resources {.unnumbered}\n\n::: my-resource\n::: my-resource-header\n::: {#lem-index-book-resources}\n: Resources used for this Quarto book\n:::\n:::\n\n::: my-resource-container\n**Literature**\n\n-   Alvaredo, F., Chancel, L., Piketty, T., Saez, E., & Zucman, G.\n    (2018). The World Inequality Report 2018. Harvard University Press.\n    [@alvaredo2018]\n-   Chancel, L., Piketty, T., Saez, E., Zucman, G., & Duflo, E. (2022).\n    World Inequality Report 2022. Harvard University Press.\n    [@chancel2022a]\n-   Gethin, A., Martínez-toleda, C., & Piketty, T. (2021). Political\n    Cleavages and Social Inequalities - A Study of Fifty Democracies,\n    1948-2020: A Study of Fifty Democracies, 1948–2020. Harvard\n    University Press. [@gethin2021]\n-   Piketty, T. (2020). Capital and Ideology (A. Goldhammer, Trans.;\n    Illustrated Edition). Harvard University Press. [@piketty2020a]\n-   Piketty, T. (2022). A Brief History of Equality (S. Rendall,\n    Trans.). Harvard University Press. [@piketty2022]\n-   Piketty, T., & Goldhammer, A. (2017). Capital in the Twenty-First\n    Century. Harvard University Press. [@piketty2017]\n\n**Websites**\n\n-   Author Collective \"World Inequality Lab\". (2024).\n    [WID](https://wid.world/) - World Inequality Database. WID. The\n    source for global inequality data. Open access, high quality wealth\n    and income inequality data developed by an international academic\n    consortium. [@worldinequalitylab2024]\n-   Gethin, A., Martinez-Toledo, C., & Piketty, T. (2024).\n    [WPID](https://wpid.world/) - World Political Cleavages and\n    Inequality Database. Who votes for whom? The WPID provides the most\n    comprehensive available data on the structure of the vote in\n    contemporary democracies, drawing on a rich set of electoral surveys\n    conducted since 1948. [@gethin2024]\n\n**Methodology**\n\n-   World Inequality Lab. (2024). Distributional National Accounts\n    Guidelines. [@worldinequalitylab2024a]\n-   Codes Dictionary. (n.d.). WID - World Inequality Database. Retrieved\n    June 28, 2024, from https://wid.world/codes-dictionary/.\n    [@worldinequalitylab2024b]\n-   Summary table. (n.d.). WID - World Inequality Database. Retrieved\n    June 28, 2024, from https://wid.world/summary-table/.\n    [@worldinequalitylab2024c]\n-   World Inequality Lab. (2024). Generalized Pareto interpolation.\n    WID - World Inequality Database. https://wid.world/gpinter/.\n    [@worldinequalitylab2024d]\n\n**R Packages**\n\n-   Blanchet, T. (2024). Thomasblanchet/gpinter \\[R\\].\n    https://github.com/thomasblanchet/gpinter (Original work published\n    2016). R package for generalized Pareto interpolation. [@gpinter].\n-   Blanchet, T. (2024). Thomasblanchet/wid-r-tool \\[R\\].\n    https://github.com/thomasblanchet/wid-r-tool (Original work\n    published 2017). R package to download data from the WID.world\n    database. [@wid]\n\n**Icons**\n\n-   <a target=\"_blank\" href=\"https://icons8.com/icon/04hoBXXdLoDq/austria\">Austria</a>\n    fav icon by <a target=\"_blank\" href=\"https://icons8.com\">Icons8</a>\n    But I have used many other icons by\n    <a target=\"_blank\" href=\"https://icons8.com\">Icons8</a> for the\n    Quarto callout boxes.\n-   [Favicon.io](https://favicon.io/favicon-converter/) — The Ultimate\n    Favicon Generator (Free). (n.d.). Retrieved June 26, 2024.\n:::\n:::\n\n## Session Info {.unnumbered}\n\n::: my-r-code\n::: my-r-code-header\nSession Info\n:::\n\n::: my-r-code-container\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ─ Session info ───────────────────────────────────────────────────────────────\n#>  setting  value\n#>  version  R version 4.4.2 (2024-10-31)\n#>  os       macOS Sequoia 15.1.1\n#>  system   x86_64, darwin20\n#>  ui       X11\n#>  language (EN)\n#>  collate  en_US.UTF-8\n#>  ctype    en_US.UTF-8\n#>  tz       Europe/Vienna\n#>  date     2024-11-27\n#>  pandoc   3.5 @ /usr/local/bin/ (via rmarkdown)\n#> \n#> ─ Packages ───────────────────────────────────────────────────────────────────\n#>  package     * version    date (UTC) lib source\n#>  base64enc     0.1-3      2015-07-28 [2] CRAN (R 4.4.0)\n#>  cli           3.6.3      2024-06-21 [2] CRAN (R 4.4.1)\n#>  commonmark    1.9.2      2024-10-04 [2] CRAN (R 4.4.1)\n#>  crayon        1.5.3      2024-06-20 [2] CRAN (R 4.4.0)\n#>  curl          6.0.0      2024-11-05 [2] CRAN (R 4.4.1)\n#>  digest        0.6.37     2024-08-19 [2] CRAN (R 4.4.1)\n#>  dplyr         1.1.4      2023-11-17 [2] CRAN (R 4.4.0)\n#>  evaluate      1.0.1      2024-10-10 [2] CRAN (R 4.4.1)\n#>  fansi         1.0.6      2023-12-08 [2] CRAN (R 4.4.0)\n#>  fastmap       1.2.0      2024-05-15 [2] CRAN (R 4.4.0)\n#>  generics      0.1.3      2022-07-05 [2] CRAN (R 4.4.0)\n#>  glossary    * 1.0.0.9003 2024-08-05 [2] Github (debruine/glossary@05e4a61)\n#>  glue          1.8.0      2024-09-30 [2] CRAN (R 4.4.1)\n#>  htmltools     0.5.8.1    2024-04-04 [2] CRAN (R 4.4.0)\n#>  htmlwidgets   1.6.4      2023-12-06 [2] CRAN (R 4.4.0)\n#>  jsonlite      1.8.9      2024-09-20 [2] CRAN (R 4.4.1)\n#>  knitr         1.49       2024-11-08 [2] CRAN (R 4.4.1)\n#>  lifecycle     1.0.4      2023-11-07 [2] CRAN (R 4.4.0)\n#>  magrittr      2.0.3      2022-03-30 [2] CRAN (R 4.4.0)\n#>  markdown      1.13       2024-06-04 [2] CRAN (R 4.4.0)\n#>  pillar        1.9.0      2023-03-22 [2] CRAN (R 4.4.0)\n#>  pkgconfig     2.0.3      2019-09-22 [2] CRAN (R 4.4.0)\n#>  purrr         1.0.2      2023-08-10 [2] CRAN (R 4.4.0)\n#>  R6            2.5.1      2021-08-19 [2] CRAN (R 4.4.0)\n#>  repr          1.1.7      2024-03-22 [2] CRAN (R 4.4.0)\n#>  rlang         1.1.4      2024-06-04 [2] CRAN (R 4.4.0)\n#>  rmarkdown     2.29       2024-11-04 [2] CRAN (R 4.4.1)\n#>  rstudioapi    0.17.1     2024-10-22 [2] CRAN (R 4.4.1)\n#>  rversions     2.1.2      2022-08-31 [2] CRAN (R 4.4.0)\n#>  sessioninfo   1.2.2      2021-12-06 [2] CRAN (R 4.4.0)\n#>  skimr         2.1.5      2022-12-23 [2] CRAN (R 4.4.0)\n#>  stringi       1.8.4      2024-05-06 [2] CRAN (R 4.4.0)\n#>  stringr       1.5.1      2023-11-14 [2] CRAN (R 4.4.0)\n#>  tibble        3.2.1      2023-03-20 [2] CRAN (R 4.4.0)\n#>  tidyr         1.3.1      2024-01-24 [2] CRAN (R 4.4.0)\n#>  tidyselect    1.2.1      2024-03-11 [2] CRAN (R 4.4.0)\n#>  utf8          1.2.4      2023-10-22 [2] CRAN (R 4.4.0)\n#>  vctrs         0.6.5      2023-12-01 [2] CRAN (R 4.4.0)\n#>  withr         3.0.2      2024-10-28 [2] CRAN (R 4.4.1)\n#>  xfun          0.49       2024-10-31 [2] CRAN (R 4.4.1)\n#>  xml2          1.3.6      2023-12-04 [2] CRAN (R 4.4.0)\n#>  yaml          2.3.10     2024-07-26 [2] CRAN (R 4.4.0)\n#> \n#>  [1] /Library/Frameworks/R.framework/Versions/4.4-x86_64/library\n#>  [2] /Library/Frameworks/R.framework/Versions/4.4-x86_64/Resources/library\n#> \n#> ──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}